{"version":3,"file":"static/js/742.55526a51.chunk.js","mappings":"wJAGA,MAgDA,EAhDoBA,KAClB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,QAAS,MAClEC,EAASC,IAAcL,EAAAA,EAAAA,WAAS,IAChCM,EAASC,IAAcP,EAAAA,EAAAA,WAAS,IAChCQ,EAAOC,IAAYT,EAAAA,EAAAA,UAAS,MAE7BU,EAAgBC,IACpBZ,EAAYa,IAAI,IAAUA,EAAM,CAACD,EAAEE,OAAOZ,MAAOU,EAAEE,OAAOC,UA0B5D,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAxBaC,UACnBN,EAAEO,iBACFb,GAAW,GACXE,GAAW,GACXE,EAAS,MAET,IAOE,WANuBU,MAAM,6CAA8C,CACzEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU1B,MAGT2B,GAAI,MAAM,IAAIC,MAAM,0BAClCnB,GAAW,GACXR,EAAY,CAAEE,KAAM,GAAIC,MAAO,GAAIC,QAAS,IAC9C,CAAE,MAAOwB,GACPlB,EAASkB,EAAIxB,QACf,CAAC,QACCE,GAAW,EACb,GAI6BuB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAO5B,KAAK,OAAOa,MAAOhB,EAASG,KAAM6B,SAAUpB,EAAcqB,YAAY,YAAYC,UAAQ,KACjGH,EAAAA,EAAAA,KAAA,SAAO5B,KAAK,QAAQa,MAAOhB,EAASI,MAAO4B,SAAUpB,EAAcqB,YAAY,aAAaC,UAAQ,KAC1GH,EAAAA,EAAAA,KAAA,YAAU5B,KAAK,UAAUa,MAAOhB,EAASK,QAAS2B,SAAUpB,EAAcqB,YAAY,UAAUC,UAAQ,IAEjG5B,IAAWyB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACdpB,IAASqB,EAAAA,EAAAA,KAAA,KAAGI,MAAO,CAAEC,MAAO,OAAQN,SAAEpB,IACtCF,IAAWuB,EAAAA,EAAAA,KAAA,KAAGI,MAAO,CAAEC,MAAO,SAAUN,SAAC,gCAE1CC,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAASC,SAAUhC,EAAQwB,SAAC,oB","sources":["pages/public/ContactPage.js"],"sourcesContent":["// TODO: Replace dummy endpoint with real contact API URL when provided by the client.\r\n\r\nimport { useState } from 'react';\r\nconst ContactPage = () => {\r\n  const [formData, setFormData] = useState({ name: '', email: '', message: '' });\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData(prev => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setSuccess(false);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Message failed to send');\r\n      setSuccess(true);\r\n      setFormData({ name: '', email: '', message: '' });\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input name=\"name\" value={formData.name} onChange={handleChange} placeholder=\"Your Name\" required />\r\n      <input name=\"email\" value={formData.email} onChange={handleChange} placeholder=\"Your Email\" required />\r\n<textarea name=\"message\" value={formData.message} onChange={handleChange} placeholder=\"Message\" required />\r\n\r\n      {loading && <p>Sending...</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>Message sent successfully!</p>}\r\n\r\n      <button type=\"submit\" disabled={loading}>Send Message</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n"],"names":["ContactPage","formData","setFormData","useState","name","email","message","loading","setLoading","success","setSuccess","error","setError","handleChange","e","prev","target","value","_jsxs","onSubmit","async","preventDefault","fetch","method","headers","body","JSON","stringify","ok","Error","err","children","_jsx","onChange","placeholder","required","style","color","type","disabled"],"sourceRoot":""}