{"version":3,"file":"static/js/709.45681aa9.chunk.js","mappings":"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","sources":["components/WebsiteInquiryForm.js","components/BookingCard.js","pages/customer/CustomerDashboardPage.js","utils/guestActivity.js","components/BookingContactForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify'; // Import toast\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nconst WebsiteInquiryForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    phone: '',\r\n    description: '',\r\n    budget: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  // Removed submissionStatus as toast will handle feedback\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n    if (!formData.fullName) newErrors.fullName = 'Full Name is required.';\r\n    if (!formData.email) {\r\n      newErrors.email = 'Email is required.';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'Email address is invalid.';\r\n    }\r\n    if (!formData.description) newErrors.description = 'Project Description is required.';\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => { // Made async\r\n    e.preventDefault();\r\n    if (!validate()) return;\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      // Simulate an async API call\r\n      await new Promise(resolve => setTimeout(resolve, 2000)); // Simulate network delay\r\n\r\n      // TODO: Replace this with a real API call\r\n      const isSuccess = Math.random() > 0.2; // 80% chance of success\r\n\r\n      if (isSuccess) {\r\n        toast.success('Thank you for your inquiry! We will get back to you shortly.');\r\n        setFormData({\r\n          fullName: '',\r\n          email: '',\r\n          phone: '',\r\n          description: '',\r\n          budget: '',\r\n        });\r\n      } else {\r\n        toast.error('Something went wrong. Please try again later.');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Inquiry submission failed:\", error);\r\n      toast.error(\"Failed to submit inquiry. Please try again.\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Build Your Website Inquiry</h2>\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <div>\r\n          <label htmlFor=\"fullName\">Full Name *</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"fullName\"\r\n            name=\"fullName\"\r\n            value={formData.fullName}\r\n            onChange={handleChange}\r\n            aria-label=\"Full Name\"\r\n          />\r\n          {errors.fullName && <p>{errors.fullName}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email *</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            aria-label=\"Email Address\"\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"phone\">Phone</label>\r\n          <input\r\n            type=\"tel\"\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            value={formData.phone}\r\n            onChange={handleChange}\r\n            aria-label=\"Phone Number\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"description\">Project Description *</label>\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            aria-label=\"Project Description\"\r\n          ></textarea>\r\n          {errors.description && <p>{errors.description}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"budget\">Preferred Budget</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"budget\"\r\n            name=\"budget\"\r\n            value={formData.budget}\r\n            onChange={handleChange}\r\n            aria-label=\"Preferred Budget\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={isSubmitting} aria-label=\"Submit Inquiry\"\r\n          className=\"px-8 py-3 bg-gold text-yellow font-bold rounded-lg hover:bg-gold-hover transition duration-300 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          {isSubmitting ? 'Submitting...' : 'Submit Inquiry'}\r\n        </button>\r\n      </form>\r\n      {isSubmitting && <LoadingSpinner />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebsiteInquiryForm;\r\n","import React from 'react';\r\n\r\nconst BookingCard = ({ booking }) => {\r\n  return (\r\n    <li className=\"flex justify-between items-center py-2 border-b border-gray-200\">\r\n      <div>\r\n        <p className=\"text-gray-700 font-medium\">{booking.service}</p>\r\n        <p className=\"text-sm text-gray-500\">{booking.date}</p>\r\n      </div>\r\n      <button className=\"text-[#ECBE07] hover:text-[#d4a806] font-medium text-sm\">View Details</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default BookingCard;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BookingContactForm from '../../components/BookingContactForm';\r\nimport WebsiteInquiryForm from '../../components/WebsiteInquiryForm';\r\nimport { clearGuestActivities } from '../../utils/guestActivity';\r\nimport BookingCard from '../../components/BookingCard';\r\n// Import Header and Footer components\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\n\r\nconst CustomerDashboardPage = () => {\r\n  // Placeholder for customer data - in a real app, this would come from an API\r\n  const customerData = {\r\n    name: 'John Doe',\r\n    recentBookings: [\r\n      { id: 1, service: 'Oil Change', date: '2023-10-26' },\r\n      { id: 2, service: 'Tire Rotation', date: '2023-11-15' },\r\n    ],\r\n    services: [\r\n      { id: 101, name: 'Engine Diagnostics', status: 'Completed' },\r\n      { id: 102, name: 'Brake Inspection', status: 'Pending' },\r\n    ],\r\n    accountDetails: {\r\n      email: 'john.doe@example.com',\r\n      memberSince: '2022-01-10',\r\n    },\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    // Simulate logout: clear any user session data\r\n    // In a real app, you would clear tokens, user info from context/state management\r\n    console.log('User logged out.');\r\n    clearGuestActivities(); // Clear any lingering guest activities on logout\r\n    navigate('/login'); // Redirect to login page\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-8\">\r\n      <Helmet>\r\n        <title>Musibau AutoWorks - Customer Dashboard</title>\r\n        <meta name=\"description\" content=\"Welcome to your Musibau AutoWorks customer dashboard.\" />\r\n      </Helmet>\r\n\r\n      {/* Header Component */}\r\n      <Header />\r\n\r\n      <div className=\"max-w-7xl mx-auto py-10\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-4xl font-bold text-[#004040]\">Welcome, {customerData.name}!</h1>\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n        <p className=\"text-lg text-gray-700 mb-8\">Your hub for managing all your vehicle needs with Musibau AutoWorks.</p>\r\n\r\n        {/* Account Details Section */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mt-8\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-md md:col-span-1\">\r\n            <h2 className=\"text-2xl font-semibold text-[#004040] mb-4\">Account Details</h2>\r\n            <p className=\"text-gray-600\">Email: <span className=\"font-medium\">{customerData.accountDetails.email}</span></p>\r\n            <p className=\"text-gray-600\">Member Since: <span className=\"font-medium\">{customerData.accountDetails.memberSince}</span></p>\r\n          </div>\r\n\r\n          {/* Recent Bookings Section */}\r\n          <div className=\"bg-white p-6 rounded-lg shadow-md md:col-span-2\">\r\n            <h2 className=\"text-2xl font-semibold text-[#004040] mb-4\">Recent Bookings</h2>\r\n            {customerData.recentBookings.length > 0 ? (\r\n              <ul className=\"space-y-3\">\r\n                {customerData.recentBookings.slice(0, 3).map((booking) => (\r\n                  <BookingCard key={booking.id} booking={booking} />\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p className=\"text-gray-500\">No recent bookings found.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 py-10\">\r\n          {/* Booking Form Section */}\r\n          <div className=\"bg-white p-6 rounded-lg shadow-md lg:col-span-1\">\r\n            <h2 className=\"text-2xl font-semibold text-[#004040] mb-4\">Book a Service</h2>\r\n            <p className=\"text-gray-600\">Easily schedule your next vehicle service.</p>\r\n            <div className=\"mt-4\">\r\n              <BookingContactForm isDashboard={true} />\r\n            </div>\r\n            <button\r\n              onClick={() => navigate('/booking')}\r\n              className=\"mt-4 w-full py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-[#ECBE07] hover:bg-[#d4a806] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#ECBE07]\"\r\n            >\r\n              Go to Booking Page\r\n            </button>\r\n          </div>\r\n\r\n          {/* Service List Section */}\r\n          <div className=\"bg-white p-6 rounded-lg shadow-md lg:col-span-2\">\r\n            <h2 className=\"text-3xl font-bold text-[#004040] mb-4\">Your Services & History</h2>\r\n            {customerData.services.length > 0 ? (\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Service Name</th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {customerData.services.map((service) => (\r\n                      <tr key={service.id}>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{service.name}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{service.status}</td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                          <button className=\"text-[#ECBE07] hover:text-[#d4a806]\">View</button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-gray-500\">No services found. Book your first service today!</p>\r\n            )}\r\n            <button\r\n              onClick={() => navigate('/services')}\r\n              className=\"py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-[#ECBE07] hover:bg-[#d4a806] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#ECBE07]\"\r\n            >\r\n              View All Services\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mt-8\">\r\n          {/* Product Catalog Section */}\r\n          <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\r\n            <h2 className=\"text-2xl font-semibold text-[#004040] mb-4\">Explore Our Products</h2>\r\n            <p className=\"text-gray-600\">Browse our catalog of quality auto parts and accessories.</p>\r\n            <div className=\"mt-4\">\r\n            </div>\r\n            <button\r\n              onClick={() => navigate('/products')}\r\n              className=\"py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-[#ECBE07] hover:bg-[#d4a806] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#ECBE07]\"\r\n            >\r\n              View All Products\r\n            </button>\r\n          </div>\r\n\r\n          {/* Contact Section */}\r\n          <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\r\n            <h2 className=\"text-2xl font-semibold text-[#004040] mb-4\">Need Assistance?</h2>\r\n            <p className=\"text-gray-600\">Contact us directly for any inquiries or support.</p>\r\n            <div className=\"mt-4\">\r\n              <WebsiteInquiryForm isDashboard={true} />\r\n            </div>\r\n            <button\r\n              onClick={() => navigate('/contact')}\r\n              className=\"py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-[#ECBE07] hover:bg-[#d4a806] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#ECBE07]\"\r\n            >\r\n              Contact Support\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Footer Component */}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerDashboardPage;\r\n","// frontend/src/utils/guestActivity.js\r\n\r\nconst GUEST_ACTIVITY_KEY = 'guestActivity';\r\n\r\n/**\r\n * Retrieves all guest activities from local storage.\r\n * @returns {Array} An array of guest activity objects.\r\n */\r\nexport const getGuestActivities = () => {\r\n  try {\r\n    const activities = localStorage.getItem(GUEST_ACTIVITY_KEY);\r\n    return activities ? JSON.parse(activities) : [];\r\n  } catch (error) {\r\n    console.error(\"Error retrieving guest activities from local storage:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Adds a new guest activity to local storage.\r\n * @param {object} activity - The guest activity object to add.\r\n */\r\nexport const addGuestActivity = (activity) => {\r\n  try {\r\n    const activities = getGuestActivities();\r\n    activities.push({ ...activity, timestamp: new Date().toISOString() });\r\n    localStorage.setItem(GUEST_ACTIVITY_KEY, JSON.stringify(activities));\r\n  } catch (error) {\r\n    console.error(\"Error adding guest activity to local storage:\", error);\r\n  }\r\n};\r\n\r\n/**\r\n * Clears all guest activities from local storage.\r\n */\r\nexport const clearGuestActivities = () => {\r\n  try {\r\n    localStorage.removeItem(GUEST_ACTIVITY_KEY);\r\n  } catch (error) {\r\n    console.error(\"Error clearing guest activities from local storage:\", error);\r\n  }\r\n};\r\n\r\n/**\r\n * Example guest data structure:\r\n * {\r\n *   type: 'booking', // or 'product_view', 'inquiry', etc.\r\n *   details: {\r\n *     service: 'Tire Repair',\r\n *     date: '2025-08-10',\r\n *     // other relevant details\r\n *   },\r\n *   timestamp: '2025-08-08T12:00:00.000Z'\r\n * }\r\n */\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { toast } from 'react-toastify'; // Import toast\r\nimport { addGuestActivity } from '../utils/guestActivity';\r\n\r\nconst BookingContactForm = ({ isDashboard = false }) => {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const serviceFromQuery = searchParams.get('service');\r\n\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    serviceType: '',\r\n    preferredDate: '',\r\n    message: '',\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false); // New state for submission status\r\n\r\n  useEffect(() => {\r\n    if (serviceFromQuery) {\r\n      const decodedService = decodeURIComponent(serviceFromQuery);\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        message: `Request: ${decodedService}`,\r\n        serviceType: decodedService,\r\n      }));\r\n    }\r\n  }, [serviceFromQuery]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => { // Made async to simulate API call\r\n    e.preventDefault();\r\n    setIsSubmitting(true); // Set submitting state to true\r\n\r\n    if (\r\n      !formData.fullName ||\r\n      !formData.email ||\r\n      !formData.phoneNumber ||\r\n      !formData.serviceType ||\r\n      !formData.preferredDate ||\r\n      !formData.message\r\n    ) {\r\n      toast.error('Please fill in all required fields.'); // Use toast for error\r\n      setIsSubmitting(false); // Reset submitting state\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate network delay\r\n\r\n      console.log('Form submitted:', formData);\r\n      toast.success('Your request has been submitted successfully! We will contact you shortly.'); // Use toast for success\r\n\r\n      // Add guest activity if not on the dashboard (assuming dashboard implies logged in)\r\n      if (!isDashboard) {\r\n        addGuestActivity({\r\n          type: 'booking',\r\n          details: formData,\r\n        });\r\n        toast.info(\"Booking saved! Login to track it.\"); // Toast for guest booking\r\n      }\r\n\r\n      setFormData({\r\n        fullName: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        serviceType: '',\r\n        preferredDate: '',\r\n        message: '',\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Booking submission failed:\", error);\r\n      toast.error(\"Failed to submit booking. Please try again.\");\r\n    } finally {\r\n      setIsSubmitting(false); // Reset submitting state to false\r\n    }\r\n  };\r\n\r\n  const serviceOptions = [\r\n    'Engine Repair',\r\n    'Painting',\r\n    'Tire Rotation',\r\n    'Brake Service',\r\n    'Oil Change',\r\n    'Other',\r\n  ];\r\n\r\n  const isMessageAutofilled = formData.message.startsWith('Request: ');\r\n\r\n  return (\r\n    <div className={isDashboard ? \"\" : \"bg-[#0B0D1F] py-10 px-6 md:px-20\"}>\r\n      <div className={isDashboard ? \"\" : \"container mx-auto\"}>\r\n        {!isDashboard && (\r\n          <h2 className=\"text-3xl font-bold text-center text-white mb-8 py-10\">Book Your Service or Contact Us</h2>\r\n        )}\r\n        <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {/* Full Name */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"fullName\" className=\"text-white mb-2\">Full Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"fullName\"\r\n              name=\"fullName\"\r\n              value={formData.fullName}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"p-3 rounded-lg border border-gold focus:border-gold-focus bg-transparent text-white placeholder-gray-400 focus:outline-none\"\r\n              placeholder=\"Enter your full name\"\r\n            />\r\n          </div>\r\n\r\n          {/* Email */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"email\" className=\"text-white mb-2\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"p-3 rounded-lg border border-gold focus:border-gold-focus bg-transparent text-white placeholder-gray-400 focus:outline-none\"\r\n              placeholder=\"Enter your email address\"\r\n            />\r\n          </div>\r\n\r\n          {/* Phone Number */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"phoneNumber\" className=\"text-white mb-2\">Phone Number</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              value={formData.phoneNumber}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"p-3 rounded-lg border border-gold focus:border-gold-focus bg-transparent text-white placeholder-gray-400 focus:outline-none\"\r\n              placeholder=\"Enter your phone number\"\r\n            />\r\n          </div>\r\n\r\n          {/* Service Type */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"serviceType\" className=\"text-white mb-2\">Service Type</label>\r\n            <select\r\n              id=\"serviceType\"\r\n              name=\"serviceType\"\r\n              value={formData.serviceType}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"p-3 rounded-lg border border-gold focus:border-gold-focus bg-transparent text-white placeholder-gray-400 focus:outline-none appearance-none\"\r\n            >\r\n              <option value=\"\" disabled className=\"bg-gray-800 text-gray-400\">Select a service</option>\r\n              {serviceOptions.map((option) => (\r\n                <option key={option} value={option} className=\"bg-gray-800 text-white\">\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div className=\"absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none\">\r\n              <svg className=\"w-4 h-4 fill-current text-gray-400\" viewBox=\"0 0 20 20\"><path d=\"M7 10l3 3 3-3z\"/></svg>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Preferred Date */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"preferredDate\" className=\"text-white mb-2\">Preferred Date</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"preferredDate\"\r\n              name=\"preferredDate\"\r\n              value={formData.preferredDate}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"p-3 rounded-lg border border-gold focus:border-gold-focus bg-transparent text-white placeholder-gray-400 focus:outline-none\"\r\n            />\r\n          </div>\r\n\r\n          {/* Message */}\r\n          <div className=\"flex flex-col md:col-span-2\">\r\n            <label htmlFor=\"message\" className=\"text-white mb-2\">Message</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n              rows=\"5\"\r\n              required\r\n              className={`p-3 rounded-lg border border-gold focus:border-gold-focus bg-transparent text-white placeholder-gray-400 focus:outline-none resize-none ${\r\n                isMessageAutofilled ? 'border-yellow-500' : ''\r\n              }`}\r\n              placeholder=\"Enter your message\"\r\n            ></textarea>\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <div className=\"md:col-span-2 flex justify-center\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-8 py-3 bg-gold text-yellow font-bold rounded-lg hover:bg-gold-hover transition duration-300 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              disabled={isSubmitting} // Disable button when submitting\r\n            >\r\n              {isSubmitting ? 'Submitting...' : 'Submit Request'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingContactForm;\r\n"],"names":["WebsiteInquiryForm","formData","setFormData","useState","fullName","email","phone","description","budget","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","e","name","value","target","_jsxs","children","_jsx","onSubmit","async","preventDefault","validate","newErrors","test","Object","keys","length","Promise","resolve","setTimeout","Math","random","toast","success","error","console","noValidate","htmlFor","type","id","onChange","disabled","className","LoadingSpinner","_ref","booking","service","date","CustomerDashboardPage","customerData","recentBookings","services","status","accountDetails","memberSince","navigate","useNavigate","Helmet","content","Header","onClick","handleLogout","log","clearGuestActivities","slice","map","BookingCard","BookingContactForm","isDashboard","scope","Footer","GUEST_ACTIVITY_KEY","getGuestActivities","activities","localStorage","getItem","JSON","parse","addGuestActivity","activity","push","timestamp","Date","toISOString","setItem","stringify","removeItem","location","useLocation","serviceFromQuery","URLSearchParams","search","get","phoneNumber","serviceType","preferredDate","message","useEffect","decodedService","decodeURIComponent","prevData","isMessageAutofilled","startsWith","details","info","required","placeholder","option","viewBox","d","rows"],"sourceRoot":""}