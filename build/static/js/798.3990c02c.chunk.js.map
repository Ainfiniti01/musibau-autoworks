{"version":3,"file":"static/js/798.3990c02c.chunk.js","mappings":"qLAKA,MA0GA,EA1GkBA,KAChB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,CAAEC,QAAS,GAAIC,KAAM,MACjDC,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,CAAC,GAChCK,GAAWC,EAAAA,EAAAA,MAgCjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uFAAsFC,SAAA,EACnGF,EAAAA,EAAAA,MAACG,EAAAA,EAAM,CAAAD,SAAA,EACLE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,+BACPE,EAAAA,EAAAA,KAAA,QAAMC,KAAK,cAAcC,QAAQ,0DAEnCN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8DAA6DC,SAAA,EAC1EE,EAAAA,EAAAA,KAAA,MAAIH,UAAU,qDAAoDC,SAAC,kBACnEF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,iBAAiBM,SA3BlBC,UACnBC,EAAEC,iBACF,MAAMC,EAAW,IAAIC,SAASH,EAAEI,QAG1BC,EAhBcC,KACpB,MAAMC,EAAY,CAAC,EAOnB,OANKD,EAAKE,MAEE,eAAeC,KAAKH,EAAKE,SACnCD,EAAUC,MAAQ,4BAFlBD,EAAUC,MAAQ,oBAIfF,EAAKI,WAAUH,EAAUG,SAAW,wBAClCH,GAQkBI,CAFZC,OAAOC,YAAYX,EAASY,YAGzC1B,EAAUiB,GAEmC,IAAzCO,OAAOG,KAAKV,GAAkBW,SAIhCjC,EAAS,CAAEE,QAAS,oBAAqBC,KAAM,YAC/C+B,WAAW,KACT5B,EAAS,eACR,QAYuDI,SAAA,EACtDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,QAAQ1B,UAAU,UAASC,SAAC,mBAC3CE,EAAAA,EAAAA,KAAA,SACEwB,GAAG,QACHvB,KAAK,QACLV,KAAK,QACLkC,aAAa,QACbC,UAAQ,EACR7B,UAAW,uEAAuEL,EAAOqB,MAAQ,iBAAmB,2JACpHc,YAAY,gBACZ,aAAW,kBAEZnC,EAAOqB,QAASb,EAAAA,EAAAA,KAAA,KAAGH,UAAU,8BAA6BC,SAAEN,EAAOqB,YAEtEjB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,WAAW1B,UAAU,UAASC,SAAC,cAC9CE,EAAAA,EAAAA,KAAA,SACEwB,GAAG,WACHvB,KAAK,WACLV,KAAK,WACLkC,aAAa,mBACbC,UAAQ,EACR7B,UAAW,uEAAuEL,EAAOuB,SAAW,iBAAmB,2JACvHY,YAAY,WACZ,aAAW,aAEZnC,EAAOuB,WAAYf,EAAAA,EAAAA,KAAA,KAAGH,UAAU,8BAA6BC,SAAEN,EAAOuB,eAGzEnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCE,EAAAA,EAAAA,KAAA,SACEwB,GAAG,cACHvB,KAAK,cACLV,KAAK,WACLM,UAAU,yEAEZG,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,cAAc1B,UAAU,mCAAkCC,SAAC,oBAI5EE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,UAASC,UACtBE,EAAAA,EAAAA,KAAA,KAAG4B,KAAK,IAAI/B,UAAU,kDAAiDC,SAAC,gCAM5EE,EAAAA,EAAAA,KAAA,UACET,KAAK,SACLM,UAAU,mOACV,aAAW,eAAcC,SAC1B,iBAKLE,EAAAA,EAAAA,KAAC6B,EAAAA,EAAgB,CAACvC,QAASH,EAAMG,QAASC,KAAMJ,EAAMI,U","sources":["pages/customer/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport ToastPlaceholder from '../../components/ToastPlaceholder';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\n\r\nconst LoginPage = () => {\r\n  const [toast, setToast] = useState({ message: '', type: '' });\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate(); // Initialize navigate\r\n\r\n  const validateForm = (data) => {\r\n    const newErrors = {};\r\n    if (!data.email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\r\n      newErrors.email = 'Email address is invalid';\r\n    }\r\n    if (!data.password) newErrors.password = 'Password is required';\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => { // Make handleSubmit async\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const data = Object.fromEntries(formData.entries());\r\n\r\n    const validationErrors = validateForm(data);\r\n    setErrors(validationErrors);\r\n\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      // Simulate a successful login\r\n      // In a real app, you would make an API call here\r\n      // For now, we'll simulate success and redirect\r\n      setToast({ message: 'Login successful!', type: 'success' });\r\n      setTimeout(() => {\r\n        navigate('/dashboard'); // Redirect to dashboard\r\n      }, 1500); // Delay redirect to show toast message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <Helmet>\r\n        <title>Musibau AutoWorks - Login</title>\r\n        <meta name=\"description\" content=\"Login to your Musibau AutoWorks customer account.\" />\r\n      </Helmet>\r\n      <div className=\"max-w-md w-full space-y-8 bg-white p-8 rounded-lg shadow-md\">\r\n        <h2 className=\"text-center text-3xl font-extrabold text-[#004040]\">Welcome Back</h2>\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"sr-only\">Email address</label>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              required\r\n              className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${errors.email ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\r\n              placeholder=\"Email address\"\r\n              aria-label=\"Email Address\"\r\n            />\r\n            {errors.email && <p className=\"text-red-500 text-xs italic\">{errors.email}</p>}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              required\r\n              className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${errors.password ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\r\n              placeholder=\"Password\"\r\n              aria-label=\"Password\"\r\n            />\r\n            {errors.password && <p className=\"text-red-500 text-xs italic\">{errors.password}</p>}\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember-me\"\r\n                name=\"remember-me\"\r\n                type=\"checkbox\"\r\n                className=\"h-4 w-4 text-[#ECBE07] focus:ring-[#ECBE07] border-gray-300 rounded\"\r\n              />\r\n              <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                Remember me\r\n              </label>\r\n            </div>\r\n            <div className=\"text-sm\">\r\n              <a href=\"#\" className=\"font-medium text-[#ECBE07] hover:text-[#d4a806]\">\r\n                Forgot your password?\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-[#ECBE07] hover:bg-[#d4a806] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#ECBE07]\"\r\n            aria-label=\"Login Button\"\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <ToastPlaceholder message={toast.message} type={toast.type} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["LoginPage","toast","setToast","useState","message","type","errors","setErrors","navigate","useNavigate","_jsxs","className","children","Helmet","_jsx","name","content","onSubmit","async","e","preventDefault","formData","FormData","target","validationErrors","data","newErrors","email","test","password","validateForm","Object","fromEntries","entries","keys","length","setTimeout","htmlFor","id","autoComplete","required","placeholder","href","ToastPlaceholder"],"sourceRoot":""}