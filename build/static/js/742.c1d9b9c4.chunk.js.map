{"version":3,"file":"static/js/742.c1d9b9c4.chunk.js","mappings":"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","sources":["components/WebsiteInquiryForm.js","components/SectionWrapper.js","pages/public/ContactPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nconst WebsiteInquiryForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    phone: '',\r\n    description: '',\r\n    budget: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submissionStatus, setSubmissionStatus] = useState(null); // 'success' or 'error'\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n    if (!formData.fullName) newErrors.fullName = 'Full Name is required.';\r\n    if (!formData.email) {\r\n      newErrors.email = 'Email is required.';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'Email address is invalid.';\r\n    }\r\n    if (!formData.description) newErrors.description = 'Project Description is required.';\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validate()) return;\r\n\r\n    setIsSubmitting(true);\r\n    setSubmissionStatus(null);\r\n\r\n    // Simulate an async API call\r\n    setTimeout(() => {\r\n      // TODO: Replace this with a real API call\r\n      const isSuccess = Math.random() > 0.2; // 80% chance of success\r\n\r\n      if (isSuccess) {\r\n        setSubmissionStatus('success');\r\n        setFormData({\r\n          fullName: '',\r\n          email: '',\r\n          phone: '',\r\n          description: '',\r\n          budget: '',\r\n        });\r\n      } else {\r\n        setSubmissionStatus('error');\r\n      }\r\n      setIsSubmitting(false);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Build Your Website Inquiry</h2>\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <div>\r\n          <label htmlFor=\"fullName\">Full Name *</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"fullName\"\r\n            name=\"fullName\"\r\n            value={formData.fullName}\r\n            onChange={handleChange}\r\n            aria-label=\"Full Name\"\r\n          />\r\n          {errors.fullName && <p>{errors.fullName}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email *</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            aria-label=\"Email Address\"\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"phone\">Phone</label>\r\n          <input\r\n            type=\"tel\"\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            value={formData.phone}\r\n            onChange={handleChange}\r\n            aria-label=\"Phone Number\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"description\">Project Description *</label>\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            aria-label=\"Project Description\"\r\n          ></textarea>\r\n          {errors.description && <p>{errors.description}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"budget\">Preferred Budget</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"budget\"\r\n            name=\"budget\"\r\n            value={formData.budget}\r\n            onChange={handleChange}\r\n            aria-label=\"Preferred Budget\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={isSubmitting} aria-label=\"Submit Inquiry\">\r\n          {isSubmitting ? 'Submitting...' : 'Submit Inquiry'}\r\n        </button>\r\n      </form>\r\n      {isSubmitting && <LoadingSpinner />}\r\n      {submissionStatus === 'success' && (\r\n        <p>Thank you for your inquiry! We will get back to you shortly.</p>\r\n      )}\r\n      {submissionStatus === 'error' && (\r\n        <p>Something went wrong. Please try again later.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebsiteInquiryForm;\r\n","import React from 'react';\r\n\r\nconst SectionWrapper = ({ children }) => {\r\n  return (\r\n    <section>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SectionWrapper;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport WebsiteInquiryForm from '../../components/WebsiteInquiryForm';\r\nimport SectionWrapper from '../../components/SectionWrapper';\r\nimport { FaPhone, FaEnvelope, FaMapMarkedAlt } from 'react-icons/fa';\r\n\r\nconst ContactPage = () => {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Musibau AutoWorks - Contact Us</title>\r\n        <meta name=\"description\" content=\"Get in touch with Musibau AutoWorks for all your automotive needs.\" />\r\n      </Helmet>\r\n      <SectionWrapper>\r\n        <h1>Contact Us</h1>\r\n        <p>We'd love to hear from you!</p>\r\n        <div>\r\n          <h2>Get in Touch</h2>\r\n          <p>\r\n            <strong>Phone:</strong> <FaPhone /> +1 (123) 456-7890\r\n          </p>\r\n          <p>\r\n            <strong>Email:</strong> <FaEnvelope /> info@musibauautoworks.com\r\n          </p>\r\n          <p>\r\n            <strong>Address:</strong> <FaMapMarkedAlt /> 123 Auto Lane, Car City, CA 90210\r\n          </p>\r\n        </div>\r\n      </SectionWrapper>\r\n\r\n      <SectionWrapper>\r\n        <h2>Send us a message</h2>\r\n        <WebsiteInquiryForm />\r\n      </SectionWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n"],"names":["WebsiteInquiryForm","formData","setFormData","useState","fullName","email","phone","description","budget","errors","setErrors","isSubmitting","setIsSubmitting","submissionStatus","setSubmissionStatus","handleChange","e","name","value","target","_jsxs","children","_jsx","onSubmit","preventDefault","validate","newErrors","test","Object","keys","length","setTimeout","Math","random","noValidate","htmlFor","type","id","onChange","disabled","LoadingSpinner","_ref","ContactPage","Helmet","content","SectionWrapper","FaPhone","FaEnvelope","FaMapMarkedAlt"],"sourceRoot":""}