{"version":3,"file":"static/js/572.03e04fac.chunk.js","mappings":"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","sources":["pages/customer/RegistrationPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst RegistrationPage = () => {\r\n  const [accountType, setAccountType] = useState('customer');\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleAccountTypeChange = (event) => {\r\n    setAccountType(event.target.value);\r\n  };\r\n\r\n  const validateForm = (data) => {\r\n    const newErrors = {};\r\n    if (!data.name) newErrors.name = 'Name is required';\r\n    if (!data.email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\r\n      newErrors.email = 'Email address is invalid';\r\n    }\r\n    if (!data.password) newErrors.password = 'Password is required';\r\n    if (data.password !== data['confirm-password']) newErrors['confirm-password'] = 'Passwords do not match';\r\n\r\n    if (accountType === 'organization') {\r\n      if (!data.companyName) newErrors.companyName = 'Company Name is required';\r\n      if (!data.rcNumber) newErrors.rcNumber = 'RC Number is required';\r\n      if (!data.contactPerson) newErrors.contactPerson = 'Contact Person is required';\r\n    }\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData(event.target);\r\n    const data = Object.fromEntries(formData.entries());\r\n    data.accountType = accountType;\r\n\r\n    const validationErrors = validateForm(data);\r\n    setErrors(validationErrors);\r\n\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      console.log('Form submitted:', data);\r\n      // TODO: Implement actual submission logic here\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <Helmet>\r\n        <title>Musibau AutoWorks - Register</title>\r\n        <meta name=\"description\" content=\"Register for a new Musibau AutoWorks customer account.\" />\r\n      </Helmet>\r\n      <div className=\"max-w-md w-full space-y-8 bg-white p-8 rounded-lg shadow-md\">\r\n            <h2 className=\"text-center text-3xl font-extrabold text-[#004040]\">Create Your Account</h2>\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          {/* Account Type Selection */}\r\n          <div className=\"flex items-center justify-center space-x-4\">\r\n            <label className=\"inline-flex items-center\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"accountType\"\r\n                value=\"customer\"\r\n                checked={accountType === 'customer'}\r\n                onChange={handleAccountTypeChange}\r\n                className=\"form-radio text-[#ECBE07]\"\r\n                aria-label=\"Personal Account Type\"\r\n              />\r\n              <span className=\"ml-2 text-gray-700\">Personal</span>\r\n            </label>\r\n            <label className=\"inline-flex items-center\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"accountType\"\r\n                value=\"organization\"\r\n                checked={accountType === 'organization'}\r\n                onChange={handleAccountTypeChange}\r\n                className=\"form-radio text-[#ECBE07]\"\r\n                aria-label=\"Organization Account Type\"\r\n              />\r\n              <span className=\"ml-2 text-gray-700\">Organization</span>\r\n            </label>\r\n          </div>\r\n\r\n          {/* Basic Fields */}\r\n          <div>\r\n            <label htmlFor=\"name\" className=\"sr-only\">Name</label>\r\n            <input\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              autoComplete=\"name\"\r\n              required\r\n              className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${errors.name ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\r\n              placeholder=\"Full Name\"\r\n              aria-label=\"Full Name\"\r\n              value={accountType === 'customer' ? undefined : ''} // Clear if switching from org to customer\r\n              onChange={(e) => { if (accountType === 'organization') e.target.value = ''; }} // Reset value if switching from org\r\n            />\r\n            {errors.name && <p className=\"text-red-500 text-xs italic\">{errors.name}</p>}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"sr-only\">Email address</label>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              required\r\n              className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${errors.email ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\r\n              placeholder=\"Email address\"\r\n              aria-label=\"Email Address\"\r\n            />\r\n            {errors.email && <p className=\"text-red-500 text-xs italic\">{errors.email}</p>}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              required\r\n              className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${errors.password ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\r\n              placeholder=\"Password\"\r\n              aria-label=\"Password\"\r\n            />\r\n            {errors.password && <p className=\"text-red-500 text-xs italic\">{errors.password}</p>}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"confirm-password\" className=\"sr-only\">Confirm Password</label>\r\n            <input\r\n              id=\"confirm-password\"\r\n              name=\"confirm-password\"\r\n              type=\"password\"\r\n              autoComplete=\"new-password\"\r\n              required\r\n              className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${errors['confirm-password'] ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\r\n              placeholder=\"Confirm Password\"\r\n              aria-label=\"Confirm Password\"\r\n            />\r\n            {errors['confirm-password'] && <p className=\"text-red-500 text-xs italic\">{errors['confirm-password']}</p>}\r\n          </div>\r\n\r\n          {/* Conditional organization fields */}\r\n          {accountType === \"organization\" && (\r\n            <>\r\n              <div>\r\n                <label htmlFor=\"companyName\" className=\"sr-only\">Company Name</label>\r\n                <input\r\n                  id=\"companyName\"\r\n                  name=\"companyName\"\r\n                  type=\"text\"\r\n                  autoComplete=\"organization\"\r\n                  required\r\n                  className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${errors.companyName ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\r\n                  placeholder=\"Company Name\"\r\n                  aria-label=\"Company Name\"\r\n                />\r\n                {errors.companyName && <p className=\"text-red-500 text-xs italic\">{errors.companyName}</p>}\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"rcNumber\" className=\"sr-only\">RC Number</label>\r\n                <input\r\n                  id=\"rcNumber\"\r\n                  name=\"rcNumber\"\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  required\r\n                  className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${errors.rcNumber ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\r\n                  placeholder=\"RC Number\"\r\n                  aria-label=\"RC Number\"\r\n                />\r\n                {errors.rcNumber && <p className=\"text-red-500 text-xs italic\">{errors.rcNumber}</p>}\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"contactPerson\" className=\"sr-only\">Contact Person</label>\r\n                <input\r\n                  id=\"contactPerson\"\r\n                  name=\"contactPerson\"\r\n                  type=\"text\"\r\n                  autoComplete=\"name\"\r\n                  required\r\n                  className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${errors.contactPerson ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\r\n                  placeholder=\"Contact Person\"\r\n                  aria-label=\"Contact Person\"\r\n                />\r\n                {errors.contactPerson && <p className=\"text-red-500 text-xs italic\">{errors.contactPerson}</p>}\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-[#ECBE07] hover:bg-[#d4a806] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#ECBE07]\"\r\n              aria-label=\"Register Button\"\r\n            >\r\n              Register\r\n            </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n"],"names":["RegistrationPage","accountType","setAccountType","useState","errors","setErrors","handleAccountTypeChange","event","target","value","_jsxs","className","children","Helmet","_jsx","name","content","onSubmit","preventDefault","formData","FormData","data","Object","fromEntries","entries","validationErrors","newErrors","email","test","password","companyName","rcNumber","contactPerson","validateForm","keys","length","console","log","type","checked","onChange","htmlFor","id","autoComplete","required","placeholder","undefined","e","_Fragment"],"sourceRoot":""}