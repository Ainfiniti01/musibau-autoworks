{"version":3,"file":"static/js/742.fb6f62b2.chunk.js","mappings":"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","sources":["utils/guestActivity.js","pages/public/ContactPage.js","components/BookingContactForm.js"],"sourcesContent":["// frontend/src/utils/guestActivity.js\r\n\r\nconst GUEST_ACTIVITY_KEY = 'guestActivity';\r\n\r\n/**\r\n * Retrieves all guest activities from local storage.\r\n * @returns {Array} An array of guest activity objects.\r\n */\r\nexport const getGuestActivities = () => {\r\n  try {\r\n    const activities = localStorage.getItem(GUEST_ACTIVITY_KEY);\r\n    return activities ? JSON.parse(activities) : [];\r\n  } catch (error) {\r\n    console.error(\"Error retrieving guest activities from local storage:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Adds a new guest activity to local storage.\r\n * @param {object} activity - The guest activity object to add.\r\n */\r\nexport const addGuestActivity = (activity) => {\r\n  try {\r\n    const activities = getGuestActivities();\r\n    activities.push({ ...activity, timestamp: new Date().toISOString() });\r\n    localStorage.setItem(GUEST_ACTIVITY_KEY, JSON.stringify(activities));\r\n  } catch (error) {\r\n    console.error(\"Error adding guest activity to local storage:\", error);\r\n  }\r\n};\r\n\r\n/**\r\n * Clears all guest activities from local storage.\r\n */\r\nexport const clearGuestActivities = () => {\r\n  try {\r\n    localStorage.removeItem(GUEST_ACTIVITY_KEY);\r\n  } catch (error) {\r\n    console.error(\"Error clearing guest activities from local storage:\", error);\r\n  }\r\n};\r\n\r\n/**\r\n * Example guest data structure:\r\n * {\r\n *   type: 'booking', // or 'product_view', 'inquiry', etc.\r\n *   details: {\r\n *     service: 'Tire Repair',\r\n *     date: '2025-08-10',\r\n *     // other relevant details\r\n *   },\r\n *   timestamp: '2025-08-08T12:00:00.000Z'\r\n * }\r\n */\r\n","import React from 'react';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport BookingContactForm from '../../components/BookingContactForm'; // Import the new component\r\n\r\nconst ContactPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Contact Us</title>\r\n      </Helmet>\r\n      <div className=\"container mx-auto py-10 px-6 md:px-20\">\r\n          <div data-aos=\"fade-up\">\r\n            <BookingContactForm />\r\n          </div>\r\n\r\n        <div className=\"contact-map-container py-10\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n          <h3 className=\"text-3xl font-bold text-white mb-8 text-center md:text-left\">Our Location</h3>\r\n          <iframe\r\n            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3964.8777777777777!2d3.456789!3d6.54321!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x103b8c0000000000%3A0x0000000000000000!5e0!3m2!1sen!2sng!4v1678886400000!5m2!1sen!2sng\" // Placeholder URL - Replace with actual business location\r\n            width=\"100%\"\r\n            height=\"450\"\r\n            style={{ border: 0 }}\r\n            allowFullScreen=\"\"\r\n            loading=\"lazy\"\r\n            referrerPolicy=\"no-referrer-when-downgrade\"\r\n            className=\"rounded-lg shadow-lg\">\r\n          </iframe>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { toast } from 'react-toastify'; // Import toast\r\nimport { addGuestActivity } from '../utils/guestActivity';\r\n\r\nconst BookingContactForm = ({ isDashboard = false }) => {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const serviceFromQuery = searchParams.get('service');\r\n\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    serviceType: '',\r\n    preferredDate: '',\r\n    message: '',\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false); // New state for submission status\r\n\r\n  useEffect(() => {\r\n    if (serviceFromQuery) {\r\n      const decodedService = decodeURIComponent(serviceFromQuery);\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        message: `Request: ${decodedService}`,\r\n        serviceType: decodedService,\r\n      }));\r\n    }\r\n  }, [serviceFromQuery]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => { // Made async to simulate API call\r\n    e.preventDefault();\r\n    setIsSubmitting(true); // Set submitting state to true\r\n\r\n    if (\r\n      !formData.fullName ||\r\n      !formData.email ||\r\n      !formData.phoneNumber ||\r\n      !formData.serviceType ||\r\n      !formData.preferredDate ||\r\n      !formData.message\r\n    ) {\r\n      toast.error('Please fill in all required fields.'); // Use toast for error\r\n      setIsSubmitting(false); // Reset submitting state\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate network delay\r\n\r\n      console.log('Form submitted:', formData);\r\n      toast.success('Your request has been submitted successfully! We will contact you shortly.'); // Use toast for success\r\n\r\n      // Add guest activity if not on the dashboard (assuming dashboard implies logged in)\r\n      if (!isDashboard) {\r\n        addGuestActivity({\r\n          type: 'booking',\r\n          details: formData,\r\n        });\r\n        toast.info(\"Booking saved! Login to track it.\"); // Toast for guest booking\r\n      }\r\n\r\n      setFormData({\r\n        fullName: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        serviceType: '',\r\n        preferredDate: '',\r\n        message: '',\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Booking submission failed:\", error);\r\n      toast.error(\"Failed to submit booking. Please try again.\");\r\n    } finally {\r\n      setIsSubmitting(false); // Reset submitting state to false\r\n    }\r\n  };\r\n\r\n  const serviceOptions = [\r\n    'Engine Repair',\r\n    'Painting',\r\n    'Tire Rotation',\r\n    'Brake Service',\r\n    'Oil Change',\r\n    'Other',\r\n  ];\r\n\r\n  const isMessageAutofilled = formData.message.startsWith('Request: ');\r\n\r\n  return (\r\n    <div className={isDashboard ? \"\" : \"bg-[#0B0D1F] py-10 px-6 md:px-20\"}>\r\n      <div className={isDashboard ? \"\" : \"container mx-auto\"}>\r\n        {!isDashboard && (\r\n          <h2 className=\"text-3xl font-bold text-center text-white mb-8 py-10\">Book Your Service or Contact Us</h2>\r\n        )}\r\n        <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {/* Full Name */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"fullName\" className=\"text-white mb-2\">Full Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"fullName\"\r\n              name=\"fullName\"\r\n              value={formData.fullName}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"p-3 rounded-lg border border-gold focus:border-gold-focus bg-transparent text-white placeholder-gray-400 focus:outline-none\"\r\n              placeholder=\"Enter your full name\"\r\n            />\r\n          </div>\r\n\r\n          {/* Email */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"email\" className=\"text-white mb-2\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"p-3 rounded-lg border border-gold focus:border-gold-focus bg-transparent text-white placeholder-gray-400 focus:outline-none\"\r\n              placeholder=\"Enter your email address\"\r\n            />\r\n          </div>\r\n\r\n          {/* Phone Number */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"phoneNumber\" className=\"text-white mb-2\">Phone Number</label>\r\n            <input\r\n              type=\"tel\"\r\n              id=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              value={formData.phoneNumber}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"p-3 rounded-lg border border-gold focus:border-gold-focus bg-transparent text-white placeholder-gray-400 focus:outline-none\"\r\n              placeholder=\"Enter your phone number\"\r\n            />\r\n          </div>\r\n\r\n          {/* Service Type */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"serviceType\" className=\"text-white mb-2\">Service Type</label>\r\n            <select\r\n              id=\"serviceType\"\r\n              name=\"serviceType\"\r\n              value={formData.serviceType}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"p-3 rounded-lg border border-gold focus:border-gold-focus bg-transparent text-white placeholder-gray-400 focus:outline-none appearance-none\"\r\n            >\r\n              <option value=\"\" disabled className=\"bg-gray-800 text-gray-400\">Select a service</option>\r\n              {serviceOptions.map((option) => (\r\n                <option key={option} value={option} className=\"bg-gray-800 text-white\">\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div className=\"absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none\">\r\n              <svg className=\"w-4 h-4 fill-current text-gray-400\" viewBox=\"0 0 20 20\"><path d=\"M7 10l3 3 3-3z\"/></svg>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Preferred Date */}\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor=\"preferredDate\" className=\"text-white mb-2\">Preferred Date</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"preferredDate\"\r\n              name=\"preferredDate\"\r\n              value={formData.preferredDate}\r\n              onChange={handleChange}\r\n              required\r\n              className=\"p-3 rounded-lg border border-gold focus:border-gold-focus bg-transparent text-white placeholder-gray-400 focus:outline-none\"\r\n            />\r\n          </div>\r\n\r\n          {/* Message */}\r\n          <div className=\"flex flex-col md:col-span-2\">\r\n            <label htmlFor=\"message\" className=\"text-white mb-2\">Message</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n              rows=\"5\"\r\n              required\r\n              className={`p-3 rounded-lg border border-gold focus:border-gold-focus bg-transparent text-white placeholder-gray-400 focus:outline-none resize-none ${\r\n                isMessageAutofilled ? 'border-yellow-500' : ''\r\n              }`}\r\n              placeholder=\"Enter your message\"\r\n            ></textarea>\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <div className=\"md:col-span-2 flex justify-center\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-8 py-3 bg-gold text-yellow font-bold rounded-lg hover:bg-gold-hover transition duration-300 ease-in-out transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              disabled={isSubmitting} // Disable button when submitting\r\n            >\r\n              {isSubmitting ? 'Submitting...' : 'Submit Request'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingContactForm;\r\n"],"names":["GUEST_ACTIVITY_KEY","getGuestActivities","activities","localStorage","getItem","JSON","parse","error","console","addGuestActivity","activity","push","timestamp","Date","toISOString","setItem","stringify","clearGuestActivities","removeItem","ContactPage","_jsxs","_Fragment","children","_jsx","Helmet","className","BookingContactForm","src","width","height","style","border","allowFullScreen","loading","referrerPolicy","_ref","isDashboard","location","useLocation","serviceFromQuery","URLSearchParams","search","get","formData","setFormData","useState","fullName","email","phoneNumber","serviceType","preferredDate","message","isSubmitting","setIsSubmitting","useEffect","decodedService","decodeURIComponent","prevData","handleChange","e","name","value","target","isMessageAutofilled","startsWith","onSubmit","async","preventDefault","toast","Promise","resolve","setTimeout","log","success","type","details","info","htmlFor","id","onChange","required","placeholder","disabled","map","option","viewBox","d","rows"],"sourceRoot":""}