{"version":3,"file":"static/js/690.664acb2f.chunk.js","mappings":"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","sources":["pages/organization/OrganizationBookingHistoryPage.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\n\r\nconst OrganizationBookingHistoryPage = () => {\r\n  // Placeholder for booking data - in a real application, this would come from an API\r\n  const initialBookingHistory = [\r\n    {\r\n      bookingId: 'BKG001',\r\n      dateTime: '2023-10-26 10:00 AM',\r\n      serviceType: 'Oil ',\r\n      vehicleInfo: 'Toyota Camry - ABC 123',\r\n      bookedBy: 'John Doe (john.doe@example.com)',\r\n      status: 'Completed',\r\n    },\r\n    {\r\n      bookingId: 'BKG002',\r\n      dateTime: '2023-10-27 02:30 PM',\r\n      serviceType: 'Tire Rotation',\r\n      vehicleInfo: 'Honda Civic - XYZ 789',\r\n      bookedBy: 'Jane Smith (jane.smith@example.com)',\r\n      status: 'Pending',\r\n    },\r\n    {\r\n      bookingId: 'BKG003',\r\n      dateTime: '2023-10-28 09:00 AM',\r\n      serviceType: 'Brake Inspection',\r\n      vehicleInfo: 'Ford F-150 - LMN 456',\r\n      bookedBy: 'Peter Jones (peter.jones@example.com)',\r\n      status: 'Cancelled',\r\n    },\r\n    {\r\n      bookingId: 'BKG004',\r\n      dateTime: '2023-10-25 11:00 AM',\r\n      serviceType: 'Oil Change',\r\n      vehicleInfo: 'BMW X5 - GHI 012',\r\n      bookedBy: 'John Doe (john.doe@example.com)',\r\n      status: 'Completed',\r\n    },\r\n    {\r\n      bookingId: 'BKG005',\r\n      dateTime: '2023-10-29 03:00 PM',\r\n      serviceType: 'Engine Check',\r\n      vehicleInfo: 'Audi A4 - JKL 345',\r\n      bookedBy: 'Alice Brown (alice.brown@example.com)',\r\n      status: 'Pending',\r\n    },\r\n  ];\r\n\r\n  const [selectedStatus, setSelectedStatus] = useState('All');\r\n  const [sortOrder, setSortOrder] = useState('none'); // 'none', 'asc', 'desc'\r\n  const [teamMemberFilter, setTeamMemberFilter] = useState('');\r\n\r\n  // Calculate summary counts\r\n  const totalBookings = initialBookingHistory.length;\r\n  const pendingBookings = initialBookingHistory.filter(booking => booking.status === 'Pending').length;\r\n  const completedBookings = initialBookingHistory.filter(booking => booking.status === 'Completed').length;\r\n  const canceledBookings = initialBookingHistory.filter(booking => booking.status === 'Cancelled').length;\r\n\r\n  // Extract unique team members for the filter\r\n  const teamMembers = useMemo(() => {\r\n    const members = new Set(initialBookingHistory.map(booking => booking.bookedBy.split(' (')[0]));\r\n    return Array.from(members);\r\n  }, [initialBookingHistory]);\r\n\r\n  const handleStatusChange = (event) => {\r\n    setSelectedStatus(event.target.value);\r\n  };\r\n\r\n  const handleTeamMemberChange = (event) => {\r\n    setTeamMemberFilter(event.target.value);\r\n  };\r\n\r\n  const handleSortOrderChange = () => {\r\n    setSortOrder(prevOrder => {\r\n      if (prevOrder === 'none') return 'asc';\r\n      if (prevOrder === 'asc') return 'desc';\r\n      return 'none'; // Reset to none after desc\r\n    });\r\n  };\r\n\r\n  const filteredAndSortedBookings = useMemo(() => {\r\n    let processedBookings = [...initialBookingHistory];\r\n\r\n    // Apply status filter\r\n    if (selectedStatus !== 'All') {\r\n      processedBookings = processedBookings.filter(booking => booking.status === selectedStatus);\r\n    }\r\n\r\n    // Apply team member filter\r\n    if (teamMemberFilter) {\r\n      processedBookings = processedBookings.filter(booking =>\r\n        booking.bookedBy.toLowerCase().includes(teamMemberFilter.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Apply date sort\r\n    if (sortOrder !== 'none') {\r\n      processedBookings.sort((a, b) => {\r\n        // Basic date parsing - assumes consistent format. For robust parsing, use a library like date-fns or moment.js\r\n        const dateA = new Date(a.dateTime.replace(' AM', '').replace(' PM', '')); // Simplified parsing\r\n        const dateB = new Date(b.dateTime.replace(' AM', '').replace(' PM', '')); // Simplified parsing\r\n\r\n        if (sortOrder === 'asc') {\r\n          return dateA - dateB;\r\n        } else { // desc\r\n          return dateB - dateA;\r\n        }\r\n      });\r\n    }\r\n\r\n    return processedBookings;\r\n  }, [selectedStatus, teamMemberFilter, sortOrder, initialBookingHistory]);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Organization Booking History</h1>\r\n\r\n      {/* Summary Panel */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6 p-4 bg-gray-100 rounded-lg shadow-sm\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-sm font-medium text-gray-700\">Total Bookings</p>\r\n          <p className=\"text-2xl font-bold\">{totalBookings}</p>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p className=\"text-sm font-medium text-gray-700\">Pending Bookings</p>\r\n          <p className=\"text-2xl font-bold text-yellow-600\">{pendingBookings}</p>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p className=\"text-sm font-medium text-gray-700\">Completed Bookings</p>\r\n          <p className=\"text-2xl font-bold text-green-600\">{completedBookings}</p>\r\n        </div>\r\n        {/* Canceled Bookings */}\r\n        <div className=\"text-center\">\r\n          <p className=\"text-sm font-medium text-gray-700\">Canceled Bookings</p>\r\n          <p className=\"text-2xl font-bold text-red-600\">{canceledBookings}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filters and Sort Controls */}\r\n      <div className=\"flex flex-wrap gap-4 mb-4 p-4 bg-gray-100 rounded-lg shadow-sm\">\r\n        {/* Status Filter */}\r\n        <div>\r\n          <label htmlFor=\"statusFilter\" className=\"block text-sm font-medium text-gray-700 mb-1\">Filter by Status:</label>\r\n          <select\r\n            id=\"statusFilter\"\r\n            value={selectedStatus}\r\n            onChange={handleStatusChange}\r\n            className=\"p-2 border border-gray-300 rounded-md w-40  text-gray-800\"\r\n          >\r\n            <option value=\"All\">All</option>\r\n            <option value=\"Pending\">Pending</option>\r\n            <option value=\"Completed\">Completed</option>\r\n            <option value=\"Cancelled\">Cancelled</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* Team Member Filter */}\r\n        <div>\r\n          <label htmlFor=\"teamMemberFilter\" className=\"block text-sm font-medium text-gray-700 mb-1\">Filter by Team Member:</label>\r\n          <select\r\n            id=\"teamMemberFilter\"\r\n            value={teamMemberFilter}\r\n            onChange={handleTeamMemberChange}\r\n            className=\"p-2 border border-gray-300 rounded-md w-56  text-gray-800\"\r\n          >\r\n            <option value=\"\">All Team Members</option>\r\n            {teamMembers.map((member, index) => (\r\n              <option key={index} value={member}>{member}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Date Sort */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">Sort by Date:</label>\r\n          <button\r\n            onClick={handleSortOrderChange}\r\n            className=\"p-2 border  text-gray-800 border-gray-300 rounded-md w-40 bg-white hover:bg-gray-50 flex items-center justify-center\"\r\n          >\r\n            {sortOrder === 'none' && 'Sort by Date'}\r\n            {sortOrder === 'asc' && 'Date: Oldest First ↑'}\r\n            {sortOrder === 'desc' && 'Date: Newest First ↓'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full bg-white border border-gray-300\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"py-2 px-4 border-b  text-gray-800 block md:table-cell md:w-auto\">Booking ID</th>\r\n              <th className=\"py-2 px-4 border-b  text-gray-800 block md:table-cell md:w-auto\">Date & Time</th>\r\n              <th className=\"py-2 px-4 border-b  text-gray-800 block md:table-cell md:w-auto\">Service Type</th>\r\n              <th className=\"py-2 px-4 border-b  text-gray-800 block md:table-cell md:w-auto\">Vehicle Info</th>\r\n              <th className=\"py-2 px-4 border-b  text-gray-800 block md:table-cell md:w-auto\">Booked By</th>\r\n              <th className=\"py-2 px-4 border-b  text-gray-800 block md:table-cell md:w-auto\">Status</th>\r\n              <th className=\"py-2 px-4 border-b  text-gray-800 block md:table-cell md:w-auto\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredAndSortedBookings.length > 0 ? (\r\n              filteredAndSortedBookings.map((booking, index) => (\r\n                <tr key={index} className=\"hover:bg-gray-100 flex flex-col md:flex-row md:table-row mb-4 md:mb-0\">\r\n                  <td className=\"py-2 px-4 border-b block md:table-cell\" data-label=\"Booking ID\">{booking.bookingId}</td>\r\n                  <td className=\"py-2 px-4 border-b block md:table-cell\" data-label=\"Date & Time\">{booking.dateTime}</td>\r\n                  <td className=\"py-2 px-4 border-b block md:table-cell\" data-label=\"Service Type\">{booking.serviceType}</td>\r\n                  <td className=\"py-2 px-4 border-b block md:table-cell\" data-label=\"Vehicle Info\">{booking.vehicleInfo}</td>\r\n                  <td className=\"py-2 px-4 border-b block md:table-cell\" data-label=\"Booked By\">{booking.bookedBy}</td>\r\n                  <td className=\"py-2 px-4 border-b block md:table-cell\" data-label=\"Status\">{booking.status}</td>\r\n                  <td className=\"py-2 px-4 border-b block md:table-cell\" data-label=\"Actions\">\r\n                    <button className=\"text-blue-600 hover:text-blue-800 mr-2\">View</button>\r\n                    <button className=\"text-yellow-600 hover:text-yellow-800 mr-2\">Cancel</button>\r\n                    <button className=\"text-green-600 hover:text-green-800\">Reschedule</button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"7\" className=\"py-4 px-4 text-center\">No booking history found matching your criteria.</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrganizationBookingHistoryPage;\r\n"],"names":["OrganizationBookingHistoryPage","initialBookingHistory","bookingId","dateTime","serviceType","vehicleInfo","bookedBy","status","selectedStatus","setSelectedStatus","useState","sortOrder","setSortOrder","teamMemberFilter","setTeamMemberFilter","totalBookings","length","pendingBookings","filter","booking","completedBookings","canceledBookings","teamMembers","useMemo","members","Set","map","split","Array","from","filteredAndSortedBookings","processedBookings","toLowerCase","includes","sort","a","b","dateA","Date","replace","dateB","_jsxs","className","children","_jsx","htmlFor","id","value","onChange","event","target","member","index","onClick","handleSortOrderChange","prevOrder","colSpan"],"sourceRoot":""}