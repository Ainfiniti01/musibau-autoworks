{"version":3,"file":"static/js/760.614aa9e0.chunk.js","mappings":"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","sources":["components/Header.js","components/ui/PageLayout.js","pages/customer/ServiceHistoryPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom'; // Import useLocation\r\nimport DarkModeToggle from './DarkModeToggle';\r\nimport { FaBars, FaUserCircle, FaFacebook, FaYoutube, FaPhone, FaMapMarkerAlt } from 'react-icons/fa'; // Import social and contact icons\r\nimport AOS from 'aos'; // Import AOS\r\nimport 'aos/dist/aos.css'; // Import AOS CSS\r\n// import backgroundImage from '../assets/images/logo.jpg'; // This import is not used\r\n\r\nconst Header = () => {\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false); // State for mobile menu\r\n  const [isProfileDropdownOpen, setIsProfileDropdownOpen] = useState(false); // State for profile dropdown\r\n\r\n  const toggleMobileMenu = () => {\r\n    setIsMobileMenuOpen(!isMobileMenuOpen);\r\n  };\r\n\r\n  const toggleProfileDropdown = () => {\r\n    setIsProfileDropdownOpen(!isProfileDropdownOpen);\r\n  };\r\n\r\n  const location = useLocation(); // Get current location\r\n  const logo = require('../assets/images/logo.png');\r\n\r\n  // Initialize AOS on component mount\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1000,\r\n      once: true,\r\n      easing: 'ease-in-out',\r\n    });\r\n  }, []);\r\n\r\n  // Function to determine if a link should be active\r\n  const getActiveClass = (path) => {\r\n    // For profile links, we might want to check for specific paths or a general active state\r\n    if (path === '/customer/dashboard' || path === '/settings') {\r\n      return location.pathname.startsWith('/customer') || location.pathname.startsWith('/settings') ? 'active-link' : '';\r\n    }\r\n    return location.pathname === path ? 'active-link' : '';\r\n  };\r\n\r\n  return (\r\n    <header className=\"fixed top-0 w-full bg-gray-800 p-4 shadow-md z-50\"> {/* Added fixed positioning */}\r\n      <div className=\"container mx-auto flex justify-between items-center\">\r\n        {/* Logo/Brand */}\r\n        <div className=\"flex items-center\">\r\n          <Link to=\"\" className=\"text-white text-2xl font-bold font-montserrat flex items-center\">\r\n          {/* Image Column */}\r\n          <div className=\"flex items-center space-x-3\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Musibau Autoworks\"\r\n              className=\"h-10 w-auto rounded-sm object-contain drop-shadow\"\r\n            />\r\n            <span className=\"font-bold text-white\">\r\n              Musibau AutoWorks\r\n            </span>\r\n          </div>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* Hamburger Icon for Mobile */}\r\n        <div className=\"md:hidden\">\r\n          <button onClick={toggleMobileMenu} className=\"text-white focus:outline-none\">\r\n            {!isMobileMenuOpen ? (\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16m-7 6h7\"></path>\r\n              </svg>\r\n            ) : (\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n              </svg>\r\n            )}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Navigation Links for Desktop */}\r\n        <div className=\"hidden md:flex space-x-6 items-center\">\r\n          <Link to=\"/customer/dashboard\" className={`text-white hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/customer/dashboard')}`}>Home</Link>\r\n          <Link to=\"/customer/service-history\" className={`text-white hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/services')}`}>Services</Link>\r\n          <Link to=\"/products\" className={`text-white hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/products')}`}>Products</Link>\r\n          <Link to=\"/customer/booking-history\" className={`text-white hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/booking')}`}>Bookings</Link>\r\n          <Link to=\"/customer/profile\" className={`text-white hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/profile')}`}>Profile</Link>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile Menu */}\r\n      {/* Conditionally render the mobile menu */}\r\n      <div className={`md:hidden ${isMobileMenuOpen ? 'block' : 'hidden'} absolute top-28 left-0 right-0 z-50 w-full bg-gray-700 py-2 shadow-md`}>\r\n        <Link to=\"/customer/dashboard\" className={`block text-white py-2 hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/customer/dashboard')}`} onClick={toggleMobileMenu}>Home</Link>\r\n        <Link to=\"/customer/service-history\" className={`block text-white py-2 hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/services')}`} onClick={toggleMobileMenu}>Services</Link>\r\n        <Link to=\"/products\" className={`block text-white py-2 hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/products')}`} onClick={toggleMobileMenu}>Products</Link>\r\n        <Link to=\"/customer/booking-history\" className={`block text-white py-2 hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/booking')}`} onClick={toggleMobileMenu}>Bookings</Link>\r\n        <Link to=\"/customer/profile\" className={`block text-white py-2 hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/booking')}`} onClick={toggleMobileMenu}>Profile</Link>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Header from '../Header'; // Assuming Header is in ../components\r\nimport Footer from '../MinimalFooter.js'; // Assuming Footer is in ../components\r\n\r\nconst PageLayout = ({ children, title }) => {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-10\">\r\n      <Helmet>\r\n        <title>{title || 'Musibau AutoWorks'}</title>\r\n      </Helmet>\r\n      <Header />\r\n      <div className=\"max-w-7xl mx-auto py-10 px-6\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageLayout;\r\n","import React, { useState } from 'react';\r\nimport Footer from '../../components/MinimalFooter.js';\r\nimport PageLayout from '../../components/ui/PageLayout'; // Import PageLayout\r\nfunction ServiceHistoryPage() {\r\n  const [services, setServices] = useState([\r\n    { id: 1, serviceName: 'Oil Change', date: '2023-10-26', status: 'Completed', cost: '$50', mechanicName: 'John Doe', rating: '★★★★☆' },\r\n    { id: 2, serviceName: 'Engine Diagnosis', date: '2023-11-15', status: 'Completed', cost: '$100', mechanicName: 'Jane Smith', rating: '★★★★★' },\r\n    { id: 3, serviceName: 'Tire Rotation', date: '2023-12-01', status: 'In Progress', cost: '$30', mechanicName: 'John Doe', rating: null },\r\n  ]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterType, setFilterType] = useState('');\r\n  const [filterDateRange, setFilterDateRange] = useState({ start: '', end: '' });\r\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(10);\r\n\r\n  const serviceTypes = [...new Set(services.map(service => service.serviceName))];\r\n\r\n  const filteredServices = services\r\n    .filter(service => {\r\n    const matchesSearch = service.serviceName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                          service.mechanicName.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesType = filterType === '' || service.serviceName === filterType;\r\n    const matchesDate = (filterDateRange.start === '' || service.date >= filterDateRange.start) &&\r\n                        (filterDateRange.end === '' || service.date <= filterDateRange.end);\r\n    return matchesSearch && matchesType && matchesDate;\r\n  })\r\n    .sort((a, b) => {\r\n      const dateA = new Date(a.date);\r\n      const dateB = new Date(b.date);\r\n      if (sortOrder === 'asc') {\r\n        return dateA - dateB;\r\n      } else {\r\n        return dateB - dateA;\r\n      }\r\n    });\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = filteredServices.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  const handleViewDetails = (serviceId) => {\r\n    alert(`Viewing details for service ID: ${serviceId}`);\r\n    // Logic to navigate to a detailed view or open a modal\r\n  };\r\n\r\n  const handleDownloadReceipt = (serviceId) => {\r\n    alert(`Downloading receipt for service ID: ${serviceId}`);\r\n    // Logic to download receipt\r\n  };\r\n\r\n  const handleRateService = (serviceId) => {\r\n    alert(`Rating service ID: ${serviceId}`);\r\n    // Logic to rate service\r\n  };\r\n\r\n  const handleContactMechanic = (mechanicName) => {\r\n    alert(`Contacting ${mechanicName}`);\r\n    // Logic to contact mechanic\r\n  };\r\n\r\n  return (\r\n    <PageLayout title=\"Musibau AutoWorks - Service History\">\r\n      <div className=\"container mx-auto p-4\">\r\n        <h1 className=\"text-3xl font-bold mb-6\">My Service History</h1>\r\n\r\n        <div className=\"mb-6 flex flex-wrap gap-4  text-gray-800\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by service or mechanic...\"\r\n            className=\"p-2 border border-gray-300 rounded-md flex-grow\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <select\r\n            className=\"p-2 border border-gray-300 rounded-md\"\r\n            value={filterType}\r\n            onChange={(e) => setFilterType(e.target.value)}\r\n          >\r\n            <option value=\"\">All Service Types</option>\r\n            {serviceTypes.map(type => (\r\n              <option key={type} value={type}>{type}</option>\r\n            ))}\r\n          </select>\r\n          <div className=\"flex gap-2\">\r\n            <input\r\n              type=\"date\"\r\n              className=\"p-2 border border-gray-300 rounded-md\"\r\n              value={filterDateRange.start}\r\n              onChange={(e) => setFilterDateRange({ ...filterDateRange, start: e.target.value })}\r\n            />\r\n            <span>-</span>\r\n            <input\r\n              type=\"date\"\r\n              className=\"p-2 border border-gray-300 rounded-md\"\r\n              value={filterDateRange.end}\r\n              onChange={(e) => setFilterDateRange({ ...filterDateRange, end: e.target.value })}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"p-2 border border-gray-300 rounded-md flex items-center gap-1\"\r\n            onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}\r\n          >\r\n            Sort: {sortOrder === 'asc' ? '↑' : '↓'}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full bg-white border border-gray-200\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"py-3 px-4 border-b  text-gray-800 text-left\">Service Name</th>\r\n                <th className=\"py-3 px-4 border-b  text-gray-800 text-left\">Date</th>\r\n                <th className=\"py-3 px-4 border-b  text-gray-800 text-left\">Status</th>\r\n                <th className=\"py-3 px-4 border-b  text-gray-800 text-left\">Cost</th>\r\n                <th className=\"py-3 px-4 border-b  text-gray-800 text-left\">Mechanic</th>\r\n                <th className=\"py-3 px-4 border-b  text-gray-800 text-left\">Rating</th>\r\n                <th className=\"py-3 px-4 border-b  text-gray-800 text-left\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentItems.map((service, index) => (\r\n                <tr key={service.id} className={`hover:bg-gray-50 ${index % 2 === 0 ? 'bg-gray-100' : 'bg-white'}`}>\r\n                  <td className=\"py-3 px-4 border-b text-gray-800\">{service.serviceName}</td>\r\n                  <td className=\"py-3 px-4 border-b text-gray-800\">{service.date}</td>\r\n                  <td className=\"py-3 px-4 border-b text-gray-800\">\r\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                      service.status === 'Completed' ? 'bg-green-100 text-green-800' :\r\n                      service.status === 'In Progress' ? 'bg-yellow-100 text-yellow-800' :\r\n                      service.status === 'Cancelled' ? 'bg-red-100 text-red-800' : ''\r\n                    }`}>\r\n                      {service.status}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"py-3 px-4 border-b text-gray-800\">{service.cost}</td>\r\n                  <td className=\"py-3 px-4 border-b text-gray-800\">{service.mechanicName}</td>\r\n                  <td className=\"py-3 px-4 border-b text-gray-800\">{service.rating || 'N/A'}</td>\r\n                  <td className=\"py-3 px-4 border-b flex gap-2\">\r\n                    <button onClick={() => handleViewDetails(service.id)} className=\"text-blue-600 hover:underline\">View Details</button>\r\n                    <button onClick={() => handleDownloadReceipt(service.id)} className=\"text-green-600 hover:underline\">Download Receipt (PDF)</button>\r\n                    <button onClick={() => handleRateService(service.id)} className=\"text-purple-600 hover:underline\">Rate Service</button>\r\n                    <button onClick={() => handleContactMechanic(service.mechanicName)} className=\"text-gray-600 hover:underline\">Contact</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"mt-6 flex justify-center\">\r\n          <nav>\r\n            <ul className=\"inline-flex items-center -space-x-px\">\r\n              {Array.from({ length: Math.ceil(filteredServices.length / itemsPerPage) }, (_, i) => (\r\n                <li key={i}>\r\n                  <button\r\n                    onClick={() => paginate(i + 1)}\r\n                    className={`py-2 px-3 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 ${currentPage === i + 1 ? 'bg-blue-50 text-blue-600' : ''}`}\r\n                  >\r\n                    {i + 1}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </PageLayout>\r\n  );\r\n}\r\n\r\nexport default ServiceHistoryPage;\r\n"],"names":["Header","isMobileMenuOpen","setIsMobileMenuOpen","useState","isProfileDropdownOpen","setIsProfileDropdownOpen","toggleMobileMenu","location","useLocation","logo","require","useEffect","AOS","duration","once","easing","getActiveClass","path","pathname","startsWith","_jsxs","className","children","_jsx","Link","to","src","alt","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","concat","_ref","title","Helmet","services","setServices","id","serviceName","date","status","cost","mechanicName","rating","searchTerm","setSearchTerm","filterType","setFilterType","filterDateRange","setFilterDateRange","start","end","sortOrder","setSortOrder","currentPage","setCurrentPage","itemsPerPage","serviceTypes","Set","map","service","filteredServices","filter","matchesSearch","toLowerCase","includes","matchesType","matchesDate","sort","a","b","dateA","Date","dateB","indexOfLastItem","indexOfFirstItem","currentItems","slice","PageLayout","type","placeholder","value","onChange","e","target","_objectSpread","index","handleViewDetails","serviceId","alert","handleDownloadReceipt","handleRateService","handleContactMechanic","Array","from","length","Math","ceil","_","i"],"sourceRoot":""}