{"version":3,"file":"static/js/334.a92af15a.chunk.js","mappings":"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","sources":["components/Header.js","components/ui/PageLayout.js","components/ui/SectionWrapper.js","components/ui/ActionButton.js","pages/customer/CustomerProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom'; // Import useLocation\r\nimport DarkModeToggle from './DarkModeToggle';\r\nimport { FaBars, FaUserCircle, FaFacebook, FaYoutube, FaPhone, FaMapMarkerAlt } from 'react-icons/fa'; // Import social and contact icons\r\nimport AOS from 'aos'; // Import AOS\r\nimport 'aos/dist/aos.css'; // Import AOS CSS\r\n// import backgroundImage from '../assets/images/logo.jpg'; // This import is not used\r\n\r\nconst Header = () => {\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false); // State for mobile menu\r\n  const [isProfileDropdownOpen, setIsProfileDropdownOpen] = useState(false); // State for profile dropdown\r\n\r\n  const toggleMobileMenu = () => {\r\n    setIsMobileMenuOpen(!isMobileMenuOpen);\r\n  };\r\n\r\n  const toggleProfileDropdown = () => {\r\n    setIsProfileDropdownOpen(!isProfileDropdownOpen);\r\n  };\r\n\r\n  const location = useLocation(); // Get current location\r\n  const logo = require('../assets/images/logo.png');\r\n\r\n  // Initialize AOS on component mount\r\n  useEffect(() => {\r\n    AOS.init({\r\n      duration: 1000,\r\n      once: true,\r\n      easing: 'ease-in-out',\r\n    });\r\n  }, []);\r\n\r\n  // Function to determine if a link should be active\r\n  const getActiveClass = (path) => {\r\n    // For profile links, we might want to check for specific paths or a general active state\r\n    if (path === '/customer/dashboard' || path === '/settings') {\r\n      return location.pathname.startsWith('/customer') || location.pathname.startsWith('/settings') ? 'active-link' : '';\r\n    }\r\n    return location.pathname === path ? 'active-link' : '';\r\n  };\r\n\r\n  return (\r\n    <header className=\"fixed top-0 w-full bg-gray-800 p-4 shadow-md z-50\"> {/* Added fixed positioning */}\r\n      <div className=\"container mx-auto flex justify-between items-center\">\r\n        {/* Logo/Brand */}\r\n        <div className=\"flex items-center\">\r\n          <Link to=\"\" className=\"text-white text-2xl font-bold font-montserrat flex items-center\">\r\n          {/* Image Column */}\r\n          <div className=\"flex items-center space-x-3\">\r\n            <img\r\n              src={logo}\r\n              alt=\"Musibau Autoworks\"\r\n              className=\"h-10 w-auto rounded-sm object-contain drop-shadow\"\r\n            />\r\n            <span className=\"font-bold text-white\">\r\n              Musibau AutoWorks\r\n            </span>\r\n          </div>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* Hamburger Icon for Mobile */}\r\n        <div className=\"md:hidden\">\r\n          <button onClick={toggleMobileMenu} className=\"text-white focus:outline-none\">\r\n            {!isMobileMenuOpen ? (\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16m-7 6h7\"></path>\r\n              </svg>\r\n            ) : (\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\r\n              </svg>\r\n            )}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Navigation Links for Desktop */}\r\n        <div className=\"hidden md:flex space-x-6 items-center\">\r\n          <Link to=\"/customer/dashboard\" className={`text-white hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/customer/dashboard')}`}>Home</Link>\r\n          <Link to=\"/customer/service-history\" className={`text-white hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/services')}`}>Services</Link>\r\n          <Link to=\"/products\" className={`text-white hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/products')}`}>Products</Link>\r\n          <Link to=\"/customer/booking-history\" className={`text-white hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/booking')}`}>Bookings</Link>\r\n          <Link to=\"/customer/profile\" className={`text-white hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/profile')}`}>Profile</Link>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile Menu */}\r\n      {/* Conditionally render the mobile menu */}\r\n      <div className={`md:hidden ${isMobileMenuOpen ? 'block' : 'hidden'} absolute top-28 left-0 right-0 z-50 w-full bg-gray-700 py-2 shadow-md`}>\r\n        <Link to=\"/customer/dashboard\" className={`block text-white py-2 hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/customer/dashboard')}`} onClick={toggleMobileMenu}>Home</Link>\r\n        <Link to=\"/customer/service-history\" className={`block text-white py-2 hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/services')}`} onClick={toggleMobileMenu}>Services</Link>\r\n        <Link to=\"/products\" className={`block text-white py-2 hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/products')}`} onClick={toggleMobileMenu}>Products</Link>\r\n        <Link to=\"/customer/booking-history\" className={`block text-white py-2 hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/booking')}`} onClick={toggleMobileMenu}>Bookings</Link>\r\n        <Link to=\"/customer/profile\" className={`block text-white py-2 hover:text-[#ECBE07] transition duration-300 font-opensans ${getActiveClass('/booking')}`} onClick={toggleMobileMenu}>Profile</Link>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Header from '../Header'; // Assuming Header is in ../components\r\nimport Footer from '../MinimalFooter.js'; // Assuming Footer is in ../components\r\n\r\nconst PageLayout = ({ children, title }) => {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-10\">\r\n      <Helmet>\r\n        <title>{title || 'Musibau AutoWorks'}</title>\r\n      </Helmet>\r\n      <Header />\r\n      <div className=\"max-w-7xl mx-auto py-10 px-6\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageLayout;\r\n","import React from 'react';\r\n\r\nconst SectionWrapper = ({ title, children, className }) => {\r\n  return (\r\n    <div className={`bg-white p-6 rounded-lg shadow-md ${className}`}>\r\n      {title && <h2 className=\"text-2xl font-semibold text-[#004040] mb-4\">{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionWrapper;\r\n","import React from 'react';\r\n\r\nconst ActionButton = ({ label, onClick, variant = 'primary', className = '' }) => {\r\n  const baseStyles = 'py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2';\r\n  \r\n  const variantStyles = {\r\n    primary: 'bg-[#ECBE07] hover:bg-[#d4a806] focus:ring-[#ECBE07]',\r\n    danger: 'bg-red-600 hover:bg-red-700 focus:ring-red-500',\r\n    // Add other variants as needed\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={`${baseStyles} ${variantStyles[variant]} ${className}`}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PageLayout from '../../components/ui/PageLayout';\r\nimport SectionWrapper from '../../components/ui/SectionWrapper';\r\nimport ActionButton from '../../components/ui/ActionButton';\r\n\r\nconst CustomerProfilePage = () => {\r\n  // State for Basic Info\r\n  const [fullName, setFullName] = useState('John Doe');\r\n  const [email, setEmail] = useState('john.doe@example.com');\r\n  const [phoneNumber, setPhoneNumber] = useState('123-456-7890');\r\n  const [address, setAddress] = useState('123 Main St, Anytown, USA');\r\n  const [profilePicture, setProfilePicture] = useState(null); // For file upload\r\n  const [isEditingBasicInfo, setIsEditingBasicInfo] = useState(false);\r\n\r\n  // State for Password Management\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [isEditingPassword, setIsEditingPassword] = useState(false);\r\n\r\n  // State for Preferences\r\n  const [notificationsEnabled, setNotificationsEnabled] = useState(true);\r\n  const [theme, setTheme] = useState('light'); // 'light' or 'dark'\r\n\r\n  // Handlers for Basic Info\r\n  const handleEditBasicInfo = () => {\r\n    setIsEditingBasicInfo(true);\r\n  };\r\n\r\n  const handleSaveBasicInfo = () => {\r\n    // TODO: Implement API call to save basic info\r\n    console.log('Saving basic info:', { fullName, email, phoneNumber, address });\r\n    // Resetting form to current saved values before exiting edit mode\r\n    // In a real app, you'd fetch current values or have them in a separate state\r\n    setIsEditingBasicInfo(false);\r\n  };\r\n\r\n  const handleCancelBasicInfo = () => {\r\n    setIsEditingBasicInfo(false);\r\n    // Optionally reset form to current saved values\r\n  };\r\n\r\n  const handleProfilePictureChange = (event) => {\r\n    // TODO: Implement profile picture upload logic\r\n    setProfilePicture(event.target.files[0]);\r\n  };\r\n\r\n  // Handlers for Password Management\r\n  const handleChangePassword = () => {\r\n    // TODO: Implement password change logic\r\n    if (newPassword !== confirmNewPassword) {\r\n      console.error('New password and confirm new password do not match.');\r\n      // Optionally, display an error message to the user\r\n      return;\r\n    }\r\n    console.log('Changing password:', { oldPassword, newPassword, confirmNewPassword });\r\n    setOldPassword('');\r\n    setNewPassword('');\r\n    setConfirmNewPassword('');\r\n    setIsEditingPassword(false);\r\n  };\r\n\r\n  // Handlers for Preferences\r\n  const handleNotificationChange = (event) => {\r\n    setNotificationsEnabled(event.target.checked);\r\n  };\r\n\r\n  const handleThemeChange = (event) => {\r\n    setTheme(event.target.value);\r\n  };\r\n\r\n  // Handler for Logout\r\n  const handleLogout = () => {\r\n    // TODO: Implement logout logic\r\n    console.log('Logging out...');\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <PageLayout title=\"Musibau AutoWorks - Customer Profile\">\r\n      <div className=\"max-w-7xl mx-auto py-10 px-6\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-4xl font-bold text-[#004040]\">Your Profile</h1>\r\n          <ActionButton\r\n            label=\"Logout\"\r\n            onClick={handleLogout}\r\n            variant=\"danger\"\r\n          />\r\n        </div>\r\n        <p className=\"text-lg text-gray-700 mb-8\">Manage your personal information and preferences.</p>\r\n\r\n        {/* Section 1: Basic Info */}\r\n        <SectionWrapper title=\"Basic Information\">\r\n          {!isEditingBasicInfo ? (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n              <div>\r\n                <p className=\"font-medium\">Full Name:</p>\r\n                <p>{fullName}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"font-medium\">Email:</p>\r\n                <p>{email}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"font-medium\">Phone Number:</p>\r\n                <p>{phoneNumber}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"font-medium\">Address:</p>\r\n                <p>{address}</p>\r\n              </div>\r\n              {profilePicture && (\r\n                <div>\r\n                  <p className=\"font-medium\">Profile Picture:</p>\r\n                  <img src={URL.createObjectURL(profilePicture)} alt=\"Profile\" className=\"w-32 h-32 rounded-full object-cover\" />\r\n                </div>\r\n              )}\r\n              <div className=\"md:col-span-2\">\r\n                <ActionButton\r\n                  label=\"Edit Basic Info\"\r\n                  onClick={handleEditBasicInfo}\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <form className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n              <div>\r\n                <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-gray-700\">Full Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"fullName\"\r\n                  value={fullName}\r\n                  onChange={(e) => setFullName(e.target.value)}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"phoneNumber\" className=\"block text-sm font-medium text-gray-700\">Phone Number</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  id=\"phoneNumber\"\r\n                  value={phoneNumber}\r\n                  onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700\">Address</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"address\"\r\n                  value={address}\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n              <div className=\"col-span-1 md:col-span-2\">\r\n                <label htmlFor=\"profilePicture\" className=\"block text-sm font-medium text-gray-700\">Profile Picture</label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"profilePicture\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleProfilePictureChange}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                />\r\n                {profilePicture && (\r\n                  <p className=\"mt-2 text-sm text-gray-500\">Selected file: {profilePicture.name}</p>\r\n                )}\r\n              </div>\r\n              <div className=\"col-span-1 md:col-span-2 flex space-x-2\">\r\n                <ActionButton\r\n                  label=\"Save\"\r\n                  onClick={handleSaveBasicInfo}\r\n                  variant=\"primary\"\r\n                />\r\n                <ActionButton\r\n                  label=\"Cancel\"\r\n                  onClick={handleCancelBasicInfo}\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            </form>\r\n          )}\r\n        </SectionWrapper>\r\n\r\n        {/* Section 2: Password Management */}\r\n        <SectionWrapper title=\"Password Management\" className=\"mt-8\">\r\n          {!isEditingPassword ? (\r\n            <button\r\n              onClick={() => setIsEditingPassword(true)}\r\n              className=\"bg-green-teal text-white px-4 py-2 rounded hover:bg-green-teal-dark\"\r\n            >\r\n              Change Password\r\n            </button>\r\n          ) : (\r\n            <form className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n              <div>\r\n                <label htmlFor=\"oldPassword\" className=\"block text-sm font-medium text-gray-700\">Old Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"oldPassword\"\r\n                  value={oldPassword}\r\n                  onChange={(e) => setOldPassword(e.target.value)}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700\">New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"newPassword\"\r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"confirmNewPassword\" className=\"block text-sm font-medium text-gray-700\">Confirm New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"confirmNewPassword\"\r\n                  value={confirmNewPassword}\r\n                  onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n              <div className=\"col-span-1 md:col-span-2 flex space-x-2\">\r\n                <ActionButton\r\n                  label=\"Save New Password\"\r\n                  onClick={handleChangePassword}\r\n                  variant=\"primary\"\r\n                />\r\n                <ActionButton\r\n                  label=\"Cancel\"\r\n                  onClick={() => setIsEditingPassword(false)}\r\n                  variant=\"secondary\"\r\n                />\r\n              </div>\r\n            </form>\r\n          )}\r\n        </SectionWrapper>\r\n\r\n        {/* Section 3: Preferences */}\r\n        <SectionWrapper title=\"Preferences\" className=\"mt-8\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n            <div>\r\n              <label htmlFor=\"notifications\" className=\"flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"notifications\"\r\n                  checked={notificationsEnabled}\r\n                  onChange={handleNotificationChange}\r\n                  className=\"form-checkbox h-5 w-5 text-blue-600\"\r\n                />\r\n                <span className=\"ml-2 text-gray-700\">Enable Notifications</span>\r\n              </label>\r\n            </div>\r\n            {/* <div>\r\n              <label htmlFor=\"theme\" className=\"block text-sm font-medium text-gray-700\">Theme</label>\r\n              <select\r\n                id=\"theme\"\r\n                value={theme}\r\n                onChange={handleThemeChange}\r\n                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n              >\r\n                <option value=\"light\">Light Mode</option>\r\n                <option value=\"dark\">Dark Mode</option>\r\n              </select>\r\n            </div> */}\r\n          </div>\r\n        </SectionWrapper>\r\n\r\n        {/* Section 4: Account Actions */}\r\n        <SectionWrapper title=\"Account Actions\" className=\"mt-8\">\r\n          <div className=\"flex space-x-4 mt-4\">\r\n            <ActionButton\r\n              label=\"Delete Account\"\r\n              onClick={() => console.log('Delete Account')} // Placeholder for delete account logic\r\n              variant=\"danger\"\r\n            />\r\n          </div>\r\n        </SectionWrapper>\r\n      </div>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default CustomerProfilePage;\r\n"],"names":["Header","isMobileMenuOpen","setIsMobileMenuOpen","useState","isProfileDropdownOpen","setIsProfileDropdownOpen","toggleMobileMenu","location","useLocation","logo","require","useEffect","AOS","duration","once","easing","getActiveClass","path","pathname","startsWith","_jsxs","className","children","_jsx","Link","to","src","alt","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","concat","_ref","title","Helmet","label","variant","primary","danger","CustomerProfilePage","fullName","setFullName","email","setEmail","phoneNumber","setPhoneNumber","address","setAddress","profilePicture","setProfilePicture","isEditingBasicInfo","setIsEditingBasicInfo","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","isEditingPassword","setIsEditingPassword","notificationsEnabled","setNotificationsEnabled","theme","setTheme","useNavigate","PageLayout","ActionButton","handleLogout","console","log","SectionWrapper","htmlFor","type","id","value","onChange","e","target","accept","event","files","name","handleSaveBasicInfo","handleCancelBasicInfo","URL","createObjectURL","handleEditBasicInfo","handleChangePassword","error","checked"],"sourceRoot":""}