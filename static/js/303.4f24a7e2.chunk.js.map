{"version":3,"file":"static/js/303.4f24a7e2.chunk.js","mappings":"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","sources":["admin/components/Sidebar.jsx","admin/components/Breadcrumb.jsx","admin/components/Header.jsx","admin/components/Footer.jsx","admin/layout/AdminLayout.jsx","admin/components/BookingForm.jsx","admin/components/BookingsChart.jsx","admin/components/LoadingSpinner.jsx","admin/pages/Dashboard.jsx","admin/pages/Bookings.jsx","admin/context/AdminAuthContext.jsx","admin/layout/AuthLayout.jsx","admin/pages/Login.jsx","admin/pages/Customers.jsx","admin/components/ServiceForm.jsx","admin/pages/Services.jsx","admin/components/ProductForm.jsx","admin/pages/Products.jsx","admin/pages/AdminSettings.jsx","admin/pages/BookingForm.jsx","admin/pages/Reports.jsx","admin/components/ProtectedRoute.jsx","admin/pages/NotFound.jsx","admin/pages/ForgotPassword.jsx","admin/pages/BookingHistory.jsx","admin/pages/ServiceHistory.jsx","admin/pages/Organizations.jsx","admin/pages/CustomerDetail.jsx","admin/pages/OrganizationDetail.jsx","admin/routes/AdminRoutes.jsx","utils/formatCurrency.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FiHome, FiUsers, FiBox, FiSettings, FiLogOut, FiCalendar, FiTool, FiChevronDown } from 'react-icons/fi'; // Added FiCalendar and FiTool\r\n\r\nconst Sidebar = ({ isOpen, onLinkClick }) => {\r\n  const [customerMenuOpen, setCustomerMenuOpen] = useState(false);\r\n  const navItems = [\r\n    { name: 'Dashboard', path: '/admin/dashboard', icon: <FiHome /> },\r\n    { name: 'Manage Bookings', path: '/admin/bookings', icon: <FiCalendar /> }, // Changed icon to FiCalendar\r\n    { name: 'Manage Products', path: '/admin/products', icon: <FiBox /> },\r\n    { name: 'Manage Services', path: '/admin/services', icon: <FiTool /> }, // Changed icon to FiTool\r\n    // { name: 'Customers', path: '/admin/customers', icon: <FiUsers /> }, // Removed Customers\r\n    { name: 'Booking History', path: '/admin/booking-history', icon: <FiCalendar /> },\r\n    { name: 'Service History', path: '/admin/service-history', icon: <FiTool /> },\r\n    // { name: 'Organizations', path: '/admin/organizations', icon: <FiUsers /> },\r\n    { name: 'Settings', path: '/admin/settings', icon: <FiSettings /> }, // Added Settings\r\n  ];\r\n\r\n  return (\r\n    <> {/* Use a fragment to wrap both aside and backdrop */}\r\n      <div className=\"flex items-center justify-between px-4 py-3\">\r\n        <h1 className={`text-[#ECBE07] font-bold text-lg transition-all duration-300 ${isOpen ? 'block' : 'hidden'}`}>Admin</h1>\r\n        {/* The hamburger menu button will be moved to the Header component for mobile */}\r\n      </div>\r\n\r\n      <nav className=\"mt-6 space-y-4 px-4\">\r\n        {navItems.map((item) => (\r\n          <NavLink\r\n            key={item.path}\r\n            to={item.path}\r\n            title={item.name}\r\n            onClick={onLinkClick}\r\n            className={({ isActive }) =>\r\n              `flex items-center gap-3 py-2 px-4 rounded overflow-hidden text-ellipsis whitespace-nowrap hover:bg-yellow-400 hover:text-dark transition ${\r\n                isActive ? 'bg-[#ECBE07] text-[#004040]' : ''\r\n              }`\r\n            }\r\n          >\r\n            {item.icon} {isOpen && item.name}\r\n          </NavLink>\r\n        ))}\r\n        {/* Customers Dropdown */}\r\n        <div\r\n          onClick={() => setCustomerMenuOpen(!customerMenuOpen)}\r\n          className=\"{`font-bold text-lg transition-all duration-300 ${isOpen ? 'block' : 'hidden'}`} flex items-center justify-between cursor-pointer px-4 py-2 hover:bg-gray-200 hover:bg-yellow-400 hover:text-dark transition\"\r\n        >\r\n          <span className=\"flex items-center gap-3\" >\r\n            <FiUsers />\r\n            {isOpen && 'Customers'}\r\n          </span>\r\n          <FiChevronDown className={`${customerMenuOpen ? 'rotate-180' : ''} transition`} />\r\n        </div>\r\n        {customerMenuOpen && (\r\n          <div className=\"ml-8 mt-2 space-y-2 text-sm\">\r\n            <NavLink to=\"/admin/customers/Individual\" className=\"block hover:text-yellow-500\" onClick={onLinkClick}>Individual</NavLink>\r\n            {/* <NavLink to=\"/admin/customers/organization\" className=\"block hover:text-yellow-500\" onClick={onLinkClick}>Organization</NavLink> */}\r\n            <NavLink to=\"/admin/organizations\" className=\"block hover:text-yellow-500\" onClick={onLinkClick}>Organizations</NavLink>\r\n          </div>\r\n        )}\r\n        <NavLink\r\n          to=\"/admin/login\" // Changed to login for consistency with logout action in Header\r\n          title=\"Logout\"\r\n          className=\"flex items-center gap-3 py-2 px-4 rounded overflow-hidden text-ellipsis whitespace-nowrap text-red-400 hover:bg-yellow-400 hover:text-red-600 transition\"\r\n          onClick={() => localStorage.removeItem(\"adminLoggedIn\")} // Added logout action\r\n        >\r\n          <FiLogOut /> {isOpen && 'Logout'}\r\n        </NavLink>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nconst Breadcrumb = () => {\r\n  const location = useLocation();\r\n\r\n  const getBreadcrumbs = () => {\r\n    const pathnames = location.pathname.split('/').filter(x => x);\r\n    return pathnames.map((name, index) => {\r\n      const routeTo = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n      const isLast = index === pathnames.length - 1;\r\n      const displayName = name.charAt(0).toUpperCase() + name.slice(1).replace(/([A-Z])/g, ' $1').trim();\r\n\r\n      return (\r\n        <span key={displayName} className=\"flex items-center\">\r\n          {isLast ? (\r\n            <span className=\"text-gray-800 font-semibold\">\r\n              {displayName}\r\n            </span>\r\n          ) : (\r\n            <Link to={routeTo} className=\"text-gray-600 hover:text-gray-800\">\r\n              {displayName}\r\n            </Link>\r\n          )}\r\n          {!isLast && <span className=\"mx-2 text-gray-400\">/</span>}\r\n        </span>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <nav className=\"text-sm flex\">\r\n      {getBreadcrumbs()}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { FiUser, FiMenu } from 'react-icons/fi';\r\nimport Breadcrumb from './Breadcrumb';\r\n\r\nconst Header = ({ toggleSidebar }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"adminLoggedIn\");\r\n    navigate(\"/admin/login\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"bg-white text-dark border-b p-4 flex items-center justify-between sticky top-0 z-10 md:ml-0\">\r\n      <div className=\"flex items-center\">\r\n        <button onClick={toggleSidebar} className=\"text-dark md:hidden mr-4\">\r\n          <FiMenu size={24} />\r\n        </button>\r\n        {/* Logo */}\r\n        <div className=\"flex items-center mr-4\">\r\n          <span className=\"text-xl font-bold text-[#004040] hidden md:block\">Musibau Autoworks</span>\r\n          <span className=\"text-xl font-bold text-[#004040] md:hidden\">MA</span>\r\n        </div>\r\n        {/* Breadcrumbs */}\r\n        <div className=\"hidden md:flex text-sm\">\r\n          <Breadcrumb />\r\n        </div>\r\n      </div>\r\n      <div className=\"flex items-center gap-4\">\r\n        {/* Welcome Admin */}\r\n        <span className=\"text-dark hidden sm:block\">Welcome, Adam</span>\r\n        {/* Avatar */}\r\n        <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center text-gray-600 font-bold\">\r\n          <FiUser size={18} />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"bg-dark text-white p-4 text-center text-gray-600 mt-auto text-sm\">\r\n      © {new Date().getFullYear()} Musibau Autoworks Admin Panel\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport { Toaster } from 'react-hot-toast';\r\n\r\nconst AdminLayout = () => {\r\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const mobile = window.innerWidth < 768;\r\n      setIsMobile(mobile);\r\n      if (!mobile) {\r\n        setSidebarOpen(true); // Keep sidebar open on desktop\r\n      } else {\r\n        setSidebarOpen(false); // Keep sidebar closed on mobile\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize(); // Initial check\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const toggleSidebar = () => {\r\n    if (isMobile) {\r\n      setSidebarOpen(!isSidebarOpen);\r\n    }\r\n  };\r\n\r\n  const handleLinkClick = () => {\r\n    if (isMobile) {\r\n      setSidebarOpen(false); // Close sidebar on link click only on mobile\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-dark text-white\">\r\n      {/* Sidebar */}\r\n      <div\r\n        className={`fixed inset-y-0 left-0 bg-[#004040] text-white z-40\r\n          transform transition-transform duration-300\r\n          ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'}\r\n          md:relative md:translate-x-0 md:flex md:flex-col md:w-64`}\r\n      >\r\n        <Sidebar isOpen={isSidebarOpen} onLinkClick={handleLinkClick} />\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\r\n        {/* Header */}\r\n        <Header toggleSidebar={toggleSidebar} />\r\n\r\n        {/* Page Content */}\r\n        <main className=\"flex-1 p-4 overflow-y-auto\">\r\n          <Outlet />\r\n        </main>\r\n\r\n        {/* Footer */}\r\n        <Footer />\r\n        <Toaster position=\"top-right\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLayout;\r\n","import React, { useState } from 'react';\r\n\r\nconst BookingForm = () => {\r\n  const steps = [\"Choose Service\", \"Pick Date/Time\", \"Confirm\"];\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [formData, setFormData] = useState({\r\n    service: '',\r\n    date: '',\r\n    time: '',\r\n    customerName: '',\r\n    customerEmail: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateStep = () => {\r\n    let newErrors = {};\r\n    let isValid = true;\r\n\r\n    if (currentStep === 0 && !formData.service) {\r\n      newErrors.service = \"Service is required\";\r\n      isValid = false;\r\n    }\r\n    if (currentStep === 1) {\r\n      if (!formData.date) {\r\n        newErrors.date = \"Date is required\";\r\n        isValid = false;\r\n      }\r\n      if (!formData.time) {\r\n        newErrors.time = \"Time is required\";\r\n        isValid = false;\r\n      }\r\n    }\r\n    if (currentStep === 2) {\r\n      if (!formData.customerName) {\r\n        newErrors.customerName = \"Your Name is required\";\r\n        isValid = false;\r\n      }\r\n      if (!formData.customerEmail) {\r\n        newErrors.customerEmail = \"Your Email is required\";\r\n        isValid = false;\r\n      } else if (!/\\S+@\\S+\\.\\S+/.test(formData.customerEmail)) {\r\n        newErrors.customerEmail = \"Email address is invalid\";\r\n        isValid = false;\r\n      }\r\n    }\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (validateStep()) {\r\n      if (currentStep < steps.length - 1) {\r\n        setCurrentStep(currentStep + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (currentStep > 0) {\r\n      setCurrentStep(currentStep - 1);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    // Clear error for the field being changed\r\n    setErrors({ ...errors, [name]: '' });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (validateStep()) {\r\n      console.log(\"Booking Submitted:\", formData);\r\n      alert(\"Booking Submitted Successfully!\");\r\n      setCurrentStep(0);\r\n      setFormData({\r\n        service: '',\r\n        date: '',\r\n        time: '',\r\n        customerName: '',\r\n        customerEmail: '',\r\n      });\r\n      setErrors({});\r\n    }\r\n  };\r\n\r\n  const renderStepContent = () => {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return (\r\n          <div>\r\n            <h3 className=\"text-xl font-semibold mb-4 text-gray-800\">Step 1: Choose Service</h3>\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"service\" className=\"block text-sm font-medium text-gray-700\">Service:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"service\"\r\n                id=\"service\"\r\n                value={formData.service}\r\n                onChange={handleChange}\r\n                className={`mt-1 block w-full px-3 py-2 border ${errors.service ? 'border-red-500' : 'border-gray-300'} rounded-lg shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm`}\r\n                placeholder=\"e.g., Oil Change\"\r\n              />\r\n              {errors.service && <p className=\"text-red-500 text-xs mt-1\">{errors.service}</p>}\r\n            </div>\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div>\r\n            <h3 className=\"text-xl font-semibold mb-4 text-gray-800\">Step 2: Pick Date/Time</h3>\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"date\" className=\"block text-sm font-medium text-gray-700\">Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"date\"\r\n                id=\"date\"\r\n                value={formData.date}\r\n                onChange={handleChange}\r\n                className={`mt-1 block w-full px-3 py-2 border ${errors.date ? 'border-red-500' : 'border-gray-300'} rounded-lg shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm`}\r\n              />\r\n              {errors.date && <p className=\"text-red-500 text-xs mt-1\">{errors.date}</p>}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"time\" className=\"block text-sm font-medium text-gray-700\">Time:</label>\r\n              <input\r\n                type=\"time\"\r\n                name=\"time\"\r\n                id=\"time\"\r\n                value={formData.time}\r\n                onChange={handleChange}\r\n                className={`mt-1 block w-full px-3 py-2 border ${errors.time ? 'border-red-500' : 'border-gray-300'} rounded-lg shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm`}\r\n              />\r\n              {errors.time && <p className=\"text-red-500 text-xs mt-1\">{errors.time}</p>}\r\n            </div>\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <h3 className=\"text-xl font-semibold mb-4 text-gray-800\">Step 3: Confirm</h3>\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"customerName\" className=\"block text-sm font-medium text-gray-700\">Your Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"customerName\"\r\n                id=\"customerName\"\r\n                value={formData.customerName}\r\n                onChange={handleChange}\r\n                className={`mt-1 block w-full px-3 py-2 border ${errors.customerName ? 'border-red-500' : 'border-gray-300'} rounded-lg shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm`}\r\n                placeholder=\"John Doe\"\r\n              />\r\n              {errors.customerName && <p className=\"text-red-500 text-xs mt-1\">{errors.customerName}</p>}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"customerEmail\" className=\"block text-sm font-medium text-gray-700\">Your Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"customerEmail\"\r\n                id=\"customerEmail\"\r\n                value={formData.customerEmail}\r\n                onChange={handleChange}\r\n                className={`mt-1 block w-full px-3 py-2 border ${errors.customerEmail ? 'border-red-500' : 'border-gray-300'} rounded-lg shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm`}\r\n                placeholder=\"john.doe@example.com\"\r\n              />\r\n              {errors.customerEmail && <p className=\"text-red-500 text-xs mt-1\">{errors.customerEmail}</p>}\r\n            </div>\r\n            <div className=\"mt-6 p-4 bg-gray-50 rounded-lg border border-gray-200\">\r\n              <h4 className=\"text-lg font-medium text-gray-900 mb-2\">Booking Summary:</h4>\r\n              <p className=\"text-sm text-gray-700\"><strong>Service:</strong> {formData.service || 'N/A'}</p>\r\n              <p className=\"text-sm text-gray-700\"><strong>Date:</strong> {formData.date || 'N/A'}</p>\r\n              <p className=\"text-sm text-gray-700\"><strong>Time:</strong> {formData.time || 'N/A'}</p>\r\n              <p className=\"text-sm text-gray-700\"><strong>Customer Name:</strong> {formData.customerName || 'N/A'}</p>\r\n              <p className=\"text-sm text-gray-700\"><strong>Customer Email:</strong> {formData.customerEmail || 'N/A'}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-md\">\r\n      <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">New Booking</h2>\r\n\r\n      {/* Progress Stepper */}\r\n      <div className=\"flex flex-col sm:flex-row justify-between items-center mb-8 relative\">\r\n        {steps.map((step, index) => (\r\n          <React.Fragment key={step}>\r\n            <div className=\"flex flex-col items-center z-10 flex-1 mb-4 sm:mb-0\">\r\n              <div className={`w-10 h-10 rounded-full flex items-center justify-center text-white font-bold transition-colors duration-300 ${\r\n                index <= currentStep ? 'bg-indigo-600' : 'bg-gray-300'\r\n              }`}>\r\n                {index + 1}\r\n              </div>\r\n              <div className={`text-sm mt-2 text-center transition-colors duration-300 ${index <= currentStep ? 'text-indigo-600 font-semibold' : 'text-gray-500'}`}>\r\n                {step}\r\n              </div>\r\n            </div>\r\n            {index < steps.length - 1 && (\r\n              <div className={`absolute top-5 left-1/2 -translate-x-1/2 w-full h-0.5 bg-gray-300 transition-colors duration-300 ${\r\n                index < currentStep ? 'bg-indigo-600' : 'bg-gray-300'\r\n              }`} style={{ width: 'calc(100% / 3)', left: `calc(${index * (100 / 3)}% + 20px)` }} />\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Step Content with Animation */}\r\n      <div className=\"mb-8 transition-opacity duration-500 ease-in-out\">\r\n        {renderStepContent()}\r\n      </div>\r\n\r\n      {/* Navigation Buttons */}\r\n      <div className=\"flex justify-between\">\r\n        <button\r\n          onClick={handleBack}\r\n          disabled={currentStep === 0}\r\n          className=\"px-6 py-2 border border-gray-300 rounded-lg shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition duration-200\"\r\n        >\r\n          Back\r\n        </button>\r\n        {currentStep === steps.length - 1 ? (\r\n          <button\r\n            onClick={handleSubmit}\r\n            className=\"px-6 py-2 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition duration-200\"\r\n          >\r\n            Submit Booking\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={handleNext}\r\n            className=\"px-6 py-2 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-200\"\r\n          >\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingForm;\r\n","import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n  { name: 'Jan', bookings: 30 },\r\n  { name: 'Feb', bookings: 45 },\r\n  { name: 'Mar', bookings: 28 },\r\n  { name: 'Apr', bookings: 50 },\r\n  { name: 'May', bookings: 38 },\r\n  { name: 'Jun', bookings: 60 },\r\n  { name: 'Jul', bookings: 42 },\r\n  { name: 'Aug', bookings: 55 },\r\n  { name: 'Sep', bookings: 48 },\r\n  { name: 'Oct', bookings: 65 },\r\n  { name: 'Nov', bookings: 52 },\r\n  { name: 'Dec', bookings: 70 },\r\n];\r\n\r\nconst BookingsChart = () => {\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n      <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Bookings Per Month</h3>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"bookings\" stroke=\"#004040\" activeDot={{ r: 8, fill: '#ECBE07' }} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingsChart;\r\n","import React from 'react';\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <div className=\"flex justify-center items-center h-full\">\r\n      <div className=\"animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-[#004040]\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport BookingForm from '../components/BookingForm';\r\nimport BookingsChart from '../components/BookingsChart';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport { FiCalendar, FiUsers, FiDollarSign, FiClock, FiActivity, FiTrendingUp, FiAward, FiBriefcase, FiUserPlus } from 'react-icons/fi'; // Import new icons\r\n\r\nconst Dashboard = () => {\r\n  const [stats, setStats] = useState({\r\n    bookings: 0,\r\n    customers: 0,\r\n    revenue: '$0',\r\n  });\r\n  // New state variables for dashboard cards\r\n  const [bookingsThisWeek, setBookingsThisWeek] = useState(0);\r\n  const [topServices, setTopServices] = useState([]);\r\n  const [activeOrganizations, setActiveOrganizations] = useState(0);\r\n  const [newCustomersThisMonth, setNewCustomersThisMonth] = useState(0);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchStats = async () => {\r\n      setIsLoading(true);\r\n      await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate API call\r\n      setStats({\r\n        bookings: 150,\r\n        customers: 75,\r\n        revenue: '$15,000',\r\n      });\r\n      // Mock data for new cards\r\n      setBookingsThisWeek(45);\r\n      setTopServices([\r\n        { name: 'Oil Change', count: 30 },\r\n        { name: 'Tire Rotation', count: 25 },\r\n        { name: 'Brake Inspection', count: 20 },\r\n      ]);\r\n      setActiveOrganizations(15);\r\n      setNewCustomersThisMonth(12);\r\n      setIsLoading(false);\r\n    };\r\n    fetchStats();\r\n  }, []);\r\n\r\n  const recentActivities = [\r\n    { id: 1, type: 'Booking', description: 'New booking from John Doe for Oil Change', timestamp: '2 mins ago' },\r\n    { id: 2, type: 'Service Edit', description: 'Updated \"Tire Rotation\" service details', timestamp: '1 hour ago' },\r\n    { id: 3, type: 'Customer', description: 'New customer registered: Jane Smith', timestamp: '3 hours ago' },\r\n    { id: 4, type: 'Booking', description: 'Booking #1024 marked as completed', timestamp: 'Yesterday' },\r\n    { id: 5, type: 'Product Add', description: 'Added \"Synthetic Oil 5W-30\" to products', timestamp: '2 days ago' },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-4xl font-extrabold text-gray-800 mb-8 dark:text-white\">Dashboard Overview</h1>\r\n\r\n      {isLoading ? (\r\n        <LoadingSpinner />\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n          {/* Existing Cards */}\r\n          <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 text-center border border-gray-200 dark:border-gray-600 flex flex-col items-center\">\r\n            <FiCalendar size={30} className=\"text-[#004040] dark:text-[#ECBE07] mb-3\" />\r\n            <h2 className=\"text-gray-600 dark:text-gray-300 font-semibold text-lg mb-2\">Total Bookings</h2>\r\n            <p className=\"text-4xl font-bold text-[#004040] dark:text-[#ECBE07]\">{stats.bookings}</p>\r\n          </div>\r\n          <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 text-center border border-gray-200 dark:border-gray-600 flex flex-col items-center\">\r\n            <FiUsers size={30} className=\"text-[#004040] dark:text-[#ECBE07] mb-3\" />\r\n            <h2 className=\"text-gray-600 dark:text-gray-300 font-semibold text-lg mb-2\">Total Customers</h2>\r\n            <p className=\"text-4xl font-bold text-[#004040] dark:text-[#ECBE07]\">{stats.customers}</p>\r\n          </div>\r\n          <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 text-center border border-gray-200 dark:border-gray-600 flex flex-col items-center\">\r\n            <FiDollarSign size={30} className=\"text-[#004040] dark:text-[#ECBE07] mb-3\" />\r\n            <h2 className=\"text-gray-600 dark:text-gray-300 font-semibold text-lg mb-2\">Total Revenue</h2>\r\n            <p className=\"text-4xl font-bold text-[#004040] dark:text-[#ECBE07]\">{stats.revenue}</p>\r\n          </div>\r\n          {/* New Cards */}\r\n          <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 text-center border border-gray-200 dark:border-gray-600 flex flex-col items-center\">\r\n            <FiTrendingUp size={30} className=\"text-[#004040] dark:text-[#ECBE07] mb-3\" />\r\n            <h2 className=\"text-gray-600 dark:text-gray-300 font-semibold text-lg mb-2\">Bookings This Week</h2>\r\n            <p className=\"text-4xl font-bold text-[#004040] dark:text-[#ECBE07]\">{bookingsThisWeek}</p>\r\n          </div>\r\n          <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 text-center border border-gray-200 dark:border-gray-600 flex flex-col items-center\">\r\n            <FiAward size={30} className=\"text-[#004040] dark:text-[#ECBE07] mb-3\" />\r\n            <h2 className=\"text-gray-600 dark:text-gray-300 font-semibold text-lg mb-2\">Top Services</h2>\r\n            {/* Display top services - could be a list or just the top one */}\r\n            <p className=\"text-xl font-bold text-[#004040] dark:text-[#ECBE07]\">{topServices.length > 0 ? topServices[0].name : 'N/A'}</p>\r\n            {topServices.length > 1 && <p className=\"text-sm text-gray-500\">({topServices.length} services tracked)</p>}\r\n          </div>\r\n          <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 text-center border border-gray-200 dark:border-gray-600 flex flex-col items-center\">\r\n            <FiBriefcase size={30} className=\"text-[#004040] dark:text-[#ECBE07] mb-3\" />\r\n            <h2 className=\"text-gray-600 dark:text-gray-300 font-semibold text-lg mb-2\">Active Organizations</h2>\r\n            <p className=\"text-4xl font-bold text-[#004040] dark:text-[#ECBE07]\">{activeOrganizations}</p>\r\n          </div>\r\n          {/* This card might be better placed in a separate row or column if the grid is 3 columns */}\r\n          <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 text-center border border-gray-200 dark:border-gray-600 flex flex-col items-center\">\r\n            <FiUserPlus size={30} className=\"text-[#004040] dark:text-[#ECBE07] mb-3\" />\r\n            <h2 className=\"text-gray-600 dark:text-gray-300 font-semibold text-lg mb-2\">New Customers This Month</h2>\r\n            <p className=\"text-4xl font-bold text-[#004040] dark:text-[#ECBE07]\">{newCustomersThisMonth}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\r\n        <div className=\"w-full overflow-x-auto bg-white dark:bg-gray-700 rounded-lg shadow-md p-6\">\r\n          <BookingsChart />\r\n        </div>\r\n        <div className=\"bg-white dark:bg-gray-700 p-6 rounded-lg shadow-md\">\r\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4 dark:text-white\">Recent Activity</h3>\r\n          <ul className=\"divide-y divide-gray-200 dark:divide-gray-600\">\r\n            {recentActivities.map(activity => (\r\n              <li key={activity.id} className=\"py-3 flex items-center justify-between gap-4\">\r\n                <div className=\"flex items-center flex-1\">\r\n                  <FiActivity className=\"text-gray-500 dark:text-gray-400 mr-3\" />\r\n                  <div className=\"flex-1\">\r\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">{activity.type}</p>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">{activity.description}</p>\r\n                  </div>\r\n                </div>\r\n                <span className=\"text-xs text-gray-400 dark:text-gray-500 flex-shrink-0 flex items-center\">\r\n                  <FiClock className=\"mr-1\" /> {activity.timestamp}\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-8\">\r\n        <h2 className=\"text-3xl font-extrabold text-gray-800 mb-6 dark:text-white\">New Booking</h2>\r\n        <BookingForm />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport { FiCheckCircle, FiXCircle, FiInfo } from 'react-icons/fi';\r\n\r\nconst Bookings = () => {\r\n  const [bookings, setBookings] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchBookings = async () => {\r\n      setIsLoading(true);\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      setBookings([\r\n        { id: 1, customer: 'John Doe', service: 'Oil Change', date: '2023-10-26', status: 'Pending', userType: 'Registered', converted: true },\r\n        { id: 2, customer: 'Jane Smith', service: 'Tire Rotation', date: '2023-10-27', status: 'Completed', userType: 'Guest', converted: false },\r\n        { id: 3, customer: 'Acme Corp', service: 'Brake Inspection', date: '2023-10-28', status: 'Cancelled', userType: 'Registered', converted: true },\r\n        { id: 4, customer: 'Bob Johnson', service: 'Engine Tune-up', date: '2023-10-29', status: 'Pending', userType: 'Guest', converted: false },\r\n        { id: 5, customer: 'Global Solutions', service: 'Wheel Alignment', date: '2023-10-30', status: 'Completed', userType: 'Registered', converted: true },\r\n        { id: 6, customer: 'Alice Brown', service: 'Exhaust Repair', date: '2023-11-01', status: 'Pending', userType: 'Guest', converted: false },\r\n        { id: 7, customer: 'Tech Innovations', service: 'Battery Check', date: '2023-11-02', status: 'Completed', userType: 'Registered', converted: true },\r\n        { id: 8, customer: 'Charlie Davis', service: 'AC Service', date: '2023-11-03', status: 'Cancelled', userType: 'Guest', converted: false },\r\n        { id: 9, customer: 'Future Enterprises', service: 'Transmission Fluid Change', date: '2023-11-04', status: 'Completed', userType: 'Registered', converted: true },\r\n        { id: 10, customer: 'Diana Miller', service: 'Brake Pad Replacement', date: '2023-11-05', status: 'Pending', userType: 'Guest', converted: false },\r\n        { id: 11, customer: 'Eve White', service: 'Suspension Check', date: '2023-11-06', status: 'Completed', userType: 'Registered', converted: true },\r\n        { id: 12, customer: 'Frank Green', service: 'Headlight Restoration', date: '2023-11-07', status: 'Pending', userType: 'Guest', converted: false },\r\n      ]);\r\n      setIsLoading(false);\r\n    };\r\n    fetchBookings();\r\n  }, []);\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterStatus, setFilterStatus] = useState('all');\r\n  const [filterUserType, setFilterUserType] = useState('all'); // New state for user type filter\r\n  const [filterService, setFilterService] = useState('all'); // New state for service type filter\r\n  const [filterDateRange, setFilterDateRange] = useState('all');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const [isDetailModalOpen, setIsDetailModalOpen] = useState(false);\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n\r\n  const handleMarkCompleted = (bookingId) => {\r\n    const updatePromise = new Promise(async (resolve, reject) => {\r\n      await new Promise(res => setTimeout(res, 500));\r\n      setBookings(prevBookings =>\r\n        prevBookings.map(booking =>\r\n          booking.id === bookingId ? { ...booking, status: 'Completed' } : booking\r\n        )\r\n      );\r\n      resolve('Booking marked as completed!');\r\n    });\r\n\r\n    toast.promise(updatePromise, {\r\n      loading: 'Marking as completed...',\r\n      success: (message) => message,\r\n      error: 'Failed to mark as completed.',\r\n    });\r\n  };\r\n\r\n  const handleCancelBooking = (bookingId) => {\r\n    const updatePromise = new Promise(async (resolve, reject) => {\r\n      await new Promise(res => setTimeout(res, 500));\r\n      setBookings(prevBookings =>\r\n        prevBookings.map(booking =>\r\n          booking.id === bookingId ? { ...booking, status: 'Cancelled' } : booking\r\n        )\r\n      );\r\n      resolve('Booking cancelled successfully!');\r\n    });\r\n\r\n    toast.promise(updatePromise, {\r\n      loading: 'Cancelling booking...',\r\n      success: (message) => message,\r\n      error: 'Failed to cancel booking.',\r\n    });\r\n  };\r\n\r\n  const handleViewDetails = (booking) => {\r\n    setSelectedBooking(booking);\r\n    setIsDetailModalOpen(true);\r\n  };\r\n\r\n  const closeDetailModal = () => {\r\n    setIsDetailModalOpen(false);\r\n    setSelectedBooking(null);\r\n  };\r\n\r\n  // Get unique service types for the filter\r\n  const uniqueServices = [...new Set(bookings.map(booking => booking.service))];\r\n\r\n  const filteredBookings = bookings.filter(booking => {\r\n    const matchesSearch =\r\n      booking.customer.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      booking.service.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n    const matchesStatus = filterStatus === 'all' || booking.status === filterStatus;\r\n    const matchesUserType = filterUserType === 'all' || booking.userType === filterUserType; // Filter for user type\r\n    const matchesService = filterService === 'all' || booking.service === filterService; // Filter for service type\r\n\r\n    const bookingDate = new Date(booking.date);\r\n    const today = new Date();\r\n    const matchesDateRange = (() => {\r\n      if (filterDateRange === 'all') return true;\r\n      if (filterDateRange === 'today') {\r\n        return bookingDate.toDateString() === today.toDateString();\r\n      }\r\n      if (filterDateRange === 'this_week') {\r\n        const firstDayOfWeek = new Date(today.setDate(today.getDate() - today.getDay()));\r\n        const lastDayOfWeek = new Date(firstDayOfWeek);\r\n        lastDayOfWeek.setDate(firstDayOfWeek.getDate() + 6);\r\n        return bookingDate >= firstDayOfWeek && bookingDate <= lastDayOfWeek;\r\n      }\r\n      if (filterDateRange === 'this_month') {\r\n        return bookingDate.getMonth() === today.getMonth() && bookingDate.getFullYear() === today.getFullYear();\r\n      }\r\n      return true;\r\n    })();\r\n\r\n    return matchesSearch && matchesStatus && matchesUserType && matchesService && matchesDateRange;\r\n  });\r\n\r\n  const totalPages = Math.ceil(filteredBookings.length / itemsPerPage);\r\n  const currentBookings = filteredBookings.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-4xl font-extrabold text-gray-800 mb-8 dark:text-white\">Manage Bookings</h1>\r\n\r\n      <div className=\"overflow-x-auto bg-white p-6 rounded-lg shadow-md border border-gray-200\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <div className=\"flex items-center\">\r\n            <label htmlFor=\"search\" className=\"mr-2 text-gray-700\">Search:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"search\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n              placeholder=\"Search bookings...\"\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <label htmlFor=\"statusFilter\" className=\"mr-2 text-gray-700\">Status:</label>\r\n            <select\r\n              id=\"statusFilter\"\r\n              value={filterStatus}\r\n              onChange={(e) => setFilterStatus(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Statuses</option>\r\n              <option value=\"Pending\">Pending</option>\r\n              <option value=\"Completed\">Completed</option>\r\n              <option value=\"Cancelled\">Cancelled</option>\r\n            </select>\r\n            {/* User Type Filter */}\r\n            <label htmlFor=\"userTypeFilter\" className=\"ml-4 mr-2 text-gray-700\">User Type:</label>\r\n            <select\r\n              id=\"userTypeFilter\"\r\n              value={filterUserType}\r\n              onChange={(e) => setFilterUserType(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All User Types</option>\r\n              <option value=\"Registered\">Registered</option>\r\n              <option value=\"Guest\">Guest</option>\r\n            </select>\r\n            {/* Service Type Filter */}\r\n            <label htmlFor=\"serviceFilter\" className=\"ml-4 mr-2 text-gray-700\">Service:</label>\r\n            <select\r\n              id=\"serviceFilter\"\r\n              value={filterService}\r\n              onChange={(e) => setFilterService(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Services</option>\r\n              {uniqueServices.map(service => (\r\n                <option key={service} value={service}>{service}</option>\r\n              ))}\r\n            </select>\r\n            <label htmlFor=\"dateFilter\" className=\"ml-4 mr-2 text-gray-700\">Date:</label>\r\n            <select\r\n              id=\"dateFilter\"\r\n              value={filterDateRange}\r\n              onChange={(e) => setFilterDateRange(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Dates</option>\r\n              <option value=\"today\">Today</option>\r\n              <option value=\"this_week\">This Week</option>\r\n              <option value=\"this_month\">This Month</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {isLoading ? (\r\n          <LoadingSpinner />\r\n        ) : (\r\n          <>\r\n            {filteredBookings.length === 0 ? (\r\n              <p className=\"text-center text-gray-500 py-8\">No bookings found.</p>\r\n            ) : (\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Service</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {currentBookings.map((booking) => (\r\n                    <tr key={booking.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        {booking.customer}\r\n                        {booking.userType === 'Registered' && (\r\n                          <span className=\"ml-2 px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full font-semibold\">\r\n                            Registered User\r\n                          </span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{booking.service}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{booking.date}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                          booking.status === 'Pending' ? 'bg-yellow-100 text-yellow-800' :\r\n                          booking.status === 'Completed' ? 'bg-green-100 text-green-800' :\r\n                          'bg-red-100 text-red-800'\r\n                        }`}>\r\n                          {booking.status}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        <button onClick={() => handleMarkCompleted(booking.id)} className=\"bg-primary text-dark hover:bg-yellow-400 transition mr-2\">\r\n                          <FiCheckCircle className=\"inline-block mr-1\" />Complete\r\n                        </button>\r\n                        <button onClick={() => handleCancelBooking(booking.id)} className=\"bg-primary text-dark hover:bg-yellow-400 transition mr-2\">\r\n                          <FiXCircle className=\"inline-block mr-1\" />Cancel\r\n                        </button>\r\n                        <button onClick={() => handleViewDetails(booking)} className=\"bg-primary text-dark hover:bg-yellow-400 transition\">\r\n                          <FiInfo className=\"inline-block mr-1\" />Details\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n\r\n            {totalPages > 1 && (\r\n              <div className=\"flex justify-center mt-4\">\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n                  <button\r\n                    key={page}\r\n                    onClick={() => handlePageChange(page)}\r\n                    className={`px-4 py-2 mx-1 rounded-md border text-sm font-medium ${\r\n                      currentPage === page\r\n                        ? 'bg-primary text-dark border-primary'\r\n                        : 'border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition'\r\n                    }`}\r\n                  >\r\n                    {page}\r\n                  </button>\r\n                ))}\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {isDetailModalOpen && (\r\n        <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n          <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n            </div>\r\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\r\n                  Booking Details: {selectedBooking?.customer} - {selectedBooking?.service}\r\n                </h3>\r\n                <div className=\"mt-2 text-sm text-gray-500\">\r\n                  <p><strong>Customer:</strong> {selectedBooking?.customer}</p>\r\n                  <p><strong>Service:</strong> {selectedBooking?.service}</p>\r\n                  <p><strong>Date:</strong> {selectedBooking?.date}</p>\r\n                  <p><strong>Status:</strong> {selectedBooking?.status}</p>\r\n                  <p><strong>User Type:</strong> {selectedBooking?.userType}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  onClick={closeDetailModal}\r\n                  type=\"button\"\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default Bookings;\r\n","import { createContext, useState, useContext } from \"react\";\r\n\r\nexport const AdminAuthContext = createContext();\r\n\r\nconst dummyCredentials = {\r\n  username: \"Admin\",\r\n  password: \"password123\",\r\n};\r\n\r\nexport const AdminAuthProvider = ({ children }) => {\r\n  const [isAdminLoggedIn, setIsAdminLoggedIn] = useState(\r\n    !!localStorage.getItem(\"adminToken\")\r\n  );\r\n\r\n  const login = ({ username, password }) => {\r\n    if (\r\n      username === dummyCredentials.username &&\r\n      password === dummyCredentials.password\r\n    ) {\r\n      localStorage.setItem(\"adminToken\", \"dummyToken123\");\r\n      setIsAdminLoggedIn(true);\r\n      return { success: true };\r\n    } else {\r\n      return { success: false, message: \"Invalid credentials\" };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"adminToken\");\r\n    setIsAdminLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <AdminAuthContext.Provider value={{ isAdminLoggedIn, login, logout }}>\r\n      {children}\r\n    </AdminAuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAdminAuth = () => useContext(AdminAuthContext);\r\n","import React from 'react';\r\n\r\nconst AuthLayout = ({ children }) => {\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col justify-between bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"p-4 text-center border-b shadow-sm bg-white\">\r\n        <h1 className=\"text-xl font-semibold text-primary\">Musibau Autoworks</h1>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"flex-grow flex items-center justify-center p-4 animate-fadeIn opacity-0\">\r\n        {children}\r\n      </main>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"text-center text-sm text-gray-500 p-4 border-t\">\r\n        © {new Date().getFullYear()} Musibau Autoworks. All rights reserved.\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthLayout;\r\n","import { useContext, useState } from \"react\";\r\nimport { AdminAuthContext } from \"../context/AdminAuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthLayout from \"../layout/AuthLayout\";\r\n\r\nconst Login = () => {\r\n  const { login } = useContext(AdminAuthContext);\r\n  const [form, setForm] = useState({ username: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const result = login(form);\r\n    if (result.success) {\r\n      navigate(\"/admin/dashboard\");\r\n    } else {\r\n      setError(result.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthLayout>\r\n      <div className=\"bg-white rounded-lg shadow-lg border border-gray-200 p-8 text-center text-[#004040] w-full max-w-md mx-auto transition-all duration-500 ease-in-out opacity-0 animate-fadeIn sm:p-6 xs:p-4\">\r\n        <h2 className=\"text-2xl font-semibold text-[#ECBE07] flex items-center justify-center gap-2\">\r\n          <img src=\"/logo.png\" alt=\"Logo\" className=\"h-6 w-6\" /> {/* Placeholder for logo icon */}\r\n          Admin Login\r\n        </h2>\r\n        <p className=\"mt-2 text-sm text-gray-600\">Login to Musibau Autoworks Admin panel</p>\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          {error && <p className=\"text-red-500\">{error}</p>}\r\n          <div>\r\n            <label htmlFor=\"username\" className=\"sr-only\">Username</label>\r\n            <input\r\n              id=\"username\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              autoComplete=\"username\"\r\n              required\r\n              className=\"relative block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm transition duration-150 ease-in-out\"\r\n              placeholder=\"Username\"\r\n              value={form.username}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              required\r\n              className=\"relative block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm transition duration-150 ease-in-out\"\r\n              placeholder=\"Password\"\r\n              value={form.password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-dark bg-primary hover:bg-yellow-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-150 ease-in-out hover:scale-105\"\r\n            >\r\n              Sign in\r\n            </button>\r\n          </div>\r\n          <div className=\"text-sm mt-4\">\r\n            <Link to=\"/admin/forgot-password\" className=\"font-medium text-primary hover:text-yellow-400\">\r\n              Forgot your password?\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </AuthLayout>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast'; // Import toast from react-hot-toast\r\nimport LoadingSpinner from '../components/LoadingSpinner'; // Import LoadingSpinner\r\nimport { FiEdit, FiTrash2 } from 'react-icons/fi'; // Import icons\r\nimport { Link } from 'react-router-dom'; // Import Link for navigation\r\n\r\nconst Customers = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true); // New loading state\r\n\r\n  useEffect(() => {\r\n    const fetchCustomers = async () => {\r\n      setIsLoading(true);\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\r\n      setCustomers([\r\n        { id: 1, name: 'John Doe', email: 'john.doe@example.com', phone: '123-456-7890', totalBookings: 3, lastServiceDate: '2023-10-20', organization: 'Global Solutions' },\r\n        { id: 2, name: 'Jane Smith', email: 'jane.smith@example.com', phone: '098-765-4321', totalBookings: 5, lastServiceDate: '2023-10-25', organization: null },\r\n        { id: 3, name: 'Acme Corp', email: 'contact@acmecorp.com', phone: '555-123-4567', totalBookings: 10, lastServiceDate: '2023-10-15', organization: 'Acme Corp' },\r\n        { id: 4, name: 'Bob Johnson', email: 'bob.j@example.com', phone: '111-222-3333', totalBookings: 1, lastServiceDate: '2023-11-01', organization: null },\r\n        { id: 5, name: 'Global Solutions', email: 'info@globalsolutions.com', phone: '444-555-6666', totalBookings: 7, lastServiceDate: '2023-10-18', organization: 'Global Solutions' },\r\n        { id: 6, name: 'Alice Brown', email: 'alice.b@example.com', phone: '777-888-9999', totalBookings: 2, lastServiceDate: '2023-10-22', organization: null },\r\n        { id: 7, name: 'Tech Innovations', email: 'support@techinnovations.com', phone: '222-333-4444', totalBookings: 12, lastServiceDate: '2023-10-10', organization: 'Tech Innovations' },\r\n        { id: 8, name: 'Charlie Davis', email: 'charlie.d@example.com', phone: '999-000-1111', totalBookings: 4, lastServiceDate: '2023-10-28', organization: null },\r\n        { id: 9, name: 'Future Enterprises', email: 'sales@futureent.com', phone: '333-444-5555', totalBookings: 8, lastServiceDate: '2023-10-05', organization: 'Future Enterprises' },\r\n        { id: 10, name: 'Diana Miller', email: 'diana.m@example.com', phone: '666-777-8888', totalBookings: 6, lastServiceDate: '2023-10-29', organization: null },\r\n      ]);\r\n      setIsLoading(false);\r\n    };\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterType, setFilterType] = useState('all'); // 'all', 'new', 'frequent', 'organization'\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingCustomer, setEditingCustomer] = useState(null);\r\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\r\n  const [customerToDeleteId, setCustomerToDeleteId] = useState(null);\r\n\r\n  const handleViewEditCustomer = (customerToEdit) => {\r\n    setEditingCustomer(customerToEdit);\r\n    setIsModalOpen(true);\r\n    toast.success(`Viewing/Editing customer: ${customerToEdit.name}`);\r\n  };\r\n\r\n  const handleDeleteCustomer = (customerId) => {\r\n    setCustomerToDeleteId(customerId);\r\n    setDeleteConfirmOpen(true);\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    const deletePromise = new Promise(async (resolve, reject) => {\r\n      await new Promise(res => setTimeout(res, 500)); // Simulate API call\r\n      setCustomers(prevCustomers => prevCustomers.filter(customer => customer.id !== customerToDeleteId));\r\n      setDeleteConfirmOpen(false);\r\n      setCustomerToDeleteId(null);\r\n      resolve('Customer deleted successfully!');\r\n    });\r\n\r\n    toast.promise(deletePromise, {\r\n      loading: 'Deleting customer...',\r\n      success: (message) => message,\r\n      error: 'Failed to delete customer.',\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setEditingCustomer(null);\r\n  };\r\n\r\n  const closeDeleteConfirmModal = () => {\r\n    setDeleteConfirmOpen(false);\r\n    setCustomerToDeleteId(null);\r\n  };\r\n\r\n  // Filter customers based on search term and filter type\r\n  const filteredCustomers = customers.filter(customer => {\r\n    const matchesSearch =\r\n      customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      customer.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      customer.phone.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n    const matchesFilter = (() => {\r\n      if (filterType === 'all') return true;\r\n      if (filterType === 'new') return customer.totalBookings === 1; // Example: \"New\" if 1 booking\r\n      if (filterType === 'frequent') return customer.totalBookings >= 5; // Example: \"Frequent\" if 5 or more bookings\r\n      if (filterType === 'organization') return customer.organization !== null && customer.organization !== undefined; // Filter for customers associated with an organization\r\n      return true;\r\n    })();\r\n\r\n    return matchesSearch && matchesFilter;\r\n  });\r\n\r\n  // Calculate pagination\r\n  const totalPages = Math.ceil(filteredCustomers.length / itemsPerPage);\r\n  const currentCustomers = filteredCustomers.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"text-2xl font-bold mb-4\">Manage Customers</h2>\r\n      <div className=\"overflow-x-auto bg-white p-6 rounded-lg shadow\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <div className=\"flex items-center\">\r\n            <label htmlFor=\"search\" className=\"mr-2 text-gray-700\">Search:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"search\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n              placeholder=\"Search customers...\"\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <label htmlFor=\"filter\" className=\"mr-2 text-gray-700\">Filter:</label>\r\n            <select\r\n              id=\"filter\"\r\n              value={filterType}\r\n              onChange={(e) => setFilterType(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Customers</option>\r\n              <option value=\"new\">New Customers</option>\r\n              <option value=\"frequent\">Frequent Bookers</option>\r\n              <option value=\"organization\">By Organization</option> {/* Added Organization filter */}\r\n            </select>\r\n          </div>\r\n          <button\r\n            onClick={() => toast.info('CSV Export functionality coming soon!')}\r\n            className=\"bg-primary text-dark hover:bg-yellow-400 transition font-bold py-2 px-4 rounded\"\r\n          >\r\n            Export to CSV\r\n          </button>\r\n        </div>\r\n\r\n        {isLoading ? (\r\n          <LoadingSpinner />\r\n        ) : (\r\n          <>\r\n            {filteredCustomers.length === 0 ? (\r\n              <p className=\"text-center text-gray-500 py-8\">No customers found.</p>\r\n            ) : (\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-primary text-dark font-semibold\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Phone</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Total Bookings</th>\r\n                    {/* New Columns */}\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Last Service Date</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Organization</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"divide-y divide-gray-200\">\r\n                  {currentCustomers.map((customer, index) => (\r\n                    <tr key={customer.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                      <Link to={`/admin/customers/${customer.id}?userType=admin`} className=\"text-blue-600 hover:underline\">\r\n                        {customer.name}\r\n                      </Link>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{customer.email}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{customer.phone}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{customer.totalBookings}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{customer.lastServiceDate}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{customer.organization || 'N/A'}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        {/* Add actions like Edit/Delete if needed */}\r\n                        <Link to={`/admin/customers/${customer.id}?userType=admin`} className=\"bg-primary text-dark hover:bg-yellow-400 transition px-3 py-1 rounded flex items-center gap-1\">View Details</Link>\r\n                        <button onClick={() => handleDeleteCustomer(customer.id)} className=\"bg-red text-dark hover:bg-red-500 transition px-3 py-1 rounded flex items-center gap-1\">Delete</button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n\r\n            {/* Pagination Controls */}\r\n            {totalPages > 1 && (\r\n              <div className=\"flex justify-center mt-4\">\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n                  <button\r\n                    key={page}\r\n                    onClick={() => handlePageChange(page)}\r\n                    className={`px-4 py-2 mx-1 rounded-md border text-sm font-medium ${\r\n                      currentPage === page\r\n                        ? 'bg-primary text-dark border-primary'\r\n                        : 'border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition'\r\n                    }`}\r\n                  >\r\n                    {page}\r\n                  </button>\r\n                ))}\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Mock Modal for View/Edit Customer */}\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n          <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n            </div>\r\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\r\n                  {editingCustomer ? `View/Edit Customer: ${editingCustomer.name}` : 'Customer Details'}\r\n                </h3>\r\n                <div className=\"mt-2\">\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    This is a mock modal for viewing/editing customer details.\r\n                    <br />\r\n                    Customer ID: {editingCustomer?.id}\r\n                    <br />\r\n                    Name: {editingCustomer?.name}\r\n                    <br />\r\n                    Email: {editingCustomer?.email}\r\n                    <br />\r\n                    Phone: {editingCustomer?.phone}\r\n                    <br />\r\n                    Total Bookings: {editingCustomer?.totalBookings}\r\n                    {/* Display new fields in modal */}\r\n                    <br />\r\n                    Last Service Date: {editingCustomer?.lastServiceDate || 'N/A'}\r\n                    <br />\r\n                    Organization: {editingCustomer?.organization || 'N/A'}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  onClick={closeModal}\r\n                  type=\"button\"\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      {deleteConfirmOpen && (\r\n        <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n          <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n            </div>\r\n\r\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"sm:flex sm:items-start\">\r\n                  <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n                    <svg className=\"h-6 w-6 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.364 3.357l-1.094.364a1 1 0 00-.893.893l-1.094 3.636c-.15.501.106 1.02.653 1.215l.773.193c.47.117.97.175 1.47.175h10.002c.5.001.999-.058 1.47-.175l.773-.193c.547-.195.803-.714.653-1.215l-1.094-.364a1 1 0 00-.893-.893l-1.094-.364zM21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-title\">\r\n                      Delete Customer\r\n                    </h3>\r\n                    <div className=\"mt-2\">\r\n                      <p className=\"text-sm text-gray-500\">\r\n                        Are you sure you want to delete this customer? This action cannot be undone.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  onClick={confirmDelete}\r\n                  type=\"button\"\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                >\r\n                  Delete\r\n                </button>\r\n                <button\r\n                  onClick={closeDeleteConfirmModal}\r\n                  type=\"button\"\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n","import React, { useState } from 'react';\r\n\r\nconst ServiceForm = ({ onSubmit, initialData }) => {\r\n  const [formData, setFormData] = useState(initialData || {\r\n    title: '',\r\n    description: '',\r\n    category: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(formData);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4 p-6 bg-white rounded-lg shadow\">\r\n      <div>\r\n        <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700\">Service Title</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          value={formData.title}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n        <textarea\r\n          id=\"description\"\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n          rows=\"3\"\r\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          required\r\n        ></textarea>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700\">Category</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"category\"\r\n          name=\"category\"\r\n          value={formData.category}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n        >\r\n          {initialData ? 'Update Service' : 'Add Service'}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ServiceForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ServiceForm from '../components/ServiceForm'; // Import ServiceForm\r\nimport toast from 'react-hot-toast'; // Import toast from react-hot-toast\r\nimport LoadingSpinner from '../components/LoadingSpinner'; // Import LoadingSpinner\r\nimport { FiEdit, FiTrash2 } from 'react-icons/fi'; // Import icons\r\n\r\nconst Services = () => {\r\n  const [services, setServices] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true); // New loading state\r\n\r\n  useEffect(() => {\r\n    // Simulate fetching data\r\n    const fetchServices = async () => {\r\n      setIsLoading(true);\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate network delay\r\n      setServices([\r\n        { id: 1, title: 'Oil Change', description: 'Standard oil and filter change', category: 'Maintenance' },\r\n        { id: 2, title: 'Tire Rotation', description: 'Rotate and balance tires', category: 'Maintenance' },\r\n        { id: 3, title: 'Brake Inspection', description: 'Inspect brake pads and rotors', category: 'Inspection' },\r\n        { id: 4, title: 'Engine Tune-up', description: 'Comprehensive engine check and adjustment', category: 'Maintenance' },\r\n        { id: 5, title: 'Wheel Alignment', description: 'Align wheels for optimal tire wear', category: 'Suspension' },\r\n        { id: 6, title: 'Exhaust Repair', description: 'Fix or replace damaged exhaust components', category: 'Exhaust' },\r\n        { id: 7, title: 'Battery Check', description: 'Test battery health and charge', category: 'Electrical' },\r\n        { id: 8, title: 'AC Service', description: 'Recharge and inspect air conditioning system', category: 'HVAC' },\r\n        { id: 9, title: 'Transmission Fluid Change', description: 'Flush and replace transmission fluid', category: 'Drivetrain' },\r\n        { id: 10, title: 'Brake Pad Replacement', description: 'Replace worn brake pads', category: 'Brakes' },\r\n        { id: 11, title: 'Suspension Check', description: 'Inspect suspension components for wear', category: 'Suspension' },\r\n        { id: 12, title: 'Headlight Restoration', description: 'Restore clarity to faded headlights', category: 'Electrical' },\r\n      ]);\r\n      setIsLoading(false);\r\n    };\r\n    fetchServices();\r\n  }, []); // Empty dependency array means this effect runs once on mount\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingService, setEditingService] = useState(null);\r\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\r\n  const [serviceToDeleteId, setServiceToDeleteId] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const handleAddService = (newService) => {\r\n    const actionPromise = new Promise(async (resolve, reject) => {\r\n      await new Promise(res => setTimeout(res, 500)); // Simulate API call\r\n      if (editingService) {\r\n        setServices(prevServices =>\r\n          prevServices.map(service =>\r\n            service.id === editingService.id ? { ...newService, id: service.id } : service\r\n          )\r\n        );\r\n        resolve('Service updated successfully!');\r\n      } else {\r\n        const serviceWithId = { ...newService, id: services.length + 1 };\r\n        setServices(prevServices => [...prevServices, serviceWithId]);\r\n        resolve('Service added successfully!');\r\n      }\r\n      setIsModalOpen(false);\r\n      setEditingService(null);\r\n    });\r\n\r\n    toast.promise(actionPromise, {\r\n      loading: editingService ? 'Updating service...' : 'Adding service...',\r\n      success: (message) => message,\r\n      error: 'Failed to perform action.',\r\n    });\r\n  };\r\n\r\n  const handleEditService = (serviceToEdit) => {\r\n    setEditingService(serviceToEdit); // Set the service to be edited\r\n    setIsModalOpen(true); // Open the modal\r\n  };\r\n\r\n  const handleDeleteService = (serviceId) => {\r\n    setServiceToDeleteId(serviceId);\r\n    setDeleteConfirmOpen(true);\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    const deletePromise = new Promise(async (resolve, reject) => {\r\n      await new Promise(res => setTimeout(res, 500)); // Simulate API call\r\n      setServices(prevServices => prevServices.filter(service => service.id !== serviceToDeleteId));\r\n      setDeleteConfirmOpen(false);\r\n      setServiceToDeleteId(null);\r\n      resolve('Service deleted successfully!');\r\n    });\r\n\r\n    toast.promise(deletePromise, {\r\n      loading: 'Deleting service...',\r\n      success: (message) => message,\r\n      error: 'Failed to delete service.',\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setEditingService(null); // Clear editing service when closing modal\r\n  };\r\n\r\n  const closeDeleteConfirmModal = () => {\r\n    setDeleteConfirmOpen(false);\r\n    setServiceToDeleteId(null);\r\n  };\r\n\r\n  // Filter services based on search term\r\n  const filteredServices = services.filter(service =>\r\n    service.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    service.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    service.category.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Calculate pagination\r\n  const totalPages = Math.ceil(filteredServices.length / itemsPerPage);\r\n  const currentServices = filteredServices.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"text-2xl font-bold mb-4\">Manage Services</h2>\r\n\r\n      <div className=\"overflow-x-auto bg-white p-6 rounded-lg shadow\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <div className=\"flex items-center\">\r\n            <label htmlFor=\"search\" className=\"mr-2 text-gray-700\">Search:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"search\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n              placeholder=\"Search services...\"\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              setEditingService(null);\r\n              setIsModalOpen(true);\r\n            }}\r\n            className=\"bg-primary text-dark hover:bg-yellow-400 transition font-bold py-2 px-4 rounded\"\r\n          >\r\n            Add New Service\r\n          </button>\r\n        </div>\r\n\r\n        {isLoading ? (\r\n          <LoadingSpinner />\r\n        ) : (\r\n          <>\r\n            {filteredServices.length === 0 ? (\r\n              <p className=\"text-center text-gray-500 py-8\">No services found.</p>\r\n            ) : (\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Title</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Description</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Category</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {currentServices.map((service) => (\r\n                    <tr key={service.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{service.title}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{service.description}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\r\n                          {service.category}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        <button onClick={() => handleEditProduct(product)} className=\"bg-yellow-500 hover:bg-yellow-600 text-white transition px-3 py-1 rounded flex items-center gap-1\">\r\n                          <FiEdit /> Edit\r\n                        </button>\r\n                        <button onClick={() => handleDeleteProduct(product.id)} className=\"bg-red-500 hover:bg-yellow-600 text-white transition px-3 py-1 rounded flex items-center gap-1\">\r\n                          <FiTrash2 /> Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n\r\n            {/* Pagination Controls */}\r\n            {totalPages > 1 && (\r\n              <div className=\"flex justify-center mt-4\">\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n                  <button\r\n                    key={page}\r\n                    onClick={() => handlePageChange(page)}\r\n                    className={`px-4 py-2 mx-1 rounded-md border text-sm font-medium ${\r\n                      currentPage === page\r\n                        ? 'bg-primary text-dark border-primary'\r\n                        : 'border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition'\r\n                    }`}\r\n                  >\r\n                    {page}\r\n                  </button>\r\n                ))}\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal for Service Form */}\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n          <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n            </div>\r\n\r\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"sm:flex sm:items-start\">\r\n                  <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\">\r\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-title\">\r\n                      {editingService ? 'Edit Service' : 'Add New Service'}\r\n                    </h3>\r\n                    <div className=\"mt-2\">\r\n                      <ServiceForm onSubmit={handleAddService} initialData={editingService} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  onClick={closeModal}\r\n                  type=\"button\"\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      {deleteConfirmOpen && (\r\n        <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n          <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n            </div>\r\n\r\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"sm:flex sm:items-start\">\r\n                  <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n                    <svg className=\"h-6 w-6 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.364 3.357l-1.094.364a1 1 0 00-.893.893l-1.094 3.636c-.15.501.106 1.02.653 1.215l.773.193c.47.117.97.175 1.47.175h10.002c.5.001.999-.058 1.47-.175l.773-.193c.547-.195.803-.714.653-1.215l-1.094-.364a1 1 0 00-.893-.893l-1.094-.364zM21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-title\">\r\n                      Delete Service\r\n                    </h3>\r\n                    <div className=\"mt-2\">\r\n                      <p className=\"text-sm text-gray-500\">\r\n                        Are you sure you want to delete this service? This action cannot be undone.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  onClick={confirmDelete}\r\n                  type=\"button\"\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                >\r\n                  Delete\r\n                </button>\r\n                <button\r\n                  onClick={closeDeleteConfirmModal}\r\n                  type=\"button\"\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React, { useState } from 'react';\r\n\r\nconst ProductForm = ({ onSubmit, initialData }) => {\r\n  const [formData, setFormData] = useState(initialData || {\r\n    name: '',\r\n    price: '',\r\n    image: '', // Assuming image will be a file input or URL string\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Handle image input separately if it's a file upload\r\n  const handleImageChange = (e) => {\r\n    // For simplicity, we'll just store the filename or URL string\r\n    // In a real app, you'd handle file uploads\r\n    if (e.target.files.length > 0) {\r\n      setFormData(prevData => ({\r\n        ...prevData,\r\n        image: e.target.files[0].name, // Or e.target.files[0].url if it's a URL input\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(formData);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4 p-6 bg-white rounded-lg shadow\">\r\n      <div>\r\n        <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">Product Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700\">Price</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"price\"\r\n          name=\"price\"\r\n          value={formData.price}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          required\r\n          min=\"0\"\r\n          step=\"0.01\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"image\" className=\"block text-sm font-medium text-gray-700\">Product Image</label>\r\n        <input\r\n          type=\"text\" // Changed to text for simplicity, assuming URL input or filename\r\n          id=\"image\"\r\n          name=\"image\"\r\n          value={formData.image}\r\n          onChange={handleChange}\r\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n          placeholder=\"Enter image URL or filename\"\r\n        />\r\n        {/* If you want to handle file uploads, you'd use:\r\n        <input\r\n          type=\"file\"\r\n          id=\"imageFile\"\r\n          name=\"imageFile\"\r\n          onChange={handleImageChange}\r\n          className=\"mt-1 block w-full text-sm text-gray-900 border border-gray-300 rounded-md cursor-pointer bg-gray-50 focus:outline-none focus:border-indigo-500\"\r\n          accept=\"image/*\"\r\n        />\r\n        */}\r\n      </div>\r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n        >\r\n          {initialData ? 'Update Product' : 'Add Product'}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ProductForm from '../components/ProductForm';\r\nimport toast from 'react-hot-toast';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport { FiPlus, FiEdit, FiTrash2 } from 'react-icons/fi';\r\nimport { formatCurrency } from '../../utils/formatCurrency';\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      setIsLoading(true);\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      setProducts([\r\n        { id: 1, name: 'Engine Oil', price: 15, category: 'Fluids', stock: 100, image: 'https://via.placeholder.com/50/FF0000/FFFFFF?text=Oil' },\r\n        { id: 2, name: 'Tire', price: 100, category: 'Tires', stock: 50, image: 'https://via.placeholder.com/50/0000FF/FFFFFF?text=Tire' },\r\n        { id: 3, name: 'Brake Pads', price: 50, category: 'Brakes', stock: 75, image: 'https://via.placeholder.com/50/00FF00/FFFFFF?text=Brake' },\r\n        { id: 4, name: 'Spark Plugs', price: 20, category: 'Engine', stock: 120, image: 'https://via.placeholder.com/50/FFFF00/000000?text=Spark' },\r\n        { id: 5, name: 'Air Filter', price: 25, category: 'Filters', stock: 90, image: 'https://via.placeholder.com/50/FF00FF/FFFFFF?text=Air' },\r\n        { id: 6, name: 'Wiper Blades', price: 30, category: 'Exterior', stock: 60, image: 'https://via.placeholder.com/50/00FFFF/000000?text=Wiper' },\r\n        { id: 7, name: 'Headlight Bulb', price: 10, category: 'Electrical', stock: 200, image: 'https://via.placeholder.com/50/800080/FFFFFF?text=Bulb' },\r\n        { id: 8, name: 'Battery', price: 150, category: 'Electrical', stock: 40, image: 'https://via.placeholder.com/50/FFA500/FFFFFF?text=Battery' },\r\n        { id: 9, name: 'Brake Fluid', price: 12, category: 'Fluids', stock: 110, image: 'https://via.placeholder.com/50/A52A2A/FFFFFF?text=Fluid' },\r\n        { id: 10, name: 'Coolant', price: 18, category: 'Fluids', stock: 80, image: 'https://via.placeholder.com/50/008000/FFFFFF?text=Coolant' },\r\n        { id: 11, name: 'Oil Filter', price: 10, category: 'Filters', stock: 130, image: 'https://via.placeholder.com/50/4B0082/FFFFFF?text=Filter' },\r\n        { id: 12, name: 'Cabin Filter', price: 35, category: 'Filters', stock: 70, image: 'https://via.placeholder.com/50/EE82EE/FFFFFF?text=Cabin' },\r\n      ]);\r\n      setIsLoading(false);\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingProduct, setEditingProduct] = useState(null);\r\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\r\n  const [productToDeleteId, setProductToDeleteId] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterCategory, setFilterCategory] = useState('all');\r\n  const [filterStock, setFilterStock] = useState('all');\r\n  const [sortBy, setSortBy] = useState('name');\r\n  const [sortOrder, setSortOrder] = useState('asc');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const handleAddProduct = (newProduct) => {\r\n    const actionPromise = new Promise(async (resolve, reject) => {\r\n      await new Promise(res => setTimeout(res, 500));\r\n      if (editingProduct) {\r\n        setProducts(prevProducts =>\r\n          prevProducts.map(product =>\r\n            product.id === editingProduct.id ? { ...newProduct, id: product.id } : product\r\n          )\r\n        );\r\n        resolve('Product updated successfully!');\r\n      } else {\r\n        const productWithId = { ...newProduct, id: products.length + 1 };\r\n        setProducts(prevProducts => [...prevProducts, productWithId]);\r\n        resolve('Product added successfully!');\r\n      }\r\n      setIsModalOpen(false);\r\n      setEditingProduct(null);\r\n    });\r\n\r\n    toast.promise(actionPromise, {\r\n      loading: editingProduct ? 'Updating product...' : 'Adding product...',\r\n      success: (message) => message,\r\n      error: 'Failed to perform action.',\r\n    });\r\n  };\r\n\r\n  const handleEditProduct = (productToEdit) => {\r\n    setEditingProduct(productToEdit);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteProduct = (productId) => {\r\n    setProductToDeleteId(productId);\r\n    setDeleteConfirmOpen(true);\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    const deletePromise = new Promise(async (resolve, reject) => {\r\n      await new Promise(res => setTimeout(res, 500));\r\n      setProducts(prevProducts => prevProducts.filter(product => product.id !== productToDeleteId));\r\n      setDeleteConfirmOpen(false);\r\n      setProductToDeleteId(null);\r\n      resolve('Product deleted successfully!');\r\n    });\r\n\r\n    toast.promise(deletePromise, {\r\n      loading: 'Deleting product...',\r\n      success: (message) => message,\r\n      error: 'Failed to delete product.',\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setEditingProduct(null);\r\n  };\r\n\r\n  const closeDeleteConfirmModal = () => {\r\n    setDeleteConfirmOpen(false);\r\n    setProductToDeleteId(null);\r\n  };\r\n\r\n  const filteredProducts = products.filter(product => {\r\n    const matchesSearch =\r\n      product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      product.category.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n    const matchesCategory = filterCategory === 'all' || product.category === filterCategory;\r\n\r\n    const matchesStock = (() => {\r\n      if (filterStock === 'all') return true;\r\n      if (filterStock === 'in_stock') return product.stock > 10;\r\n      if (filterStock === 'low_stock') return product.stock <= 10 && product.stock > 0;\r\n      if (filterStock === 'out_of_stock') return product.stock === 0;\r\n      return true;\r\n    })();\r\n\r\n    return matchesSearch && matchesCategory && matchesStock;\r\n  });\r\n\r\n  const sortedProducts = [...filteredProducts].sort((a, b) => {\r\n    if (sortBy === 'name') {\r\n      return sortOrder === 'asc' ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name);\r\n    }\r\n    if (sortBy === 'price') {\r\n      return sortOrder === 'asc' ? a.price - b.price : b.price - a.price;\r\n    }\r\n    if (sortBy === 'stock') {\r\n      return sortOrder === 'asc' ? a.stock - b.stock : b.stock - a.stock;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  const totalPages = Math.ceil(sortedProducts.length / itemsPerPage);\r\n  const currentProducts = sortedProducts.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-4xl font-extrabold text-gray-800 mb-8 dark:text-white\">Manage Products</h1>\r\n\r\n      <div className=\"overflow-x-auto bg-white p-6 rounded-lg shadow-md border border-gray-200\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <div className=\"flex items-center\">\r\n            <label htmlFor=\"search\" className=\"mr-2 text-gray-700\">Search:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"search\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n              placeholder=\"Search products...\"\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <label htmlFor=\"categoryFilter\" className=\"mr-2 text-gray-700\">Category:</label>\r\n            <select\r\n              id=\"categoryFilter\"\r\n              value={filterCategory}\r\n              onChange={(e) => setFilterCategory(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Categories</option>\r\n              <option value=\"Fluids\">Fluids</option>\r\n              <option value=\"Tires\">Tires</option>\r\n              <option value=\"Brakes\">Brakes</option>\r\n              <option value=\"Engine\">Engine</option>\r\n              <option value=\"Filters\">Filters</option>\r\n              <option value=\"Exterior\">Exterior</option>\r\n              <option value=\"Electrical\">Electrical</option>\r\n            </select>\r\n            <label htmlFor=\"stockFilter\" className=\"ml-4 mr-2 text-gray-700\">Stock:</label>\r\n            <select\r\n              id=\"stockFilter\"\r\n              value={filterStock}\r\n              onChange={(e) => setFilterStock(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Stock</option>\r\n              <option value=\"in_stock\">In Stock</option>\r\n              <option value=\"low_stock\">Low Stock</option>\r\n              <option value=\"out_of_stock\">Out of Stock</option>\r\n            </select>\r\n            <label htmlFor=\"sortBy\" className=\"ml-4 mr-2 text-gray-700\">Sort By:</label>\r\n            <select\r\n              id=\"sortBy\"\r\n              value={sortBy}\r\n              onChange={(e) => setSortBy(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"name\">Name</option>\r\n              <option value=\"price\">Price</option>\r\n              <option value=\"stock\">Stock</option>\r\n            </select>\r\n            <button\r\n              onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}\r\n              className=\"ml-2 px-3 py-2 rounded-md border border-gray-300 bg-white text-gray-700 hover:bg-gray-50\"\r\n            >\r\n              {sortOrder === 'asc' ? 'Asc' : 'Desc'}\r\n            </button>\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              setEditingProduct(null);\r\n              setIsModalOpen(true);\r\n            }}\r\n            className=\"bg-primary text-dark hover:bg-yellow-400 transition px-4 py-2 rounded mb-4 float-right flex items-center gap-2\"\r\n          >\r\n            <FiPlus /> Add New Product\r\n          </button>\r\n        </div>\r\n\r\n        {isModalOpen && (\r\n          <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n            <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n              <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n                <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n              </div>\r\n\r\n              <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n\r\n              <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n                <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                  <div className=\"sm:flex sm:items-start\">\r\n                    <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\">\r\n                      <h3 className=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-title\">\r\n                        {editingProduct ? 'Edit Product' : 'Add New Product'}\r\n                      </h3>\r\n                      <div className=\"mt-2\">\r\n                        <ProductForm onSubmit={handleAddProduct} initialData={editingProduct} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                  <button\r\n                    onClick={closeModal}\r\n                    type=\"button\"\r\n                    className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {isLoading ? (\r\n          <LoadingSpinner />\r\n        ) : (\r\n          <>\r\n            {filteredProducts.length === 0 ? (\r\n              <p className=\"text-center text-gray-500 py-8\">No products found.</p>\r\n            ) : (\r\n              <table className=\"w-full text-left table-auto rounded-lg overflow-hidden\">\r\n                <thead className=\"bg-gray-100 text-[#004040] font-semibold\">\r\n                  <tr>\r\n                    <th className=\"px-4 py-3\">Image</th>\r\n                    <th className=\"px-4 py-3\">Name</th>\r\n                    <th className=\"px-4 py-3\">Price</th>\r\n                    <th className=\"px-4 py-3\">Category</th>\r\n                    <th className=\"px-4 py-3\">Stock</th>\r\n                    <th className=\"px-4 py-3\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {currentProducts.map((product) => (\r\n                    <tr key={product.id} className=\"hover:bg-gray-50\">\r\n                      <td className=\"px-4 py-2\">\r\n                        <img src={product.image} alt={product.name} className=\"w-10 h-10 object-cover rounded\" />\r\n                      </td>\r\n                      <td className=\"px-4 py-2\">{product.name}</td>\r\n                      <td className=\"px-4 py-2\">{formatCurrency(product.price)}</td>\r\n                      <td className=\"px-4 py-2\">{product.category}</td>\r\n                      <td className=\"px-4 py-2\">{product.stock}</td>\r\n                      <td className=\"px-4 py-2 flex gap-2\">\r\n                        <button onClick={() => handleEditProduct(product)} className=\"bg-yellow-500 hover:bg-yellow-600 text-white transition px-3 py-1 rounded flex items-center gap-1\">\r\n                          <FiEdit /> Edit\r\n                        </button>\r\n                        <button onClick={() => handleDeleteProduct(product.id)} className=\"bg-red-500 hover:bg-yellow-600 text-white transition px-3 py-1 rounded flex items-center gap-1\">\r\n                          <FiTrash2 /> Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n\r\n            {totalPages > 1 && (\r\n              <div className=\"flex justify-center mt-4\">\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n                  <button\r\n                    key={page}\r\n                    onClick={() => handlePageChange(page)}\r\n                    className={`px-4 py-2 mx-1 rounded-md border text-sm font-medium ${\r\n                      currentPage === page\r\n                        ? 'bg-primary text-dark border-primary'\r\n                        : 'border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition'\r\n                    }`}\r\n                  >\r\n                    {page}\r\n                  </button>\r\n                ))}\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {deleteConfirmOpen && (\r\n        <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n          <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n            </div>\r\n\r\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"sm:flex sm:items-start\">\r\n                  <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n                    <svg className=\"h-6 w-6 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.364 3.357l-1.094.364a1 1 0 00-.893.893l-1.094 3.636c-.15.501.106 1.02.653 1.215l.773.193c.47.117.97.175 1.47.175h10.002c.5.001.999-.058 1.47-.175l.773-.193c.547-.195.803-.714.653-1.215l-1.094-.364a1 1 0 00-.893-.893l-1.094-.364zM21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-title\">\r\n                      Delete Product\r\n                    </h3>\r\n                    <div className=\"mt-2\">\r\n                      <p className=\"text-sm text-gray-500\">\r\n                        Are you sure you want to delete this product? This action cannot be undone.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  onClick={confirmDelete}\r\n                  type=\"button\"\r\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                >\r\n                  Delete\r\n                </button>\r\n                <button\r\n                  onClick={closeDeleteConfirmModal}\r\n                  type=\"button\"\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React from 'react';\r\n\r\nconst AdminSettings = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl font-bold mb-4\">Admin Settings</h1>\r\n      <p>Manage admin password and site preferences here.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSettings;\r\n","import React from 'react';\r\n\r\nconst BookingForm = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl font-bold mb-4\">Booking Form</h1>\r\n      <p>Multi-step form for manual bookings.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingForm;\r\n","import React from 'react';\r\n\r\nconst Reports = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl font-bold mb-4\">Reports</h1>\r\n      <p>Weekly/monthly reports with export options.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAdminAuth } from '../context/AdminAuthContext';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { isAdminLoggedIn } = useAdminAuth();\r\n\r\n  if (!isAdminLoggedIn) {\r\n    return <Navigate to=\"/admin/login\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 text-gray-800\">\r\n      <h1 className=\"text-6xl font-bold text-[#004040]\">404</h1>\r\n      <p className=\"text-2xl mt-4 mb-8\">Page Not Found</p>\r\n      <p className=\"text-lg text-center max-w-md\">\r\n        Oops! The page you are looking for might have been removed, had its name changed, or is temporarily unavailable.\r\n      </p>\r\n      <Link to=\"/admin/dashboard\" className=\"mt-8 px-6 py-3 bg-[#ECBE07] text-[#004040] font-semibold rounded-md hover:bg-[#d1a906] transition duration-300\">\r\n        Go to Dashboard\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthLayout from '../layout/AuthLayout';\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    setError('');\r\n\r\n    if (!email) {\r\n      setError('Please enter your email address.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // In a real application, you would send a request to your backend here\r\n      // For demonstration, we'll simulate an API call\r\n      console.log(`Sending password reset request for: ${email}`);\r\n      await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate API delay\r\n\r\n      setMessage('If an account with that email exists, a password reset link has been sent.');\r\n      setEmail('');\r\n    } catch (err) {\r\n      setError('Something went wrong. Please try again later.');\r\n      console.error('Forgot password error:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthLayout>\r\n      <div className=\"bg-white p-8 rounded-lg shadow-md w-full max-w-md\">\r\n        <h2 className=\"text-2xl font-bold text-center mb-6 text-primary\">Forgot Password</h2>\r\n        <p className=\"text-center text-gray-600 mb-6\">\r\n          Enter your email address and we'll send you a link to reset your password.\r\n        </p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n              Email Address\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              placeholder=\"your@example.com\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          {message && <p className=\"text-green-500 text-sm mb-4 text-center\">{message}</p>}\r\n          {error && <p className=\"text-red-500 text-sm mb-4 text-center\">{error}</p>}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-primary hover:bg-yellow-400 text-dark font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full transition duration-150 ease-in-out\"\r\n          >\r\n            Reset Password\r\n          </button>\r\n        </form>\r\n        <div className=\"mt-6 text-center\">\r\n          <Link to=\"/admin/login\" className=\"text-primary hover:text-yellow-400 text-sm\">\r\n            Back to Login\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </AuthLayout>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // For drill-down links\r\nimport LoadingSpinner from '../components/LoadingSpinner'; // Assuming LoadingSpinner is available\r\nimport { FiEye, FiDownload, FiMessageCircle, FiFilter, FiSearch, FiCalendar, FiUser, FiTool, FiUsers, FiDollarSign, FiClock, FiActivity, FiTrendingUp, FiAward, FiBriefcase, FiUserPlus } from 'react-icons/fi'; // Import icons for actions and filters\r\n\r\nconst BookingHistory = () => {\r\n  const [bookings, setBookings] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchBookings = async () => {\r\n      setIsLoading(true);\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\r\n      setBookings([\r\n        { id: 1, customer: 'John Doe', organization: 'Global Solutions', service: 'Oil Change', mechanic: 'Mike', status: 'Completed', date: '2023-10-20', hasReceipt: true },\r\n        { id: 2, customer: 'Jane Smith', organization: null, service: 'Tire Rotation', mechanic: 'Sarah', status: 'Completed', date: '2023-10-25', hasReceipt: true },\r\n        { id: 3, customer: 'Acme Corp', organization: 'Acme Corp', service: 'Brake Inspection', mechanic: 'Mike', status: 'Cancelled', date: '2023-10-28', hasReceipt: false },\r\n        { id: 4, customer: 'Bob Johnson', organization: null, service: 'Engine Tune-up', mechanic: 'John', status: 'Pending', date: '2023-10-29', hasReceipt: false },\r\n        { id: 5, customer: 'Global Solutions', organization: 'Global Solutions', service: 'Wheel Alignment', mechanic: 'Sarah', status: 'Completed', date: '2023-10-30', hasReceipt: true },\r\n        { id: 6, customer: 'Alice Brown', organization: null, service: 'Exhaust Repair', mechanic: 'Mike', status: 'Pending', date: '2023-11-01', hasReceipt: false },\r\n        { id: 7, customer: 'Tech Innovations', organization: 'Tech Innovations', service: 'Battery Check', mechanic: 'John', status: 'Completed', date: '2023-11-02', hasReceipt: true },\r\n        { id: 8, customer: 'Charlie Davis', organization: null, service: 'AC Service', mechanic: 'Sarah', status: 'Cancelled', date: '2023-11-03', hasReceipt: false },\r\n        { id: 9, customer: 'Future Enterprises', organization: 'Future Enterprises', service: 'Transmission Fluid Change', mechanic: 'Mike', status: 'Completed', date: '2023-11-04', hasReceipt: true },\r\n        { id: 10, customer: 'Diana Miller', organization: null, service: 'Brake Pad Replacement', mechanic: 'John', status: 'Pending', date: '2023-11-05', hasReceipt: false },\r\n      ]);\r\n      setIsLoading(false);\r\n    };\r\n    fetchBookings();\r\n  }, []);\r\n\r\n  // State for filters\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterCustomer, setFilterCustomer] = useState('all');\r\n  const [filterService, setFilterService] = useState('all');\r\n  const [filterMechanic, setFilterMechanic] = useState('all');\r\n  const [filterStatus, setFilterStatus] = useState('all');\r\n  const [filterDateRange, setFilterDateRange] = useState('all');\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  // Extract unique values for filters\r\n  const uniqueCustomers = [...new Set(bookings.map(b => b.customer))];\r\n  const uniqueOrganizations = [...new Set(bookings.map(b => b.organization).filter(Boolean))]; // Filter out nulls\r\n  const uniqueServices = [...new Set(bookings.map(b => b.service))];\r\n  const uniqueMechanics = [...new Set(bookings.map(b => b.mechanic))];\r\n  const uniqueStatuses = ['Pending', 'Completed', 'Cancelled'];\r\n\r\n  const filteredBookings = bookings.filter(booking => {\r\n    const matchesSearch =\r\n      booking.customer.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      (booking.organization && booking.organization.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n      booking.service.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      booking.mechanic.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n    const matchesCustomerOrOrg = filterCustomer === 'all' ||\r\n      (filterCustomer !== 'all' && (\r\n        (filterCustomer === 'Individual' && !booking.organization) ||\r\n        (filterCustomer === 'Organization' && booking.organization) ||\r\n        (booking.organization && booking.organization === filterCustomer) || // For specific org filter\r\n        (!booking.organization && filterCustomer === booking.customer) // For specific customer filter\r\n      ));\r\n\r\n    const matchesService = filterService === 'all' || booking.service === filterService;\r\n    const matchesMechanic = filterMechanic === 'all' || booking.mechanic === filterMechanic;\r\n    const matchesStatus = filterStatus === 'all' || booking.status === filterStatus;\r\n\r\n    const bookingDate = new Date(booking.date);\r\n    const today = new Date();\r\n    const matchesDateRange = (() => {\r\n      if (filterDateRange === 'all') return true;\r\n      if (filterDateRange === 'today') {\r\n        return bookingDate.toDateString() === today.toDateString();\r\n      }\r\n      if (filterDateRange === 'this_week') {\r\n        const firstDayOfWeek = new Date(today.setDate(today.getDate() - today.getDay()));\r\n        const lastDayOfWeek = new Date(firstDayOfWeek);\r\n        lastDayOfWeek.setDate(firstDayOfWeek.getDate() + 6);\r\n        return bookingDate >= firstDayOfWeek && bookingDate <= lastDayOfWeek;\r\n      }\r\n      if (filterDateRange === 'this_month') {\r\n        return bookingDate.getMonth() === today.getMonth() && bookingDate.getFullYear() === today.getFullYear();\r\n      }\r\n      return true;\r\n    })();\r\n\r\n    return matchesSearch && matchesCustomerOrOrg && matchesService && matchesMechanic && matchesStatus && matchesDateRange;\r\n  });\r\n\r\n  const totalPages = Math.ceil(filteredBookings.length / itemsPerPage);\r\n  const currentBookings = filteredBookings.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-4xl font-extrabold text-gray-800 mb-8 dark:text-white\">Booking History</h1>\r\n\r\n      <div className=\"overflow-x-auto bg-white p-6 rounded-lg shadow-md border border-gray-200\">\r\n        <div className=\"flex flex-wrap justify-between items-center mb-4 gap-4\">\r\n          {/* Search */}\r\n          <div className=\"flex items-center flex-grow min-w-[200px]\">\r\n            <label htmlFor=\"search\" className=\"mr-2 text-gray-700\">Search:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"search\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm w-full\"\r\n              placeholder=\"Search bookings...\"\r\n            />\r\n          </div>\r\n\r\n          {/* Filters */}\r\n          <div className=\"flex flex-wrap items-center gap-2\">\r\n            {/* Customer/Organization Filter */}\r\n            <select\r\n              id=\"customerFilter\"\r\n              value={filterCustomer}\r\n              onChange={(e) => setFilterCustomer(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Customers/Orgs</option>\r\n              <option value=\"Individual\">Individuals</option>\r\n              {uniqueOrganizations.map(org => (\r\n                <option key={org} value={org}>{org}</option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* Service Type Filter */}\r\n            <select\r\n              id=\"serviceFilter\"\r\n              value={filterService}\r\n              onChange={(e) => setFilterService(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Services</option>\r\n              {uniqueServices.map(service => (\r\n                <option key={service} value={service}>{service}</option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* Mechanic Filter */}\r\n            <select\r\n              id=\"mechanicFilter\"\r\n              value={filterMechanic}\r\n              onChange={(e) => setFilterMechanic(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Mechanics</option>\r\n              {uniqueMechanics.map(mechanic => (\r\n                <option key={mechanic} value={mechanic}>{mechanic}</option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* Status Filter */}\r\n            <select\r\n              id=\"statusFilter\"\r\n              value={filterStatus}\r\n              onChange={(e) => setFilterStatus(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Statuses</option>\r\n              {uniqueStatuses.map(status => (\r\n                <option key={status} value={status}>{status}</option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* Date Range Filter */}\r\n            <select\r\n              id=\"dateFilter\"\r\n              value={filterDateRange}\r\n              onChange={(e) => setFilterDateRange(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Dates</option>\r\n              <option value=\"today\">Today</option>\r\n              <option value=\"this_week\">This Week</option>\r\n              <option value=\"this_month\">This Month</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {isLoading ? (\r\n          <LoadingSpinner />\r\n        ) : (\r\n          <>\r\n            {filteredBookings.length === 0 ? (\r\n              <p className=\"text-center text-gray-500 py-8\">No bookings found.</p>\r\n            ) : (\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer/Org</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Service</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Mechanic</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {currentBookings.map((booking) => (\r\n                    <tr key={booking.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        {booking.organization ? (\r\n                          <Link to={`/admin/organizations/${booking.organization}`} className=\"text-blue-600 hover:underline\">\r\n                            {booking.organization}\r\n                          </Link>\r\n                        ) : (\r\n                          <Link to={`/admin/customers/${booking.customer.replace(/\\s+/g, '-').toLowerCase()}`} className=\"text-blue-600 hover:underline\">\r\n                            {booking.customer}\r\n                          </Link>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{booking.service}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{booking.mechanic}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                          booking.status === 'Pending' ? 'bg-yellow-100 text-yellow-800' :\r\n                          booking.status === 'Completed' ? 'bg-green-100 text-green-800' :\r\n                          'bg-red-100 text-red-800'\r\n                        }`}>\r\n                          {booking.status}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{booking.date}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2\">\r\n                        {/* Actions with Icons and Tooltips */}\r\n                        <button\r\n                          onClick={() => handleViewDetails(booking)}\r\n                          className=\"text-blue-600 hover:text-blue-800\"\r\n                          title=\"View Details\"\r\n                        >\r\n                          <FiEye className=\"inline-block\" />\r\n                        </button>\r\n                        {booking.hasReceipt && (\r\n                          <button\r\n                            onClick={() => alert('Download PDF functionality not yet implemented')}\r\n                            className=\"text-green-600 hover:text-green-800\"\r\n                            title=\"Download Receipt\"\r\n                          >\r\n                            <FiDownload className=\"inline-block\" />\r\n                          </button>\r\n                        )}\r\n                        {/* Placeholder for Chat icon */}\r\n                        <button\r\n                          onClick={() => alert('Chat functionality not yet implemented')}\r\n                          className=\"text-gray-600 hover:text-gray-800\"\r\n                          title=\"Chat with Customer\"\r\n                        >\r\n                          <FiMessageCircle className=\"inline-block\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n\r\n            {totalPages > 1 && (\r\n              <div className=\"flex justify-center mt-4\">\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n                  <button\r\n                    key={page}\r\n                    onClick={() => handlePageChange(page)}\r\n                    className={`px-4 py-2 mx-1 rounded-md border text-sm font-medium ${\r\n                      currentPage === page\r\n                        ? 'bg-primary text-dark border-primary'\r\n                        : 'border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition'\r\n                    }`}\r\n                  >\r\n                    {page}\r\n                  </button>\r\n                ))}\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookingHistory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // For drill-down links\r\nimport LoadingSpinner from '../components/LoadingSpinner'; // Assuming LoadingSpinner is available\r\nimport { FiEye, FiDownload, FiMessageCircle, FiFilter, FiSearch, FiCalendar, FiUser, FiTool, FiUsers, FiDollarSign, FiClock, FiActivity, FiTrendingUp, FiAward, FiBriefcase, FiUserPlus } from 'react-icons/fi'; // Import icons for actions and filters\r\n\r\nconst ServiceHistory = () => {\r\n  const [services, setServices] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchServices = async () => {\r\n      setIsLoading(true);\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\r\n      setServices([\r\n        { id: 1, customer: 'John Doe', organization: 'Global Solutions', serviceType: 'Oil Change', mechanic: 'Mike', status: 'Completed', date: '2023-10-20', hasReceipt: true },\r\n        { id: 2, customer: 'Jane Smith', organization: null, serviceType: 'Tire Rotation', mechanic: 'Sarah', status: 'Completed', date: '2023-10-25', hasReceipt: true },\r\n        { id: 3, customer: 'Acme Corp', organization: 'Acme Corp', serviceType: 'Brake Inspection', mechanic: 'Mike', status: 'Cancelled', date: '2023-10-28', hasReceipt: false },\r\n        { id: 4, customer: 'Bob Johnson', organization: null, serviceType: 'Engine Tune-up', mechanic: 'John', status: 'Pending', date: '2023-10-29', hasReceipt: false },\r\n        { id: 5, customer: 'Global Solutions', organization: 'Global Solutions', serviceType: 'Wheel Alignment', mechanic: 'Sarah', status: 'Completed', date: '2023-10-30', hasReceipt: true },\r\n        { id: 6, customer: 'Alice Brown', organization: null, serviceType: 'Exhaust Repair', mechanic: 'Mike', status: 'Pending', date: '2023-11-01', hasReceipt: false },\r\n        { id: 7, customer: 'Tech Innovations', organization: 'Tech Innovations', serviceType: 'Battery Check', mechanic: 'John', status: 'Completed', date: '2023-11-02', hasReceipt: true },\r\n        { id: 8, customer: 'Charlie Davis', organization: null, serviceType: 'AC Service', mechanic: 'Sarah', status: 'Cancelled', date: '2023-11-03', hasReceipt: false },\r\n        { id: 9, customer: 'Future Enterprises', organization: 'Future Enterprises', serviceType: 'Transmission Fluid Change', mechanic: 'Mike', status: 'Completed', date: '2023-11-04', hasReceipt: true },\r\n        { id: 10, customer: 'Diana Miller', organization: null, serviceType: 'Brake Pad Replacement', mechanic: 'John', status: 'Pending', date: '2023-11-05', hasReceipt: false },\r\n      ]);\r\n      setIsLoading(false);\r\n    };\r\n    fetchServices();\r\n  }, []);\r\n\r\n  // State for filters\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterCustomer, setFilterCustomer] = useState('all');\r\n  const [filterServiceType, setFilterServiceType] = useState('all');\r\n  const [filterMechanic, setFilterMechanic] = useState('all');\r\n  const [filterStatus, setFilterStatus] = useState('all');\r\n  const [filterDateRange, setFilterDateRange] = useState('all');\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  // Extract unique values for filters\r\n  const uniqueCustomers = [...new Set(services.map(s => s.customer))];\r\n  const uniqueOrganizations = [...new Set(services.map(s => s.organization).filter(Boolean))]; // Filter out nulls\r\n  const uniqueServiceTypes = [...new Set(services.map(s => s.serviceType))];\r\n  const uniqueMechanics = [...new Set(services.map(s => s.mechanic))];\r\n  const uniqueStatuses = ['Pending', 'Completed', 'Cancelled'];\r\n\r\n  const filteredServices = services.filter(service => {\r\n    const matchesSearch =\r\n      service.customer.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      (service.organization && service.organization.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n      service.serviceType.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      service.mechanic.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n    const matchesCustomerOrOrg = filterCustomer === 'all' ||\r\n      (filterCustomer !== 'all' && (\r\n        (filterCustomer === 'Individual' && !service.organization) ||\r\n        (filterCustomer === 'Organization' && service.organization) ||\r\n        (service.organization && service.organization === filterCustomer) || // For specific org filter\r\n        (!service.organization && filterCustomer === service.customer) // For specific customer filter\r\n      ));\r\n\r\n    const matchesServiceType = filterServiceType === 'all' || service.serviceType === filterServiceType;\r\n    const matchesMechanic = filterMechanic === 'all' || service.mechanic === filterMechanic;\r\n    const matchesStatus = filterStatus === 'all' || service.status === filterStatus;\r\n\r\n    const serviceDate = new Date(service.date);\r\n    const today = new Date();\r\n    const matchesDateRange = (() => {\r\n      if (filterDateRange === 'all') return true;\r\n      if (filterDateRange === 'today') {\r\n        return serviceDate.toDateString() === today.toDateString();\r\n      }\r\n      if (filterDateRange === 'this_week') {\r\n        const firstDayOfWeek = new Date(today.setDate(today.getDate() - today.getDay()));\r\n        const lastDayOfWeek = new Date(firstDayOfWeek);\r\n        lastDayOfWeek.setDate(firstDayOfWeek.getDate() + 6);\r\n        return serviceDate >= firstDayOfWeek && serviceDate <= lastDayOfWeek;\r\n      }\r\n      if (filterDateRange === 'this_month') {\r\n        return serviceDate.getMonth() === today.getMonth() && serviceDate.getFullYear() === today.getFullYear();\r\n      }\r\n      return true;\r\n    })();\r\n\r\n    return matchesSearch && matchesCustomerOrOrg && matchesServiceType && matchesMechanic && matchesStatus && matchesDateRange;\r\n  });\r\n\r\n  const totalPages = Math.ceil(filteredServices.length / itemsPerPage);\r\n  const currentServices = filteredServices.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-4xl font-extrabold text-gray-800 mb-8 dark:text-white\">Service History</h1>\r\n\r\n      <div className=\"overflow-x-auto bg-white p-6 rounded-lg shadow-md border border-gray-200\">\r\n        <div className=\"flex flex-wrap justify-between items-center mb-4 gap-4\">\r\n          {/* Search */}\r\n          <div className=\"flex items-center flex-grow min-w-[200px]\">\r\n            <label htmlFor=\"search\" className=\"mr-2 text-gray-700\">Search:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"search\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm w-full\"\r\n              placeholder=\"Search services...\"\r\n            />\r\n          </div>\r\n\r\n          {/* Filters */}\r\n          <div className=\"flex flex-wrap items-center gap-2\">\r\n            {/* Customer/Organization Filter */}\r\n            <select\r\n              id=\"customerFilter\"\r\n              value={filterCustomer}\r\n              onChange={(e) => setFilterCustomer(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Customers/Orgs</option>\r\n              <option value=\"Individual\">Individuals</option>\r\n              {uniqueOrganizations.map(org => (\r\n                <option key={org} value={org}>{org}</option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* Service Type Filter */}\r\n            <select\r\n              id=\"serviceTypeFilter\"\r\n              value={filterServiceType}\r\n              onChange={(e) => setFilterServiceType(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Service Types</option>\r\n              {uniqueServiceTypes.map(type => (\r\n                <option key={type} value={type}>{type}</option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* Mechanic Filter */}\r\n            <select\r\n              id=\"mechanicFilter\"\r\n              value={filterMechanic}\r\n              onChange={(e) => setFilterMechanic(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Mechanics</option>\r\n              {uniqueMechanics.map(mechanic => (\r\n                <option key={mechanic} value={mechanic}>{mechanic}</option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* Status Filter */}\r\n            <select\r\n              id=\"statusFilter\"\r\n              value={filterStatus}\r\n              onChange={(e) => setFilterStatus(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Statuses</option>\r\n              {uniqueStatuses.map(status => (\r\n                <option key={status} value={status}>{status}</option>\r\n              ))}\r\n            </select>\r\n\r\n            {/* Date Range Filter */}\r\n            <select\r\n              id=\"dateFilter\"\r\n              value={filterDateRange}\r\n              onChange={(e) => setFilterDateRange(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n            >\r\n              <option value=\"all\">All Dates</option>\r\n              <option value=\"today\">Today</option>\r\n              <option value=\"this_week\">This Week</option>\r\n              <option value=\"this_month\">This Month</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {isLoading ? (\r\n          <LoadingSpinner />\r\n        ) : (\r\n          <>\r\n            {filteredServices.length === 0 ? (\r\n              <p className=\"text-center text-gray-500 py-8\">No services found.</p>\r\n            ) : (\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer/Org</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Service Type</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Mechanic</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {currentServices.map((service) => (\r\n                    <tr key={service.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        {service.organization ? (\r\n                          <Link to={`/admin/organizations/${service.organization.replace(/\\s+/g, '-').toLowerCase()}`} className=\"text-blue-600 hover:underline\">\r\n                            {service.organization}\r\n                          </Link>\r\n                        ) : (\r\n                          <Link to={`/admin/customers/${service.customer.replace(/\\s+/g, '-').toLowerCase()}`} className=\"text-blue-600 hover:underline\">\r\n                            {service.customer}\r\n                          </Link>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{service.serviceType}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{service.mechanic}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                          service.status === 'Pending' ? 'bg-yellow-100 text-yellow-800' :\r\n                          service.status === 'Completed' ? 'bg-green-100 text-green-800' :\r\n                          'bg-red-100 text-red-800'\r\n                        }`}>\r\n                          {service.status}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{service.date}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2\">\r\n                        {/* Actions with Icons and Tooltips */}\r\n                        <button\r\n                          onClick={() => alert('View functionality not yet implemented')}\r\n                          className=\"text-blue-600 hover:text-blue-800\"\r\n                          title=\"View Details\"\r\n                        >\r\n                          <FiEye className=\"inline-block\" />\r\n                        </button>\r\n                        {service.hasReceipt && (\r\n                          <button\r\n                            onClick={() => alert('Download PDF functionality not yet implemented')}\r\n                            className=\"text-green-600 hover:text-green-800\"\r\n                            title=\"Download Receipt\"\r\n                          >\r\n                            <FiDownload className=\"inline-block\" />\r\n                          </button>\r\n                        )}\r\n                        {/* Placeholder for Chat icon */}\r\n                        <button\r\n                          onClick={() => alert('Chat functionality not yet implemented')}\r\n                          className=\"text-gray-600 hover:text-gray-800\"\r\n                          title=\"Chat with Customer\"\r\n                        >\r\n                          <FiMessageCircle className=\"inline-block\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n\r\n            {totalPages > 1 && (\r\n              <div className=\"flex justify-center mt-4\">\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n                  <button\r\n                    key={page}\r\n                    onClick={() => handlePageChange(page)}\r\n                    className={`px-4 py-2 mx-1 rounded-md border text-sm font-medium ${\r\n                      currentPage === page\r\n                        ? 'bg-primary text-dark border-primary'\r\n                        : 'border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition'\r\n                    }`}\r\n                  >\r\n                    {page}\r\n                  </button>\r\n                ))}\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceHistory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Import Link for navigation\r\nimport LoadingSpinner from '../components/LoadingSpinner'; // Assuming LoadingSpinner is available\r\nimport { FiPlus, FiEdit, FiTrash2 } from 'react-icons/fi';\r\n\r\nconst Organizations = () => {\r\n  const [organizations, setOrganizations] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchOrganizations = async () => {\r\n      setIsLoading(true);\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\r\n      setOrganizations([\r\n        { id: 1, name: 'Global Solutions', totalBookings: 7, activeCustomers: 5, lastServiceDate: '2023-10-18' },\r\n        { id: 2, name: 'Acme Corp', totalBookings: 10, activeCustomers: 8, lastServiceDate: '2023-10-15' },\r\n        { id: 3, name: 'Tech Innovations', totalBookings: 12, activeCustomers: 10, lastServiceDate: '2023-10-10' },\r\n        { id: 4, name: 'Future Enterprises', totalBookings: 8, activeCustomers: 6, lastServiceDate: '2023-10-05' },\r\n      ]);\r\n      setIsLoading(false);\r\n    };\r\n    fetchOrganizations();\r\n  }, []);\r\n\r\n  // Placeholder for search and filter functionality if needed later\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 5;\r\n\r\n  const filteredOrganizations = organizations.filter(org =>\r\n    org.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const totalPages = Math.ceil(filteredOrganizations.length / itemsPerPage);\r\n  const currentOrganizations = filteredOrganizations.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-4xl font-extrabold text-gray-800 mb-8 dark:text-white\">Manage Organizations</h1>\r\n\r\n      <div className=\"overflow-x-auto bg-white p-6 rounded-lg shadow-md border border-gray-200\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <div className=\"flex items-center\">\r\n            <label htmlFor=\"search\" className=\"mr-2 text-gray-700\">Search:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"search\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n              placeholder=\"Search organizations...\"\r\n            />\r\n          </div>\r\n          {/* Add more filters here if needed */}\r\n        </div>\r\n\r\n        {isLoading ? (\r\n          <LoadingSpinner />\r\n        ) : (\r\n          <>\r\n            {filteredOrganizations.length === 0 ? (\r\n              <p className=\"text-center text-gray-500 py-8\">No organizations found.</p>\r\n            ) : (\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-primary text-dark font-semibold\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Total Bookings</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Active Customers</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Last Service Date</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"divide-y divide-gray-200\">\r\n                  {currentOrganizations.map((org) => (\r\n                    <tr key={org.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        <Link to={`/admin/customer/organizations/${org.id}`} className=\"text-blue-600 hover:underline\">\r\n                          {org.name}\r\n                        </Link>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{org.totalBookings}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{org.activeCustomers}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{org.lastServiceDate || 'N/A'}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        {/* Add actions like Edit/Delete if needed */}\r\n                        {/* <button className=\"bg-primary text-dark hover:bg-yellow-400 transition px-3 py-1 rounded flex items-center gap-1\">View Details</button> */}\r\n                        <Link to={`/admin/organizations/${org.id}`} className=\"bg-primary text-dark hover:bg-yellow-400 transition px-3 py-1 rounded flex items-center gap-1\">View Details</Link>\r\n                        <button onClick={() => handleDeleteorganization(organization.id)} className=\"bg-red text-dark hover:bg-red-500 transition px-3 py-1 rounded flex items-center gap-1\"> <FiTrash2 /> Delete</button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n\r\n            {totalPages > 1 && (\r\n              <div className=\"flex justify-center mt-4\">\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n                  <button\r\n                    key={page}\r\n                    onClick={() => handlePageChange(page)}\r\n                    className={`px-4 py-2 mx-1 rounded-md border text-sm font-medium ${\r\n                      currentPage === page\r\n                        ? 'bg-primary text-dark border-primary'\r\n                        : 'border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition'\r\n                    }`}\r\n                  >\r\n                    {page}\r\n                  </button>\r\n                ))}\r\n                <button\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"px-4 py-2 rounded-md border border-gray-300 bg-primary text-dark hover:bg-yellow-400 transition disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Organizations;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport { FiEye, FiDownload, FiMessageCircle, FiEdit } from 'react-icons/fi';\r\n\r\nconst CustomerDetail = () => {\r\n  const [customer, setCustomer] = useState(null);\r\n  const [customerBookings, setCustomerBookings] = useState([]);\r\n  const [customerServices, setCustomerServices] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const customerId = 1;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n      const mockCustomer = {\r\n        id: 1,\r\n        name: 'John Doe',\r\n        email: 'john.doe@example.com',\r\n        phone: '123-456-7890',\r\n        address: '123 Main St, Anytown, USA',\r\n        organization: 'Global Solutions',\r\n        organizationId: 1,\r\n        notes: 'Prefers morning appointments. Needs follow-up on the new tires.',\r\n        joinedDate: '2023-01-15',\r\n      };\r\n      setCustomer(mockCustomer);\r\n\r\n      const mockBookings = [\r\n        { id: 1, service: 'Oil Change', mechanic: 'Mike', status: 'Completed', date: '2023-10-20', hasReceipt: true },\r\n        { id: 5, service: 'Wheel Alignment', mechanic: 'Sarah', status: 'Completed', date: '2023-10-30', hasReceipt: true },\r\n        { id: 9, service: 'Transmission Fluid Change', mechanic: 'Mike', status: 'Completed', date: '2023-11-04', hasReceipt: true },\r\n      ];\r\n      setCustomerBookings(mockBookings);\r\n\r\n      const mockServices = [\r\n        { id: 1, serviceType: 'Oil Change', mechanic: 'Mike', status: 'Completed', date: '2023-10-20' },\r\n        { id: 5, serviceType: 'Wheel Alignment', mechanic: 'Sarah', status: 'Completed', date: '2023-10-30' },\r\n        { id: 9, serviceType: 'Transmission Fluid Change', mechanic: 'Mike', status: 'Completed', date: '2023-11-04' },\r\n      ];\r\n      setCustomerServices(mockServices);\r\n\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [customerId]);\r\n\r\n  if (isLoading || !customer) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex justify-between items-center mb-8\">\r\n        <h1 className=\"text-4xl font-extrabold text-gray-800 dark:text-white\">\r\n          {customer.name} Details\r\n        </h1>\r\n        <Link to={`/admin/customers/edit/${customer.id}`} className=\"text-blue-600 hover:text-blue-800\" title=\"Edit Customer\">\r\n          <FiEdit className=\"inline-block mr-1\" /> Edit\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\r\n        {/* Customer Info Card */}\r\n        <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 border border-gray-200 dark:border-gray-600\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h2 className=\"text-2xl font-bold text-gray-800 dark:text-white\">Customer Information</h2>\r\n            <button className=\"text-blue-600 hover:text-blue-800\" title=\"Edit Customer\">\r\n              <FiEdit className=\"inline-block mr-1\" /> Edit\r\n            </button>\r\n          </div>\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Full Name</p>\r\n              <p className=\"text-lg font-medium text-gray-900 dark:text-white\">{customer.name}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Email</p>\r\n              <p className=\"text-lg font-medium text-gray-900 dark:text-white\">{customer.email}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Phone</p>\r\n              <p className=\"text-lg font-medium text-gray-900 dark:text-white\">{customer.phone}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Address</p>\r\n              <p className=\"text-lg font-medium text-gray-900 dark:text-white\">{customer.address}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Joined Date</p>\r\n              <p className=\"text-lg font-medium text-gray-900 dark:text-white\">{customer.joinedDate}</p>\r\n            </div>\r\n            {customer.organization && (\r\n              <div>\r\n                <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Organization</p>\r\n                <p className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n                  <Link to={`/admin/organizations/${customer.organizationId}`} className=\"text-blue-600 hover:underline\">\r\n                    {customer.organization}\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Notes Section */}\r\n        <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 border border-gray-200 dark:border-gray-600\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h2 className=\"text-2xl font-bold text-gray-800 dark:text-white\">Notes</h2>\r\n            <button className=\"text-blue-600 hover:text-blue-800\" title=\"Edit Notes\">\r\n              <FiEdit className=\"inline-block mr-1\" /> Edit\r\n            </button>\r\n          </div>\r\n          <p className=\"text-lg font-medium text-gray-900 dark:text-white\">{customer.notes || 'No notes available.'}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Booking History Section */}\r\n      <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 mb-8 border border-gray-200 dark:border-gray-600\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4 dark:text-white\">Recent Bookings</h2>\r\n        {customerBookings.length === 0 ? (\r\n          <p className=\"text-center text-gray-500 py-8\">No bookings found for this customer.</p>\r\n        ) : (\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Service</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Mechanic</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {customerBookings.map((booking) => (\r\n                <tr key={booking.id}>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{booking.service}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{booking.mechanic}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                      booking.status === 'Pending' ? 'bg-yellow-100 text-yellow-800' :\r\n                      booking.status === 'Completed' ? 'bg-green-100 text-green-800' :\r\n                      'bg-red-100 text-red-800'\r\n                    }`}>\r\n                      {booking.status}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{booking.date}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2\">\r\n                    <button\r\n                      onClick={() => alert('View booking details not implemented')}\r\n                      className=\"text-blue-600 hover:text-blue-800\"\r\n                      title=\"View Details\"\r\n                    >\r\n                      <FiEye className=\"inline-block\" />\r\n                    </button>\r\n                    {booking.hasReceipt && (\r\n                      <button\r\n                        onClick={() => alert('Download receipt not implemented')}\r\n                        className=\"text-green-600 hover:text-green-800\"\r\n                        title=\"Download Receipt\"\r\n                      >\r\n                        <FiDownload className=\"inline-block\" />\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n\r\n      {/* Service History Section */}\r\n      <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 border border-gray-200 dark:border-gray-600\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4 dark:text-white\">Service History</h2>\r\n        {customerServices.length === 0 ? (\r\n          <p className=\"text-center text-gray-500 py-8\">No service history found for this customer.</p>\r\n        ) : (\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Service Type</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Mechanic</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {customerServices.map((service) => (\r\n                <tr key={service.id}>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{service.serviceType}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{service.mechanic}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                      service.status === 'Pending' ? 'bg-yellow-100 text-yellow-800' :\r\n                      service.status === 'Completed' ? 'bg-green-100 text-green-800' :\r\n                      'bg-red-100 text-red-800'\r\n                    }`}>\r\n                      {service.status}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{service.date}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // For linking to customer details\r\nimport LoadingSpinner from '../components/LoadingSpinner'; // Assuming LoadingSpinner is available\r\nimport { FiEye, FiDownload, FiMessageCircle, FiEdit, FiUser, FiUserPlus } from 'react-icons/fi'; // Icons for actions\r\n\r\nconst OrganizationDetail = () => {\r\n  const [organization, setOrganization] = useState(null);\r\n  const [organizationBookings, setOrganizationBookings] = useState([]);\r\n  const [organizationServices, setOrganizationServices] = useState([]);\r\n  const [organizationMembers, setOrganizationMembers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // In a real app, you'd get the ID from the URL params: const { id } = useParams();\r\n  // For this example, we'll use a hardcoded ID or assume it's passed as a prop.\r\n  // Let's assume we're fetching data for organization ID 1 for demonstration.\r\n  const organizationId = 1; // Replace with actual ID from URL params\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API calls\r\n\r\n      // Mock Organization Data\r\n      const mockOrganization = {\r\n        id: 1,\r\n        name: 'Global Solutions',\r\n        email: 'contact@globalsolutions.com',\r\n        phone: '444-555-6666',\r\n        address: '456 Business Ave, Metro City, USA',\r\n        industry: 'Technology',\r\n        joinedDate: '2022-05-10',\r\n        notes: 'Key client. Interested in enterprise solutions.',\r\n      };\r\n      setOrganization(mockOrganization);\r\n\r\n      // Mock Members List for this organization\r\n      const mockMembers = [\r\n        { id: 1, name: 'John Doe', email: 'john.doe@example.com', role: 'Primary Contact' },\r\n        { id: 5, name: 'Global Solutions Contact', email: 'info@globalsolutions.com', role: 'Billing Contact' },\r\n      ];\r\n      setOrganizationMembers(mockMembers);\r\n\r\n      // Mock Booking Data for this organization\r\n      const mockBookings = [\r\n        { id: 5, customer: 'Global Solutions', service: 'Wheel Alignment', mechanic: 'Sarah', status: 'Completed', date: '2023-10-30', hasReceipt: true },\r\n        { id: 9, customer: 'Future Enterprises', organization: 'Future Enterprises', service: 'Transmission Fluid Change', mechanic: 'Mike', status: 'Completed', date: '2023-11-04', hasReceipt: true },\r\n      ];\r\n      setOrganizationBookings(mockBookings);\r\n\r\n      // Mock Service History Data for this organization\r\n      const mockServices = [\r\n        { id: 5, serviceType: 'Wheel Alignment', mechanic: 'Sarah', status: 'Completed', date: '2023-10-30' },\r\n        { id: 9, serviceType: 'Transmission Fluid Change', mechanic: 'Mike', status: 'Completed', date: '2023-11-04' },\r\n      ];\r\n      setOrganizationServices(mockServices);\r\n\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [organizationId]); // Re-fetch if organizationId changes\r\n\r\n  if (isLoading || !organization) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex justify-between items-center mb-8\">\r\n        <h1 className=\"text-4xl font-extrabold text-gray-800 dark:text-white\">{organization.name} Details</h1>\r\n        <Link to={`/admin/organizations/edit/${organization.id}`} className=\"text-blue-600 hover:text-blue-800\" title=\"Edit Organization\">\r\n          <FiEdit className=\"inline-block mr-1\" /> Edit\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\r\n        {/* Organization Info Card */}\r\n        <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 border border-gray-200 dark:border-gray-600\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h2 className=\"text-2xl font-bold text-gray-800 dark:text-white\">Organization Information</h2>\r\n            <button className=\"text-blue-600 hover:text-blue-800\" title=\"Edit Organization\">\r\n              <FiEdit className=\"inline-block mr-1\" /> Edit\r\n            </button>\r\n          </div>\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Organization Name</p>\r\n              <p className=\"text-lg font-medium text-gray-900 dark:text-white\">{organization.name}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Industry</p>\r\n              <p className=\"text-lg font-medium text-gray-900 dark:text-white\">{organization.industry}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Email</p>\r\n              <p className=\"text-lg font-medium text-gray-900 dark:text-white\">{organization.email}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Phone</p>\r\n              <p className=\"text-lg font-medium text-gray-900 dark:text-white\">{organization.phone}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Address</p>\r\n              <p className=\"text-lg font-medium text-gray-900 dark:text-white\">{organization.address}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Joined Date</p>\r\n              <p className=\"text-lg font-medium text-gray-900 dark:text-white\">{organization.joinedDate}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Members List Section */}\r\n        <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 border border-gray-200 dark:border-gray-600\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h2 className=\"text-2xl font-bold text-gray-800 dark:text-white\">Members</h2>\r\n            <button className=\"text-blue-600 hover:text-blue-800\" title=\"Add Member\">\r\n              <FiUserPlus className=\"inline-block mr-1\" /> Add Member\r\n            </button>\r\n          </div>\r\n          {organizationMembers.length === 0 ? (\r\n            <p className=\"text-center text-gray-500 py-8\">No members found for this organization.</p>\r\n          ) : (\r\n            <ul className=\"divide-y divide-gray-200 dark:divide-gray-600\">\r\n              {organizationMembers.map(member => (\r\n                <li key={member.id} className=\"py-3 flex items-center justify-between gap-4\">\r\n                  <div className=\"flex items-center flex-1\">\r\n                    <FiUser className=\"text-gray-500 dark:text-gray-400 mr-3\" />\r\n                    <div className=\"flex-1\">\r\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                        <Link to={`/admin/customers/${member.id}`} className=\"text-blue-600 hover:underline\">\r\n                          {member.name}\r\n                        </Link>\r\n                      </p>\r\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">{member.role}</p>\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">{member.email}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Booking History Section */}\r\n      <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 mb-8 border border-gray-200 dark:border-gray-600\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4 dark:text-white\">Booking History</h2>\r\n        {organizationBookings.length === 0 ? (\r\n          <p className=\"text-center text-gray-500 py-8\">No bookings found for this organization.</p>\r\n        ) : (\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Customer</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Service</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Mechanic</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {organizationBookings.map((booking) => (\r\n                <tr key={booking.id}>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    <Link to={`/admin/customers/${booking.customer.replace(/\\s+/g, '-').toLowerCase()}`} className=\"text-blue-600 hover:underline\">\r\n                      {booking.customer}\r\n                    </Link>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{booking.service}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{booking.mechanic}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                      booking.status === 'Pending' ? 'bg-yellow-100 text-yellow-800' :\r\n                      booking.status === 'Completed' ? 'bg-green-100 text-green-800' :\r\n                      'bg-red-100 text-red-800'\r\n                    }`}>\r\n                      {booking.status}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{booking.date}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2\">\r\n                    <button\r\n                      onClick={() => alert('View booking details not implemented')}\r\n                      className=\"text-blue-600 hover:text-blue-800\"\r\n                      title=\"View Details\"\r\n                    >\r\n                      <FiEye className=\"inline-block\" />\r\n                    </button>\r\n                    {booking.hasReceipt && (\r\n                      <button\r\n                        onClick={() => alert('Download receipt not implemented')}\r\n                        className=\"text-green-600 hover:text-green-800\"\r\n                        title=\"Download Receipt\"\r\n                      >\r\n                        <FiDownload className=\"inline-block\" />\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n\r\n      {/* Service History Section */}\r\n      <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 mb-8 border border-gray-200 dark:border-gray-600\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4 dark:text-white\">Service History</h2>\r\n        {organizationServices.length === 0 ? (\r\n          <p className=\"text-center text-gray-500 py-8\">No service history found for this organization.</p>\r\n        ) : (\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Service Type</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Mechanic</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {organizationServices.map((service) => (\r\n                <tr key={service.id}>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{service.serviceType}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{service.mechanic}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                      service.status === 'Pending' ? 'bg-yellow-100 text-yellow-800' :\r\n                      service.status === 'Completed' ? 'bg-green-100 text-green-800' :\r\n                      'bg-red-100 text-red-800'\r\n                    }`}>\r\n                      {service.status}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{service.date}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n\r\n      {/* Revenue Summary Section */}\r\n      <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow-md p-6 border border-gray-200 dark:border-gray-600\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4 dark:text-white\">Revenue Summary</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Total Revenue</p>\r\n            <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">$15,000</p> {/* Mock data */}\r\n          </div>\r\n          <div>\r\n            <p className=\"text-sm font-semibold text-gray-500 dark:text-gray-400 uppercase\">Revenue from this Org</p>\r\n            <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">$5,000</p> {/* Mock data */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrganizationDetail;\r\n","import { Routes, Route } from 'react-router-dom';\r\nimport AdminLayout from '../layout/AdminLayout';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport Bookings from '../pages/Bookings';\r\nimport Login from '../pages/Login';\r\nimport Customers from '../pages/Customers';\r\nimport Services from '../pages/Services';\r\nimport Products from '../pages/Products';\r\nimport AdminSettings from '../pages/AdminSettings';\r\nimport BookingForm from '../pages/BookingForm';\r\nimport Reports from '../pages/Reports';\r\nimport ProtectedRoute from '../components/ProtectedRoute';\r\nimport NotFound from '../pages/NotFound';\r\nimport ForgotPassword from '../pages/ForgotPassword';\r\nimport { AdminAuthProvider } from '../context/AdminAuthContext';\r\nimport BookingHistory from '../pages/BookingHistory';\r\nimport ServiceHistory from '../pages/ServiceHistory';\r\nimport Organizations from '../pages/Organizations';\r\nimport CustomerDetail from '../pages/CustomerDetail';\r\nimport OrganizationDetail from '../pages/OrganizationDetail';\r\n\r\nconst EditOrganization = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [organization, setOrganization] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    industry: '',\r\n    address: '',\r\n    joinedDate: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchOrganization = async () => {\r\n      try {\r\n        // Simulate fetching organization data from API\r\n        const mockOrganization = {\r\n          id: 1,\r\n          name: 'Global Solutions',\r\n          email: 'contact@globalsolutions.com',\r\n          phone: '444-555-6666',\r\n          address: '456 Business Ave, Metro City, USA',\r\n          industry: 'Technology',\r\n          joinedDate: '2022-05-10',\r\n        };\r\n        setOrganization(mockOrganization);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        toast.error('Failed to fetch organization data.');\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchOrganization();\r\n  }, [id]);\r\n\r\n  const handleChange = (e) => {\r\n    setOrganization({ ...organization, [e.target.name]: e.target.value });\r\n    setErrors({ ...errors, [e.target.name]: '' }); // Clear error on change\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!organization.name) {\r\n      newErrors.name = 'Organization name is required.';\r\n      isValid = false;\r\n    }\r\n    if (!organization.email) {\r\n      newErrors.email = 'Email is required.';\r\n      isValid = false;\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(organization.email)) {\r\n      newErrors.email = 'Invalid email format.';\r\n      isValid = false;\r\n    }\r\n    if (!organization.phone) {\r\n      newErrors.phone = 'Phone number is required.';\r\n      isValid = false;\r\n    }\r\n    if (!organization.address) {\r\n      newErrors.address = 'Address is required.';\r\n      isValid = false;\r\n    }\r\n    if (!organization.industry) {\r\n      newErrors.industry = 'Industry is required.';\r\n      isValid = false;\r\n    }\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Simulate API call to update organization data\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      toast.success('Organization updated successfully!');\r\n      navigate(`/admin/organizations/${id}`);\r\n    } catch (error) {\r\n      toast.error('Failed to update organization.');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Edit Organization</h2>\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n            Organization Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={organization.name}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          />\r\n          {errors.name && <p className=\"text-red-500 text-sm\">{errors.name}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n            Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={organization.email}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          />\r\n          {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700\">\r\n            Phone\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            value={organization.phone}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          />\r\n          {errors.phone && <p className=\"text-red-500 text-sm\">{errors.phone}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"industry\" className=\"block text-sm font-medium text-gray-700\">\r\n            Industry\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"industry\"\r\n            name=\"industry\"\r\n            value={organization.industry}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          />\r\n          {errors.industry && <p className=\"text-red-500 text-sm\">{errors.industry}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700\">\r\n            Address\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"address\"\r\n            name=\"address\"\r\n            value={organization.address}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          />\r\n          {errors.address && <p className=\"text-red-500 text-sm\">{errors.address}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"joinedDate\" className=\"block text-sm font-medium text-gray-700\">\r\n            Joined Date\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"joinedDate\"\r\n            name=\"joinedDate\"\r\n            value={organization.joinedDate}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n        <div className=\"flex justify-end\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => navigate(`/admin/organizations/${id}`)}\r\n            className=\"mr-2 inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst EditCustomer = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [customer, setCustomer] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n    organization: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchCustomer = async () => {\r\n      try {\r\n        // Simulate fetching customer data from API\r\n        const mockCustomer = {\r\n          id: 1,\r\n          name: 'John Doe',\r\n          email: 'john.doe@example.com',\r\n          phone: '123-456-7890',\r\n          address: '123 Main St, Anytown, USA',\r\n          organization: 'Global Solutions',\r\n        };\r\n        setCustomer(mockCustomer);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        toast.error('Failed to fetch customer data.');\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCustomer();\r\n  }, [id]);\r\n\r\n  const handleChange = (e) => {\r\n    setCustomer({ ...customer, [e.target.name]: e.target.value });\r\n    setErrors({ ...errors, [e.target.name]: '' }); // Clear error on change\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (!customer.name) {\r\n      newErrors.name = 'Customer name is required.';\r\n      isValid = false;\r\n    }\r\n    if (!customer.email) {\r\n      newErrors.email = 'Email is required.';\r\n      isValid = false;\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(customer.email)) {\r\n      newErrors.email = 'Invalid email format.';\r\n      isValid = false;\r\n    }\r\n    if (!customer.phone) {\r\n      newErrors.phone = 'Phone number is required.';\r\n      isValid = false;\r\n    }\r\n    if (!customer.address) {\r\n      newErrors.address = 'Address is required.';\r\n      isValid = false;\r\n    }\r\n    if (!customer.organization) {\r\n      newErrors.organization = 'Organization is required.';\r\n      isValid = false;\r\n    }\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Simulate API call to update customer data\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      toast.success('Customer updated successfully!');\r\n      navigate(`/admin/customers/${id}`);\r\n    } catch (error) {\r\n      toast.error('Failed to update customer.');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Edit Customer</h2>\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n            Customer Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={customer.name}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          />\r\n          {errors.name && <p className=\"text-red-500 text-sm\">{errors.name}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n            Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={customer.email}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          />\r\n          {errors.email && <p className=\"text-red-500 text-sm\">{errors.email}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700\">\r\n            Phone\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"phone\"\r\n            name=\"phone\"\r\n            value={customer.phone}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          />\r\n          {errors.phone && <p className=\"text-red-500 text-sm\">{errors.phone}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700\">\r\n            Address\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"address\"\r\n            name=\"address\"\r\n            value={customer.address}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          />\r\n          {errors.address && <p className=\"text-red-500 text-sm\">{errors.address}</p>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"organization\" className=\"block text-sm font-medium text-gray-700\">\r\n            Organization\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"organization\"\r\n            name=\"organization\"\r\n            value={customer.organization}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\r\n          />\r\n          {errors.organization && <p className=\"text-red-500 text-sm\">{errors.organization}</p>}\r\n        </div>\r\n        <div className=\"flex justify-end\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => navigate(`/admin/customers/${id}`)}\r\n            className=\"mr-2 inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AdminRoutes = () => (\r\n  <AdminAuthProvider>\r\n    <Routes>\r\n      <Route path=\"login\" element={<Login />} />\r\n      <Route path=\"forgot-password\" element={<ForgotPassword />} />\r\n      <Route element={<ProtectedRoute><AdminLayout /></ProtectedRoute>}>\r\n        <Route path=\"dashboard\" element={<Dashboard />} />\r\n        <Route path=\"bookings\" element={<Bookings />} />\r\n        <Route path=\"customers/Individual\" element={<Customers />} />\r\n        <Route path=\"customers/organization\" element={<Customers />} />\r\n        <Route path=\"services\" element={<Services />} />\r\n        <Route path=\"products\" element={<Products />} />\r\n        <Route path=\"settings\" element={<AdminSettings />} />\r\n        <Route path=\"booking-form\" element={<BookingForm />} />\r\n        <Route path=\"reports\" element={<Reports />} />\r\n        {/* New Pages */}\r\n        <Route path=\"booking-history\" element={<BookingHistory />} />\r\n        <Route path=\"service-history\" element={<ServiceHistory />} />\r\n        <Route path=\"organizations\" element={<Organizations />} />\r\n        {/* Drill-down Pages */}\r\n        <Route path=\"customers/:id\" element={<CustomerDetail />} />\r\n        <Route path=\"organizations/:id\" element={<OrganizationDetail />} />\r\n        {/* Edit Pages */}\r\n        <Route path=\"customers/edit/:id\" element={EditCustomer} />\r\n        <Route path=\"organizations/edit/:id\" element={EditOrganization} />\r\n        {/* Add more admin routes here */}\r\n        <Route path=\"*\" element={<NotFound />} />\r\n      </Route>\r\n    </Routes>\r\n  </AdminAuthProvider>\r\n);\r\n\r\nexport default AdminRoutes;\r\n","export const formatCurrency = (amount) => {\r\n  return new Intl.NumberFormat('en-NG', {\r\n    style: 'currency',\r\n    currency: 'NGN',\r\n  }).format(amount);\r\n};\r\n"],"names":["_ref","isOpen","onLinkClick","customerMenuOpen","setCustomerMenuOpen","useState","navItems","name","path","icon","_jsx","FiHome","FiCalendar","FiBox","FiTool","FiSettings","_jsxs","_Fragment","children","className","concat","map","item","NavLink","to","title","onClick","_ref2","isActive","FiUsers","FiChevronDown","localStorage","removeItem","FiLogOut","Breadcrumb","location","useLocation","getBreadcrumbs","pathnames","pathname","split","filter","x","index","routeTo","slice","join","isLast","length","displayName","charAt","toUpperCase","replace","trim","Link","toggleSidebar","useNavigate","FiMenu","size","FiUser","Footer","Date","getFullYear","AdminLayout","isSidebarOpen","setSidebarOpen","isMobile","setIsMobile","window","innerWidth","useEffect","handleResize","mobile","addEventListener","removeEventListener","Sidebar","handleLinkClick","Header","Outlet","Toaster","position","BookingForm","steps","currentStep","setCurrentStep","formData","setFormData","service","date","time","customerName","customerEmail","errors","setErrors","validateStep","newErrors","isValid","test","handleChange","e","value","target","_objectSpread","step","React","style","width","left","renderStepContent","htmlFor","type","id","onChange","placeholder","handleBack","disabled","handleSubmit","console","log","alert","handleNext","data","bookings","BookingsChart","ResponsiveContainer","height","LineChart","margin","top","right","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","activeDot","r","fill","LoadingSpinner","Dashboard","stats","setStats","customers","revenue","bookingsThisWeek","setBookingsThisWeek","topServices","setTopServices","activeOrganizations","setActiveOrganizations","newCustomersThisMonth","setNewCustomersThisMonth","isLoading","setIsLoading","async","Promise","resolve","setTimeout","count","fetchStats","FiDollarSign","FiTrendingUp","FiAward","FiBriefcase","FiUserPlus","description","timestamp","activity","FiActivity","FiClock","Bookings","setBookings","customer","status","userType","converted","fetchBookings","searchTerm","setSearchTerm","filterStatus","setFilterStatus","filterUserType","setFilterUserType","filterService","setFilterService","filterDateRange","setFilterDateRange","currentPage","setCurrentPage","isDetailModalOpen","setIsDetailModalOpen","selectedBooking","setSelectedBooking","uniqueServices","Set","booking","filteredBookings","matchesSearch","toLowerCase","includes","matchesStatus","matchesUserType","matchesService","bookingDate","today","matchesDateRange","toDateString","firstDayOfWeek","setDate","getDate","getDay","lastDayOfWeek","getMonth","totalPages","Math","ceil","currentBookings","handlePageChange","page","scope","bookingId","updatePromise","reject","res","prevBookings","toast","promise","loading","success","message","error","handleMarkCompleted","FiCheckCircle","handleCancelBooking","FiXCircle","handleViewDetails","FiInfo","Array","from","_","i","closeDetailModal","AdminAuthContext","createContext","dummyCredentials","AdminAuthProvider","isAdminLoggedIn","setIsAdminLoggedIn","getItem","Provider","login","username","password","setItem","logout","Login","useContext","form","setForm","setError","navigate","AuthLayout","src","alt","onSubmit","preventDefault","result","autoComplete","required","Customers","setCustomers","email","phone","totalBookings","lastServiceDate","organization","fetchCustomers","filterType","setFilterType","isModalOpen","setIsModalOpen","editingCustomer","setEditingCustomer","deleteConfirmOpen","setDeleteConfirmOpen","customerToDeleteId","setCustomerToDeleteId","filteredCustomers","matchesFilter","undefined","currentCustomers","info","handleDeleteCustomer","customerId","closeModal","xmlns","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","confirmDelete","deletePromise","prevCustomers","closeDeleteConfirmModal","initialData","category","prevData","rows","Services","services","setServices","fetchServices","editingService","setEditingService","serviceToDeleteId","setServiceToDeleteId","filteredServices","currentServices","handleEditProduct","product","FiEdit","handleDeleteProduct","FiTrash2","ServiceForm","newService","actionPromise","prevServices","serviceWithId","price","image","min","Products","products","setProducts","stock","fetchProducts","editingProduct","setEditingProduct","productToDeleteId","setProductToDeleteId","filterCategory","setFilterCategory","filterStock","setFilterStock","sortBy","setSortBy","sortOrder","setSortOrder","filteredProducts","matchesCategory","matchesStock","sortedProducts","sort","a","b","localeCompare","currentProducts","FiPlus","ProductForm","newProduct","prevProducts","productWithId","formatCurrency","productId","AdminSettings","Reports","Navigate","NotFound","ForgotPassword","setEmail","setMessage","err","BookingHistory","mechanic","hasReceipt","filterCustomer","setFilterCustomer","filterMechanic","setFilterMechanic","uniqueOrganizations","Boolean","uniqueMechanics","matchesCustomerOrOrg","matchesMechanic","org","FiEye","FiDownload","FiMessageCircle","ServiceHistory","serviceType","filterServiceType","setFilterServiceType","s","uniqueServiceTypes","matchesServiceType","serviceDate","Organizations","organizations","setOrganizations","activeCustomers","fetchOrganizations","filteredOrganizations","currentOrganizations","handleDeleteorganization","CustomerDetail","setCustomer","customerBookings","setCustomerBookings","customerServices","setCustomerServices","address","organizationId","notes","joinedDate","fetchData","OrganizationDetail","setOrganization","organizationBookings","setOrganizationBookings","organizationServices","setOrganizationServices","organizationMembers","setOrganizationMembers","industry","role","member","EditOrganization","useParams","fetchOrganization","validateForm","EditCustomer","fetchCustomer","AdminRoutes","Routes","Route","element","ProtectedRoute","amount","Intl","NumberFormat","currency","format"],"sourceRoot":""}