{"version":3,"file":"static/js/798.18c14cf5.chunk.js","mappings":"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","sources":["pages/customer/LoginPage.js","components/ToastPlaceholder.js","utils/guestActivity.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport ToastPlaceholder from '../../components/ToastPlaceholder';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport { getGuestActivities, clearGuestActivities } from '../../utils/guestActivity'; // Import guest activity utilities\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginPage = () => {\r\n  const [toast, setToast] = useState({ message: '', type: '' });\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate(); // Initialize navigate\r\n\r\n  const validateForm = (data) => {\r\n    const newErrors = {};\r\n    if (!data.email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\r\n      newErrors.email = 'Email address is invalid';\r\n    }\r\n    if (!data.password) newErrors.password = 'Password is required';\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => { // Make handleSubmit async\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const data = Object.fromEntries(formData.entries());\r\n\r\n    const validationErrors = validateForm(data);\r\n    setErrors(validationErrors);\r\n\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      // Simulate a successful login\r\n      // In a real app, you would make an API call here\r\n      // For now, we'll simulate success and redirect\r\n      setToast({ message: 'Login successful!', type: 'success' });\r\n      const guestActivities = getGuestActivities(); // Corrected function name\r\n      if (guestActivities.length > 0) {\r\n        console.log('Guest activity found on login:', guestActivities);\r\n        // In a real app, you would send this guestActivities to your backend\r\n        // to attach it to the newly logged-in user.\r\n        clearGuestActivities(); // Corrected function name\r\n      }\r\n      // Determine user type (simulated for now)\r\n      // In a real app, this would come from the login API response\r\n      // For demonstration, we'll simulate a user type.\r\n      const userType = data.email.includes('org') ? 'organization' : 'customer'; // Simple simulation\r\n\r\n      setTimeout(() => {\r\n        if (userType === 'organization') {\r\n          navigate('/organization/dashboard');\r\n        } else {\r\n          navigate('/customer/dashboard');\r\n        }\r\n      }, 1500); // Delay redirect to show toast message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <Helmet>\r\n        <title>Musibau AutoWorks - Login</title>\r\n        <meta name=\"description\" content=\"Login to your Musibau AutoWorks customer account.\" />\r\n      </Helmet>\r\n      <div className=\"max-w-md w-full space-y-8 bg-white p-8 rounded-lg shadow-md\">\r\n        <h2 className=\"text-center text-3xl font-extrabold text-[#004040]\">Welcome Back</h2>\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"sr-only\">Email address</label>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              required\r\n              className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${errors.email ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\r\n              placeholder=\"Email address\"\r\n              aria-label=\"Email Address\"\r\n            />\r\n            {errors.email && <p className=\"text-red-500 text-xs italic\">{errors.email}</p>}\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              required\r\n              className={`appearance-none rounded-none relative block w-full px-3 py-2 border ${errors.password ? 'border-red-500' : 'border-gray-300'} placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm`}\r\n              placeholder=\"Password\"\r\n              aria-label=\"Password\"\r\n            />\r\n            {errors.password && <p className=\"text-red-500 text-xs italic\">{errors.password}</p>}\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember-me\"\r\n                name=\"remember-me\"\r\n                type=\"checkbox\"\r\n                className=\"h-4 w-4 text-[#ECBE07] focus:ring-[#ECBE07] border-gray-300 rounded\"\r\n              />\r\n              <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                Remember me\r\n              </label>\r\n            </div>\r\n            <div className=\"text-sm\">\r\n              <Link to=\"/forgot-password\" className=\"font-medium text-[#ECBE07] hover:text-[#d4a806]\">\r\n                Forgot your password?\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-[#ECBE07] hover:bg-[#d4a806] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#ECBE07]\"\r\n            aria-label=\"Login Button\"\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <ToastPlaceholder message={toast.message} type={toast.type} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\n\r\nconst ToastPlaceholder = ({ message, type }) => {\r\n  if (!message) return null;\r\n\r\n  const toastStyle = {\r\n    padding: '10px',\r\n    margin: '10px 0',\r\n    borderRadius: '5px',\r\n    backgroundColor: type === 'success' ? '#d4edda' : '#f8d7da',\r\n    color: type === 'success' ? '#155724' : '#721c24',\r\n    border: `1px solid ${type === 'success' ? '#c3e6cb' : '#f5c6cb'}`,\r\n  };\r\n\r\n  return (\r\n    <div style={toastStyle}>\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToastPlaceholder;\r\n","// frontend/src/utils/guestActivity.js\r\n\r\nconst GUEST_ACTIVITY_KEY = 'guestActivity';\r\n\r\n/**\r\n * Retrieves all guest activities from local storage.\r\n * @returns {Array} An array of guest activity objects.\r\n */\r\nexport const getGuestActivities = () => {\r\n  try {\r\n    const activities = localStorage.getItem(GUEST_ACTIVITY_KEY);\r\n    return activities ? JSON.parse(activities) : [];\r\n  } catch (error) {\r\n    console.error(\"Error retrieving guest activities from local storage:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Adds a new guest activity to local storage.\r\n * @param {object} activity - The guest activity object to add.\r\n */\r\nexport const addGuestActivity = (activity) => {\r\n  try {\r\n    const activities = getGuestActivities();\r\n    activities.push({ ...activity, timestamp: new Date().toISOString() });\r\n    localStorage.setItem(GUEST_ACTIVITY_KEY, JSON.stringify(activities));\r\n  } catch (error) {\r\n    console.error(\"Error adding guest activity to local storage:\", error);\r\n  }\r\n};\r\n\r\n/**\r\n * Clears all guest activities from local storage.\r\n */\r\nexport const clearGuestActivities = () => {\r\n  try {\r\n    localStorage.removeItem(GUEST_ACTIVITY_KEY);\r\n  } catch (error) {\r\n    console.error(\"Error clearing guest activities from local storage:\", error);\r\n  }\r\n};\r\n\r\n/**\r\n * Example guest data structure:\r\n * {\r\n *   type: 'booking', // or 'product_view', 'inquiry', etc.\r\n *   details: {\r\n *     service: 'Tire Repair',\r\n *     date: '2025-08-10',\r\n *     // other relevant details\r\n *   },\r\n *   timestamp: '2025-08-08T12:00:00.000Z'\r\n * }\r\n */\r\n"],"names":["LoginPage","toast","setToast","useState","message","type","errors","setErrors","navigate","useNavigate","_jsxs","className","children","Helmet","_jsx","name","content","onSubmit","async","e","preventDefault","formData","FormData","target","data","Object","fromEntries","entries","validationErrors","newErrors","email","test","password","validateForm","keys","length","guestActivities","getGuestActivities","console","log","clearGuestActivities","userType","includes","setTimeout","htmlFor","id","autoComplete","required","concat","placeholder","Link","to","ToastPlaceholder","_ref","toastStyle","padding","margin","borderRadius","backgroundColor","color","border","style","GUEST_ACTIVITY_KEY","activities","localStorage","getItem","JSON","parse","error","addGuestActivity","activity","push","_objectSpread","timestamp","Date","toISOString","setItem","stringify","removeItem"],"sourceRoot":""}