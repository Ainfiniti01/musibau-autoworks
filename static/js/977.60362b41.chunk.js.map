{"version":3,"file":"static/js/977.60362b41.chunk.js","mappings":"wJAIA,MA4DA,EA5DoBA,KAClB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,KAAM,MAEDC,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAChCO,EAAOC,IAAYR,EAAAA,EAAAA,UAAS,OAC5BS,EAASC,IAAcV,EAAAA,EAAAA,WAAS,GAEjCW,EAAgBC,IACpBb,EAAYc,IAAI,IAAUA,EAAM,CAACD,EAAEE,OAAOb,MAAOW,EAAEE,OAAOC,UA4B5D,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SA1BaC,UACnBN,EAAEO,iBACFb,GAAW,GACXE,EAAS,MACTE,GAAW,GAEX,IAEE,MAAMU,EAAU,6CAOhB,WANuBC,MAAMD,EAAS,CACpCE,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU5B,MAGT6B,GAAI,MAAM,IAAIC,MAAM,6BAClClB,GAAW,GACjBX,EAAY,CAAEE,KAAM,GAAIC,MAAO,GAAIC,QAAS,GAAIC,KAAM,IAClD,CAAE,MAAOyB,GACPrB,EAASqB,EAAIC,SAAW,+BAC1B,CAAC,QACCxB,GAAW,EACb,GAI6ByB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAO/B,KAAK,OAAOc,MAAOjB,EAASG,KAAMgC,SAAUtB,EAAcuB,YAAY,OAAOC,UAAQ,KAC5FH,EAAAA,EAAAA,KAAA,SAAO/B,KAAK,QAAQc,MAAOjB,EAASI,MAAO+B,SAAUtB,EAAcuB,YAAY,QAAQC,UAAQ,KAC/FnB,EAAAA,EAAAA,MAAA,UAAQf,KAAK,UAAUc,MAAOjB,EAASK,QAAS8B,SAAUtB,EAAcwB,UAAQ,EAAAJ,SAAA,EAC9EC,EAAAA,EAAAA,KAAA,UAAQjB,MAAM,GAAEgB,SAAC,sBACjBC,EAAAA,EAAAA,KAAA,UAAQjB,MAAM,YAAWgB,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,UAAQjB,MAAM,YAAWgB,SAAC,kBAE5BC,EAAAA,EAAAA,KAAA,SAAOI,KAAK,OAAOnC,KAAK,OAAOc,MAAOjB,EAASM,KAAM6B,SAAUtB,EAAcwB,UAAQ,IAEpF9B,IAAW2B,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kBACdxB,IAASyB,EAAAA,EAAAA,KAAA,KAAGK,MAAO,CAAEC,MAAO,OAAQP,SAAExB,IACtCE,IAAWuB,EAAAA,EAAAA,KAAA,KAAGK,MAAO,CAAEC,MAAO,SAAUP,SAAC,yBAE1CC,EAAAA,EAAAA,KAAA,UAAQI,KAAK,SAASG,SAAUlC,EAAQ0B,SAAC,sB","sources":["pages/public/BookingPage.js"],"sourcesContent":["// TODO: This form currently submits to a dummy API URL (jsonplaceholder). Replace with the real booking API provided by the client.\r\n\r\nimport { useState } from 'react';\r\n\r\nconst BookingPage = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    service: '',\r\n    date: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData(prev => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(false);\r\n\r\n    try {\r\n      // TODO: Replace with real API endpoint from client\r\n      const API_URL = 'https://jsonplaceholder.typicode.com/posts';\r\n      const response = await fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Booking submission failed');\r\n      setSuccess(true);\r\nsetFormData({ name: '', email: '', service: '', date: '' });\r\n    } catch (err) {\r\n      setError(err.message || 'An unexpected error occurred');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input name=\"name\" value={formData.name} onChange={handleChange} placeholder=\"Name\" required />\r\n      <input name=\"email\" value={formData.email} onChange={handleChange} placeholder=\"Email\" required />\r\n      <select name=\"service\" value={formData.service} onChange={handleChange} required>\r\n        <option value=\"\">Select a service</option>\r\n        <option value=\"Service 1\">Service 1</option>\r\n        <option value=\"Service 2\">Service 2</option>\r\n      </select>\r\n      <input type=\"date\" name=\"date\" value={formData.date} onChange={handleChange} required />\r\n\r\n      {loading && <p>Submitting...</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {success && <p style={{ color: 'green' }}>Booking successful!</p>}\r\n\r\n      <button type=\"submit\" disabled={loading}>Submit Booking</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BookingPage;\r\n"],"names":["BookingPage","formData","setFormData","useState","name","email","service","date","loading","setLoading","error","setError","success","setSuccess","handleChange","e","prev","target","value","_jsxs","onSubmit","async","preventDefault","API_URL","fetch","method","headers","body","JSON","stringify","ok","Error","err","message","children","_jsx","onChange","placeholder","required","type","style","color","disabled"],"sourceRoot":""}